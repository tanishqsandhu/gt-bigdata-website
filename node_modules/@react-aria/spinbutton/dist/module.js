import {announce as $915Kq$announce} from "@react-aria/live-announcer";
import {useRef as $915Kq$useRef, useEffect as $915Kq$useEffect, useCallback as $915Kq$useCallback} from "react";
import {useGlobalListeners as $915Kq$useGlobalListeners} from "@react-aria/utils";
import {useMessageFormatter as $915Kq$useMessageFormatter} from "@react-aria/i18n";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $7fc2c1269c209e7a$exports = {};

$parcel$export($7fc2c1269c209e7a$exports, "useSpinButton", () => $7fc2c1269c209e7a$export$e908e06f4b8e3402);


var $340b38cae631a990$exports = {};
var $b9502ca1ed2a658b$exports = {};
$b9502ca1ed2a658b$exports = JSON.parse("{\"Empty\":\"فارغ\"}");


var $f5536daa79264fee$exports = {};
$f5536daa79264fee$exports = JSON.parse("{\"Empty\":\"Изпразни\"}");


var $cf7f4a4198f8a132$exports = {};
$cf7f4a4198f8a132$exports = JSON.parse("{\"Empty\":\"Prázdné\"}");


var $a125126b72296152$exports = {};
$a125126b72296152$exports = JSON.parse("{\"Empty\":\"Tom\"}");


var $14e8c357b1f6a729$exports = {};
$14e8c357b1f6a729$exports = JSON.parse("{\"Empty\":\"Leer\"}");


var $80806430c53bf3df$exports = {};
$80806430c53bf3df$exports = JSON.parse("{\"Empty\":\"Άδειο\"}");


var $9da37b54727bdc96$exports = {};
$9da37b54727bdc96$exports = JSON.parse("{\"Empty\":\"Empty\"}");


var $4858ca7e134011e0$exports = {};
$4858ca7e134011e0$exports = JSON.parse("{\"Empty\":\"Vacío\"}");


var $84ca1479916e1b99$exports = {};
$84ca1479916e1b99$exports = JSON.parse("{\"Empty\":\"Tühjenda\"}");


var $93f5a002624d1f4c$exports = {};
$93f5a002624d1f4c$exports = JSON.parse("{\"Empty\":\"Tyhjä\"}");


var $aed3a2b812f0d51c$exports = {};
$aed3a2b812f0d51c$exports = JSON.parse("{\"Empty\":\"Vide\"}");


var $dee73af7873d6102$exports = {};
$dee73af7873d6102$exports = JSON.parse("{\"Empty\":\"ריק\"}");


var $7eb77a2dda24ed8e$exports = {};
$7eb77a2dda24ed8e$exports = JSON.parse("{\"Empty\":\"Prazno\"}");


var $3226a172ca65c1f5$exports = {};
$3226a172ca65c1f5$exports = JSON.parse("{\"Empty\":\"Üres\"}");


var $2b2ffbc3f0ade025$exports = {};
$2b2ffbc3f0ade025$exports = JSON.parse("{\"Empty\":\"Vuoto\"}");


var $e9c8e101022d809a$exports = {};
$e9c8e101022d809a$exports = JSON.parse("{\"Empty\":\"空\"}");


var $63f4629129a8bd6a$exports = {};
$63f4629129a8bd6a$exports = JSON.parse("{\"Empty\":\"비어 있음\"}");


var $047e27ea7822a64e$exports = {};
$047e27ea7822a64e$exports = JSON.parse("{\"Empty\":\"Tuščias\"}");


var $4f52beb8d7a97f37$exports = {};
$4f52beb8d7a97f37$exports = JSON.parse("{\"Empty\":\"Tukšs\"}");


var $e239fc54935fc6fe$exports = {};
$e239fc54935fc6fe$exports = JSON.parse("{\"Empty\":\"Tom\"}");


var $ff50d75ac63d2fe2$exports = {};
$ff50d75ac63d2fe2$exports = JSON.parse("{\"Empty\":\"Leeg\"}");


var $cb34519c43c80fbd$exports = {};
$cb34519c43c80fbd$exports = JSON.parse("{\"Empty\":\"Pusty\"}");


var $6335d0590d9b3b46$exports = {};
$6335d0590d9b3b46$exports = JSON.parse("{\"Empty\":\"Vazio\"}");


var $b352cf5a7254cc64$exports = {};
$b352cf5a7254cc64$exports = JSON.parse("{\"Empty\":\"Vazio\"}");


var $0421d1820ca63df4$exports = {};
$0421d1820ca63df4$exports = JSON.parse("{\"Empty\":\"Gol\"}");


var $cd59ecc168767389$exports = {};
$cd59ecc168767389$exports = JSON.parse("{\"Empty\":\"Не заполнено\"}");


var $73864cfe6f4130a9$exports = {};
$73864cfe6f4130a9$exports = JSON.parse("{\"Empty\":\"Prázdne\"}");


var $85a540e317a6ade4$exports = {};
$85a540e317a6ade4$exports = JSON.parse("{\"Empty\":\"Prazen\"}");


var $42d477601e71a1b4$exports = {};
$42d477601e71a1b4$exports = JSON.parse("{\"Empty\":\"Prazno\"}");


var $a8d88b556f2ce245$exports = {};
$a8d88b556f2ce245$exports = JSON.parse("{\"Empty\":\"Tomt\"}");


var $ab8e9d7da7315d53$exports = {};
$ab8e9d7da7315d53$exports = JSON.parse("{\"Empty\":\"Boş\"}");


var $73c9a5841c568e45$exports = {};
$73c9a5841c568e45$exports = JSON.parse("{\"Empty\":\"Пусто\"}");


var $35b700e586161794$exports = {};
$35b700e586161794$exports = JSON.parse("{\"Empty\":\"空\"}");


var $53ac17eac2b15927$exports = {};
$53ac17eac2b15927$exports = JSON.parse("{\"Empty\":\"空白\"}");


$340b38cae631a990$exports = {
    "ar-AE": $b9502ca1ed2a658b$exports,
    "bg-BG": $f5536daa79264fee$exports,
    "cs-CZ": $cf7f4a4198f8a132$exports,
    "da-DK": $a125126b72296152$exports,
    "de-DE": $14e8c357b1f6a729$exports,
    "el-GR": $80806430c53bf3df$exports,
    "en-US": $9da37b54727bdc96$exports,
    "es-ES": $4858ca7e134011e0$exports,
    "et-EE": $84ca1479916e1b99$exports,
    "fi-FI": $93f5a002624d1f4c$exports,
    "fr-FR": $aed3a2b812f0d51c$exports,
    "he-IL": $dee73af7873d6102$exports,
    "hr-HR": $7eb77a2dda24ed8e$exports,
    "hu-HU": $3226a172ca65c1f5$exports,
    "it-IT": $2b2ffbc3f0ade025$exports,
    "ja-JP": $e9c8e101022d809a$exports,
    "ko-KR": $63f4629129a8bd6a$exports,
    "lt-LT": $047e27ea7822a64e$exports,
    "lv-LV": $4f52beb8d7a97f37$exports,
    "nb-NO": $e239fc54935fc6fe$exports,
    "nl-NL": $ff50d75ac63d2fe2$exports,
    "pl-PL": $cb34519c43c80fbd$exports,
    "pt-BR": $6335d0590d9b3b46$exports,
    "pt-PT": $b352cf5a7254cc64$exports,
    "ro-RO": $0421d1820ca63df4$exports,
    "ru-RU": $cd59ecc168767389$exports,
    "sk-SK": $73864cfe6f4130a9$exports,
    "sl-SI": $85a540e317a6ade4$exports,
    "sr-SP": $42d477601e71a1b4$exports,
    "sv-SE": $a8d88b556f2ce245$exports,
    "tr-TR": $ab8e9d7da7315d53$exports,
    "uk-UA": $73c9a5841c568e45$exports,
    "zh-CN": $35b700e586161794$exports,
    "zh-TW": $53ac17eac2b15927$exports
};




function $7fc2c1269c209e7a$export$e908e06f4b8e3402(props) {
    const _async = $915Kq$useRef();
    let { value: value , textValue: textValue , minValue: minValue , maxValue: maxValue , isDisabled: isDisabled , isReadOnly: isReadOnly , isRequired: isRequired , onIncrement: onIncrement , onIncrementPage: onIncrementPage , onDecrement: onDecrement , onDecrementPage: onDecrementPage , onDecrementToMin: onDecrementToMin , onIncrementToMax: onIncrementToMax  } = props;
    const formatMessage = $915Kq$useMessageFormatter((/*@__PURE__*/$parcel$interopDefault($340b38cae631a990$exports)));
    const propsRef = $915Kq$useRef(props);
    propsRef.current = props;
    const clearAsync = ()=>clearTimeout(_async.current)
    ;
    // eslint-disable-next-line arrow-body-style
    $915Kq$useEffect(()=>{
        return ()=>clearAsync()
        ;
    }, []);
    let onKeyDown = (e)=>{
        if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) return;
        switch(e.key){
            case 'PageUp':
                if (onIncrementPage) {
                    e.preventDefault();
                    onIncrementPage();
                    break;
                }
            // fallthrough!
            case 'ArrowUp':
            case 'Up':
                if (onIncrement) {
                    e.preventDefault();
                    onIncrement();
                }
                break;
            case 'PageDown':
                if (onDecrementPage) {
                    e.preventDefault();
                    onDecrementPage();
                    break;
                }
            // fallthrough
            case 'ArrowDown':
            case 'Down':
                if (onDecrement) {
                    e.preventDefault();
                    onDecrement();
                }
                break;
            case 'Home':
                if (onDecrementToMin) {
                    e.preventDefault();
                    onDecrementToMin();
                }
                break;
            case 'End':
                if (onIncrementToMax) {
                    e.preventDefault();
                    onIncrementToMax();
                }
                break;
        }
    };
    let isFocused = $915Kq$useRef(false);
    let onFocus = ()=>{
        isFocused.current = true;
    };
    let onBlur = ()=>{
        isFocused.current = false;
    };
    // Replace Unicode hyphen-minus (U+002D) with minus sign (U+2212).
    // This ensures that macOS VoiceOver announces it as "minus" even with other characters between the minus sign
    // and the number (e.g. currency symbol). Otherwise it announces nothing because it assumes the character is a hyphen.
    // In addition, replace the empty string with the word "Empty" so that iOS VoiceOver does not read "50%" for an empty field.
    textValue = textValue === '' ? formatMessage('Empty') : (textValue || `${value}`).replace('-', '\u2212');
    $915Kq$useEffect(()=>{
        if (isFocused.current) $915Kq$announce(textValue, 'assertive');
    }, [
        textValue
    ]);
    const onIncrementPressStart = $915Kq$useCallback((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onIncrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(maxValue) || isNaN(value) || value < maxValue) onIncrementPressStart(60);
        }, initialStepDelay);
    }, [
        onIncrement,
        maxValue,
        value
    ]);
    const onDecrementPressStart = $915Kq$useCallback((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onDecrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(minValue) || isNaN(value) || value > minValue) onDecrementPressStart(60);
        }, initialStepDelay);
    }, [
        onDecrement,
        minValue,
        value
    ]);
    let cancelContextMenu = (e)=>{
        e.preventDefault();
    };
    let { addGlobalListener: addGlobalListener , removeAllGlobalListeners: removeAllGlobalListeners  } = $915Kq$useGlobalListeners();
    return {
        spinButtonProps: {
            role: 'spinbutton',
            'aria-valuenow': !isNaN(value) ? value : null,
            'aria-valuetext': textValue,
            'aria-valuemin': minValue,
            'aria-valuemax': maxValue,
            'aria-disabled': isDisabled || null,
            'aria-readonly': isReadOnly || null,
            'aria-required': isRequired || null,
            onKeyDown: onKeyDown,
            onFocus: onFocus,
            onBlur: onBlur
        },
        incrementButtonProps: {
            onPressStart: ()=>{
                onIncrementPressStart(400);
                addGlobalListener(window, 'contextmenu', cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        },
        decrementButtonProps: {
            onPressStart: ()=>{
                onDecrementPressStart(400);
                addGlobalListener(window, 'contextmenu', cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        }
    };
}




export {$7fc2c1269c209e7a$export$e908e06f4b8e3402 as useSpinButton};
//# sourceMappingURL=module.js.map
