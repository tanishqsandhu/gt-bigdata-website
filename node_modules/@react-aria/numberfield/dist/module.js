import {useId as $1eWaC$useId, isIPhone as $1eWaC$isIPhone, isAndroid as $1eWaC$isAndroid, filterDOMProps as $1eWaC$filterDOMProps, mergeProps as $1eWaC$mergeProps, isIOS as $1eWaC$isIOS} from "@react-aria/utils";
import {useState as $1eWaC$useState, useCallback as $1eWaC$useCallback, useMemo as $1eWaC$useMemo} from "react";
import {useFocus as $1eWaC$useFocus, useFocusWithin as $1eWaC$useFocusWithin, useScrollWheel as $1eWaC$useScrollWheel} from "@react-aria/interactions";
import {useFormattedTextField as $1eWaC$useFormattedTextField} from "@react-aria/textfield";
import {useMessageFormatter as $1eWaC$useMessageFormatter, useNumberFormatter as $1eWaC$useNumberFormatter} from "@react-aria/i18n";
import {useSpinButton as $1eWaC$useSpinButton} from "@react-aria/spinbutton";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $cf0c3bd5e1672ec9$exports = {};

$parcel$export($cf0c3bd5e1672ec9$exports, "useNumberField", () => $cf0c3bd5e1672ec9$export$23f548e970bdf099);


var $2dbd11b99107b9a3$exports = {};
var $6549386043ae9318$exports = {};
$6549386043ae9318$exports = JSON.parse("{\"decrease\":\"خفض {fieldLabel}\",\"increase\":\"زيادة {fieldLabel}\",\"numberField\":\"حقل رقمي\"}");


var $e76bce23c5e8423e$exports = {};
$e76bce23c5e8423e$exports = JSON.parse("{\"decrease\":\"Намаляване {fieldLabel}\",\"increase\":\"Усилване {fieldLabel}\",\"numberField\":\"Номер на полето\"}");


var $6129a2a27a7967ba$exports = {};
$6129a2a27a7967ba$exports = JSON.parse("{\"decrease\":\"Snížit {fieldLabel}\",\"increase\":\"Zvýšit {fieldLabel}\",\"numberField\":\"Číselné pole\"}");


var $52dac2657f2e7b91$exports = {};
$52dac2657f2e7b91$exports = JSON.parse("{\"decrease\":\"Reducer {fieldLabel}\",\"increase\":\"Øg {fieldLabel}\",\"numberField\":\"Talfelt\"}");


var $2d5c0936198b9a1d$exports = {};
$2d5c0936198b9a1d$exports = JSON.parse("{\"decrease\":\"{fieldLabel} verringern\",\"increase\":\"{fieldLabel} erhöhen\",\"numberField\":\"Nummernfeld\"}");


var $037bbc3daaf1c938$exports = {};
$037bbc3daaf1c938$exports = JSON.parse("{\"decrease\":\"Μείωση {fieldLabel}\",\"increase\":\"Αύξηση {fieldLabel}\",\"numberField\":\"Πεδίο αριθμού\"}");


var $6f0e76066d1c5161$exports = {};
$6f0e76066d1c5161$exports = JSON.parse("{\"decrease\":\"Decrease {fieldLabel}\",\"increase\":\"Increase {fieldLabel}\",\"numberField\":\"Number field\"}");


var $ae410a5d2bee905f$exports = {};
$ae410a5d2bee905f$exports = JSON.parse("{\"decrease\":\"Reducir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo de número\"}");


var $ba7e088ac7327440$exports = {};
$ba7e088ac7327440$exports = JSON.parse("{\"decrease\":\"Vähenda {fieldLabel}\",\"increase\":\"Suurenda {fieldLabel}\",\"numberField\":\"Numbri väli\"}");


var $16b3c05b733de903$exports = {};
$16b3c05b733de903$exports = JSON.parse("{\"decrease\":\"Vähennä {fieldLabel}\",\"increase\":\"Lisää {fieldLabel}\",\"numberField\":\"Numerokenttä\"}");


var $e8b2524c965f690e$exports = {};
$e8b2524c965f690e$exports = JSON.parse("{\"decrease\":\"Diminuer {fieldLabel}\",\"increase\":\"Augmenter {fieldLabel}\",\"numberField\":\"Champ de nombre\"}");


var $a6493a4a0eba3e94$exports = {};
$a6493a4a0eba3e94$exports = JSON.parse("{\"decrease\":\"הקטן {fieldLabel}\",\"increase\":\"הגדל {fieldLabel}\",\"numberField\":\"שדה מספר\"}");


var $fc83409ad17dbb8e$exports = {};
$fc83409ad17dbb8e$exports = JSON.parse("{\"decrease\":\"Smanji {fieldLabel}\",\"increase\":\"Povećaj {fieldLabel}\",\"numberField\":\"Polje broja\"}");


var $7fbda66289952e59$exports = {};
$7fbda66289952e59$exports = JSON.parse("{\"decrease\":\"{fieldLabel} csökkentése\",\"increase\":\"{fieldLabel} növelése\",\"numberField\":\"Számmező\"}");


var $0ca9c2faa64e1737$exports = {};
$0ca9c2faa64e1737$exports = JSON.parse("{\"decrease\":\"Riduci {fieldLabel}\",\"increase\":\"Aumenta {fieldLabel}\",\"numberField\":\"Campo numero\"}");


var $40b39fb57e4e01eb$exports = {};
$40b39fb57e4e01eb$exports = JSON.parse("{\"decrease\":\"{fieldLabel}を縮小\",\"increase\":\"{fieldLabel}を拡大\",\"numberField\":\"数値フィールド\"}");


var $eb43f79428829329$exports = {};
$eb43f79428829329$exports = JSON.parse("{\"decrease\":\"{fieldLabel} 감소\",\"increase\":\"{fieldLabel} 증가\",\"numberField\":\"번호 필드\"}");


var $8716579631e81e6b$exports = {};
$8716579631e81e6b$exports = JSON.parse("{\"decrease\":\"Sumažinti {fieldLabel}\",\"increase\":\"Padidinti {fieldLabel}\",\"numberField\":\"Numerio laukas\"}");


var $fb4343b9e8e55d54$exports = {};
$fb4343b9e8e55d54$exports = JSON.parse("{\"decrease\":\"Samazināšana {fieldLabel}\",\"increase\":\"Palielināšana {fieldLabel}\",\"numberField\":\"Skaitļu lauks\"}");


var $e1efff358f8fa070$exports = {};
$e1efff358f8fa070$exports = JSON.parse("{\"decrease\":\"Reduser {fieldLabel}\",\"increase\":\"Øk {fieldLabel}\",\"numberField\":\"Tallfelt\"}");


var $78c91c3ffeb5bcda$exports = {};
$78c91c3ffeb5bcda$exports = JSON.parse("{\"decrease\":\"{fieldLabel} verlagen\",\"increase\":\"{fieldLabel} verhogen\",\"numberField\":\"Getalveld\"}");


var $847dfd0520968639$exports = {};
$847dfd0520968639$exports = JSON.parse("{\"decrease\":\"Zmniejsz {fieldLabel}\",\"increase\":\"Zwiększ {fieldLabel}\",\"numberField\":\"Pole numeru\"}");


var $f4204c08266aeca6$exports = {};
$f4204c08266aeca6$exports = JSON.parse("{\"decrease\":\"Diminuir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo de número\"}");


var $d500387cf5000fdc$exports = {};
$d500387cf5000fdc$exports = JSON.parse("{\"decrease\":\"Diminuir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo numérico\"}");


var $ab2719432eedc1bf$exports = {};
$ab2719432eedc1bf$exports = JSON.parse("{\"decrease\":\"Scădere {fieldLabel}\",\"increase\":\"Creștere {fieldLabel}\",\"numberField\":\"Câmp numeric\"}");


var $4bf211274c587106$exports = {};
$4bf211274c587106$exports = JSON.parse("{\"decrease\":\"Уменьшение {fieldLabel}\",\"increase\":\"Увеличение {fieldLabel}\",\"numberField\":\"Числовое поле\"}");


var $5951afc4ac07f078$exports = {};
$5951afc4ac07f078$exports = JSON.parse("{\"decrease\":\"Znížiť {fieldLabel}\",\"increase\":\"Zvýšiť {fieldLabel}\",\"numberField\":\"Číselné pole\"}");


var $1340581fca173f3e$exports = {};
$1340581fca173f3e$exports = JSON.parse("{\"decrease\":\"Upadati {fieldLabel}\",\"increase\":\"Povečajte {fieldLabel}\",\"numberField\":\"Številčno polje\"}");


var $2b759d676253b2c8$exports = {};
$2b759d676253b2c8$exports = JSON.parse("{\"decrease\":\"Decrease {fieldLabel}\",\"increase\":\"Increase {fieldLabel}\",\"numberField\":\"Number field\"}");


var $b0c674a42fff90cb$exports = {};
$b0c674a42fff90cb$exports = JSON.parse("{\"decrease\":\"Minska {fieldLabel}\",\"increase\":\"Öka {fieldLabel}\",\"numberField\":\"Nummerfält\"}");


var $76371f1c7f27bc91$exports = {};
$76371f1c7f27bc91$exports = JSON.parse("{\"decrease\":\"{fieldLabel} azalt\",\"increase\":\"{fieldLabel} arttır\",\"numberField\":\"Sayı alanı\"}");


var $361acbd473fb967c$exports = {};
$361acbd473fb967c$exports = JSON.parse("{\"decrease\":\"Зменшити {fieldLabel}\",\"increase\":\"Збільшити {fieldLabel}\",\"numberField\":\"Поле номера\"}");


var $208c820c7d7354a7$exports = {};
$208c820c7d7354a7$exports = JSON.parse("{\"decrease\":\"降低 {fieldLabel}\",\"increase\":\"提高 {fieldLabel}\",\"numberField\":\"数字字段\"}");


var $e03c2cf780f9cea4$exports = {};
$e03c2cf780f9cea4$exports = JSON.parse("{\"decrease\":\"縮小 {fieldLabel}\",\"increase\":\"放大 {fieldLabel}\",\"numberField\":\"數字欄位\"}");


$2dbd11b99107b9a3$exports = {
    "ar-AE": $6549386043ae9318$exports,
    "bg-BG": $e76bce23c5e8423e$exports,
    "cs-CZ": $6129a2a27a7967ba$exports,
    "da-DK": $52dac2657f2e7b91$exports,
    "de-DE": $2d5c0936198b9a1d$exports,
    "el-GR": $037bbc3daaf1c938$exports,
    "en-US": $6f0e76066d1c5161$exports,
    "es-ES": $ae410a5d2bee905f$exports,
    "et-EE": $ba7e088ac7327440$exports,
    "fi-FI": $16b3c05b733de903$exports,
    "fr-FR": $e8b2524c965f690e$exports,
    "he-IL": $a6493a4a0eba3e94$exports,
    "hr-HR": $fc83409ad17dbb8e$exports,
    "hu-HU": $7fbda66289952e59$exports,
    "it-IT": $0ca9c2faa64e1737$exports,
    "ja-JP": $40b39fb57e4e01eb$exports,
    "ko-KR": $eb43f79428829329$exports,
    "lt-LT": $8716579631e81e6b$exports,
    "lv-LV": $fb4343b9e8e55d54$exports,
    "nb-NO": $e1efff358f8fa070$exports,
    "nl-NL": $78c91c3ffeb5bcda$exports,
    "pl-PL": $847dfd0520968639$exports,
    "pt-BR": $f4204c08266aeca6$exports,
    "pt-PT": $d500387cf5000fdc$exports,
    "ro-RO": $ab2719432eedc1bf$exports,
    "ru-RU": $4bf211274c587106$exports,
    "sk-SK": $5951afc4ac07f078$exports,
    "sl-SI": $1340581fca173f3e$exports,
    "sr-SP": $2b759d676253b2c8$exports,
    "sv-SE": $b0c674a42fff90cb$exports,
    "tr-TR": $76371f1c7f27bc91$exports,
    "uk-UA": $361acbd473fb967c$exports,
    "zh-CN": $208c820c7d7354a7$exports,
    "zh-TW": $e03c2cf780f9cea4$exports
};







function $cf0c3bd5e1672ec9$export$23f548e970bdf099(props, state, inputRef) {
    let { id: id , decrementAriaLabel: decrementAriaLabel , incrementAriaLabel: incrementAriaLabel , isDisabled: isDisabled , isReadOnly: isReadOnly , isRequired: isRequired , minValue: minValue , maxValue: maxValue , autoFocus: autoFocus , validationState: validationState , label: label , formatOptions: formatOptions , onBlur: onBlur , onFocus: onFocus , onFocusChange: onFocusChange , onKeyDown: onKeyDown , onKeyUp: onKeyUp , description: description , errorMessage: errorMessage  } = props;
    let { increment: increment , incrementToMax: incrementToMax , decrement: decrement , decrementToMin: decrementToMin , numberValue: numberValue , commit: commit  } = state;
    const formatMessage = $1eWaC$useMessageFormatter((/*@__PURE__*/$parcel$interopDefault($2dbd11b99107b9a3$exports)));
    let inputId = $1eWaC$useId(id);
    let { focusProps: focusProps  } = $1eWaC$useFocus({
        onBlur: ()=>{
            // Set input value to normalized valid value
            commit();
        }
    });
    let { spinButtonProps: spinButtonProps , incrementButtonProps: incButtonProps , decrementButtonProps: decButtonProps  } = $1eWaC$useSpinButton({
        isDisabled: isDisabled,
        isReadOnly: isReadOnly,
        isRequired: isRequired,
        maxValue: maxValue,
        minValue: minValue,
        onIncrement: increment,
        onIncrementToMax: incrementToMax,
        onDecrement: decrement,
        onDecrementToMin: decrementToMin,
        value: numberValue,
        textValue: state.inputValue
    });
    let [focusWithin, setFocusWithin] = $1eWaC$useState(false);
    let { focusWithinProps: focusWithinProps  } = $1eWaC$useFocusWithin({
        isDisabled: isDisabled,
        onFocusWithinChange: setFocusWithin
    });
    let onWheel = $1eWaC$useCallback((e)=>{
        // if on a trackpad, users can scroll in both X and Y at once, check the magnitude of the change
        // if it's mostly in the X direction, then just return, the user probably doesn't mean to inc/dec
        // this isn't perfect, events come in fast with small deltas and a part of the scroll may give a false indication
        // especially if the user is scrolling near 45deg
        if (Math.abs(e.deltaY) <= Math.abs(e.deltaX)) return;
        if (e.deltaY > 0) increment();
        else if (e.deltaY < 0) decrement();
    }, [
        decrement,
        increment
    ]);
    // If the input isn't supposed to receive input, disable scrolling.
    let scrollingDisabled = isDisabled || isReadOnly || !focusWithin;
    $1eWaC$useScrollWheel({
        onScroll: onWheel,
        isDisabled: scrollingDisabled
    }, inputRef);
    // The inputMode attribute influences the software keyboard that is shown on touch devices.
    // Browsers and operating systems are quite inconsistent about what keys are available, however.
    // We choose between numeric and decimal based on whether we allow negative and fractional numbers,
    // and based on testing on various devices to determine what keys are available in each inputMode.
    let numberFormatter = $1eWaC$useNumberFormatter(formatOptions);
    let intlOptions = $1eWaC$useMemo(()=>numberFormatter.resolvedOptions()
    , [
        numberFormatter
    ]);
    let hasDecimals = intlOptions.maximumFractionDigits > 0;
    let hasNegative = isNaN(state.minValue) || state.minValue < 0;
    let inputMode = 'numeric';
    if ($1eWaC$isIPhone()) {
        // iPhone doesn't have a minus sign in either numeric or decimal.
        // Note this is only for iPhone, not iPad, which always has both
        // minus and decimal in numeric.
        if (hasNegative) inputMode = 'text';
        else if (hasDecimals) inputMode = 'decimal';
    } else if ($1eWaC$isAndroid()) {
        // Android numeric has both a decimal point and minus key.
        // decimal does not have a minus key.
        if (hasNegative) inputMode = 'numeric';
        else if (hasDecimals) inputMode = 'decimal';
    }
    let onChange = (value)=>{
        state.setInputValue(value);
    };
    let domProps = $1eWaC$filterDOMProps(props);
    let { labelProps: labelProps , inputProps: textFieldProps , descriptionProps: descriptionProps , errorMessageProps: errorMessageProps  } = $1eWaC$useFormattedTextField({
        ...domProps,
        label: label,
        autoFocus: autoFocus,
        isDisabled: isDisabled,
        isReadOnly: isReadOnly,
        isRequired: isRequired,
        validationState: validationState,
        value: state.inputValue,
        autoComplete: 'off',
        'aria-label': props['aria-label'] || null,
        'aria-labelledby': props['aria-labelledby'] || null,
        id: inputId,
        type: 'text',
        inputMode: inputMode,
        onChange: onChange,
        onBlur: onBlur,
        onFocus: onFocus,
        onFocusChange: onFocusChange,
        onKeyDown: onKeyDown,
        onKeyUp: onKeyUp,
        description: description,
        errorMessage: errorMessage
    }, state, inputRef);
    let inputProps = $1eWaC$mergeProps(spinButtonProps, textFieldProps, focusProps, {
        // override the spinbutton role, we can't focus a spin button with VO
        role: null,
        // ignore aria-roledescription on iOS so that required state will announce when it is present
        'aria-roledescription': !$1eWaC$isIOS() ? formatMessage('numberField') : null,
        'aria-valuemax': null,
        'aria-valuemin': null,
        'aria-valuenow': null,
        'aria-valuetext': null,
        autoCorrect: 'off',
        spellCheck: 'false'
    });
    let onButtonPressStart = (e)=>{
        // If focus is already on the input, keep it there so we don't hide the
        // software keyboard when tapping the increment/decrement buttons.
        if (document.activeElement === inputRef.current) return;
        // Otherwise, when using a mouse, move focus to the input.
        // On touch, or with a screen reader, focus the button so that the software
        // keyboard does not appear and the screen reader cursor is not moved off the button.
        if (e.pointerType === 'mouse') inputRef.current.focus();
        else e.target.focus();
    };
    // Determine the label for the increment and decrement buttons. There are 4 cases:
    //
    // 1. With a visible label that is a string: aria-label: `Increase ${props.label}`
    // 2. With a visible label that is JSX: aria-label: 'Increase', aria-labelledby: '${incrementId} ${labelId}'
    // 3. With an aria-label: aria-label: `Increase ${props['aria-label']}`
    // 4. With an aria-labelledby: aria-label: 'Increase', aria-labelledby: `${incrementId} ${props['aria-labelledby']}`
    //
    // (1) and (2) could possibly be combined and both use aria-labelledby. However, placing the label in
    // the aria-label string rather than using aria-labelledby gives more flexibility to translators to change
    // the order or add additional words around the label if needed.
    let fieldLabel = props['aria-label'] || (typeof props.label === 'string' ? props.label : '');
    let ariaLabelledby;
    if (!fieldLabel) ariaLabelledby = props.label != null ? labelProps.id : props['aria-labelledby'];
    let incrementId = $1eWaC$useId();
    let decrementId = $1eWaC$useId();
    let incrementButtonProps = $1eWaC$mergeProps(incButtonProps, {
        'aria-label': incrementAriaLabel || formatMessage('increase', {
            fieldLabel: fieldLabel
        }).trim(),
        id: ariaLabelledby && !incrementAriaLabel ? incrementId : null,
        'aria-labelledby': ariaLabelledby && !incrementAriaLabel ? `${incrementId} ${ariaLabelledby}` : null,
        'aria-controls': inputId,
        excludeFromTabOrder: true,
        preventFocusOnPress: true,
        allowFocusWhenDisabled: true,
        isDisabled: !state.canIncrement,
        onPressStart: onButtonPressStart
    });
    let decrementButtonProps = $1eWaC$mergeProps(decButtonProps, {
        'aria-label': decrementAriaLabel || formatMessage('decrease', {
            fieldLabel: fieldLabel
        }).trim(),
        id: ariaLabelledby && !decrementAriaLabel ? decrementId : null,
        'aria-labelledby': ariaLabelledby && !decrementAriaLabel ? `${decrementId} ${ariaLabelledby}` : null,
        'aria-controls': inputId,
        excludeFromTabOrder: true,
        preventFocusOnPress: true,
        allowFocusWhenDisabled: true,
        isDisabled: !state.canDecrement,
        onPressStart: onButtonPressStart
    });
    return {
        groupProps: {
            role: 'group',
            'aria-disabled': isDisabled,
            'aria-invalid': validationState === 'invalid' ? 'true' : undefined,
            ...focusWithinProps
        },
        labelProps: labelProps,
        inputProps: inputProps,
        incrementButtonProps: incrementButtonProps,
        decrementButtonProps: decrementButtonProps,
        errorMessageProps: errorMessageProps,
        descriptionProps: descriptionProps
    };
}




export {$cf0c3bd5e1672ec9$export$23f548e970bdf099 as useNumberField};
//# sourceMappingURL=module.js.map
