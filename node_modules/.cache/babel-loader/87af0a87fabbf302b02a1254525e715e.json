{"ast":null,"code":"function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $418a5bbf7b2f3448$exports = {};\n$parcel$export($418a5bbf7b2f3448$exports, \"CalendarDate\", () => $418a5bbf7b2f3448$export$99faa760c7908e4f);\n$parcel$export($418a5bbf7b2f3448$exports, \"Time\", () => $418a5bbf7b2f3448$export$680ea196effce5f);\n$parcel$export($418a5bbf7b2f3448$exports, \"CalendarDateTime\", () => $418a5bbf7b2f3448$export$ca871e8dbb80966f);\n$parcel$export($418a5bbf7b2f3448$exports, \"ZonedDateTime\", () => $418a5bbf7b2f3448$export$d3b7288e7994edea);\nvar $9ab2a87bc84c0bfa$exports = {};\n$parcel$export($9ab2a87bc84c0bfa$exports, \"epochFromDate\", () => $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toCalendar\", () => $9ab2a87bc84c0bfa$export$b4a036af3fc0b032);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"getTimeZoneOffset\", () => $9ab2a87bc84c0bfa$export$59c99f3515d3493f);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"possibleAbsolutes\", () => $9ab2a87bc84c0bfa$export$136f38efe7caf549);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toAbsolute\", () => $9ab2a87bc84c0bfa$export$5107c82f94518f5c);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toCalendarDateTime\", () => $9ab2a87bc84c0bfa$export$b21e0b124e224484);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toDate\", () => $9ab2a87bc84c0bfa$export$e67a095c620b86fe);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"fromAbsolute\", () => $9ab2a87bc84c0bfa$export$1b96692a1ba042ac);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"fromDate\", () => $9ab2a87bc84c0bfa$export$e57ff100d91bd4b9);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"fromDateToLocal\", () => $9ab2a87bc84c0bfa$export$d7f92bcd3596b086);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toCalendarDate\", () => $9ab2a87bc84c0bfa$export$93522d1a439f3617);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toDateFields\", () => $9ab2a87bc84c0bfa$export$6f4d78149f3f53ac);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toTimeFields\", () => $9ab2a87bc84c0bfa$export$4d0393e732857be5);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toTime\", () => $9ab2a87bc84c0bfa$export$d33f79e3ffc3dc83);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toZoned\", () => $9ab2a87bc84c0bfa$export$84c95a83c799e074);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toTimeZone\", () => $9ab2a87bc84c0bfa$export$538b00033cc11c75);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"zonedToDate\", () => $9ab2a87bc84c0bfa$export$83aac07b4c37b25);\n$parcel$export($9ab2a87bc84c0bfa$exports, \"toLocalTimeZone\", () => $9ab2a87bc84c0bfa$export$d9b67bc93c097491);\nvar $571ccebef3ef72f1$exports = {};\n$parcel$export($571ccebef3ef72f1$exports, \"isSameDay\", () => $571ccebef3ef72f1$export$ea39ec197993aef0);\n$parcel$export($571ccebef3ef72f1$exports, \"isSameMonth\", () => $571ccebef3ef72f1$export$a18c89cbd24170ff);\n$parcel$export($571ccebef3ef72f1$exports, \"startOfMonth\", () => $571ccebef3ef72f1$export$a5a3b454ada2268e);\n$parcel$export($571ccebef3ef72f1$exports, \"isSameYear\", () => $571ccebef3ef72f1$export$5841f9eb9773f25f);\n$parcel$export($571ccebef3ef72f1$exports, \"startOfYear\", () => $571ccebef3ef72f1$export$f91e89d3d0406102);\n$parcel$export($571ccebef3ef72f1$exports, \"isEqualDay\", () => $571ccebef3ef72f1$export$91b62ebf2ba703ee);\n$parcel$export($571ccebef3ef72f1$exports, \"isEqualMonth\", () => $571ccebef3ef72f1$export$5a8da0c44a3afdf2);\n$parcel$export($571ccebef3ef72f1$exports, \"isEqualYear\", () => $571ccebef3ef72f1$export$ea840f5a6dda8147);\n$parcel$export($571ccebef3ef72f1$exports, \"isToday\", () => $571ccebef3ef72f1$export$629b0a497aa65267);\n$parcel$export($571ccebef3ef72f1$exports, \"today\", () => $571ccebef3ef72f1$export$d0bdf45af03a6ea3);\n$parcel$export($571ccebef3ef72f1$exports, \"getDayOfWeek\", () => $571ccebef3ef72f1$export$2061056d06d7cdf7);\n$parcel$export($571ccebef3ef72f1$exports, \"now\", () => $571ccebef3ef72f1$export$461939dd4422153);\n$parcel$export($571ccebef3ef72f1$exports, \"compareDate\", () => $571ccebef3ef72f1$export$68781ddf31c0090f);\n$parcel$export($571ccebef3ef72f1$exports, \"compareTime\", () => $571ccebef3ef72f1$export$c19a80a9721b80f6);\n$parcel$export($571ccebef3ef72f1$exports, \"getHoursInDay\", () => $571ccebef3ef72f1$export$126c91c941de7e);\n$parcel$export($571ccebef3ef72f1$exports, \"getLocalTimeZone\", () => $571ccebef3ef72f1$export$aa8b41735afcabd2);\n$parcel$export($571ccebef3ef72f1$exports, \"endOfMonth\", () => $571ccebef3ef72f1$export$a2258d9c4118825c);\n$parcel$export($571ccebef3ef72f1$exports, \"endOfYear\", () => $571ccebef3ef72f1$export$8b7aa55c66d5569e);\n$parcel$export($571ccebef3ef72f1$exports, \"getMinimumMonthInYear\", () => $571ccebef3ef72f1$export$5412ac11713b72ad);\n$parcel$export($571ccebef3ef72f1$exports, \"getMinimumDayInMonth\", () => $571ccebef3ef72f1$export$b2f4953d301981d5);\n$parcel$export($571ccebef3ef72f1$exports, \"startOfWeek\", () => $571ccebef3ef72f1$export$42c81a444fbfb5d4);\n$parcel$export($571ccebef3ef72f1$exports, \"endOfWeek\", () => $571ccebef3ef72f1$export$ef8b6d9133084f4e);\n$parcel$export($571ccebef3ef72f1$exports, \"getWeeksInMonth\", () => $571ccebef3ef72f1$export$ccc1b2479e7dd654);\n$parcel$export($571ccebef3ef72f1$exports, \"minDate\", () => $571ccebef3ef72f1$export$5c333a116e949cdd);\n$parcel$export($571ccebef3ef72f1$exports, \"maxDate\", () => $571ccebef3ef72f1$export$a75f2bff57811055);\n$parcel$export($571ccebef3ef72f1$exports, \"isWeekend\", () => $571ccebef3ef72f1$export$618d60ea299da42);\n$parcel$export($571ccebef3ef72f1$exports, \"isWeekday\", () => $571ccebef3ef72f1$export$ee9d87258e1d19ed);\nconst $7470da919d0ed06d$export$7a5acbd77d414bd9 = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AT: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n\nfunction $571ccebef3ef72f1$export$ea39ec197993aef0(a, b) {\n  b = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nfunction $571ccebef3ef72f1$export$a18c89cbd24170ff(a, b) {\n  b = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(b, a.calendar); // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n\n  a = $571ccebef3ef72f1$export$a5a3b454ada2268e(a);\n  b = $571ccebef3ef72f1$export$a5a3b454ada2268e(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nfunction $571ccebef3ef72f1$export$5841f9eb9773f25f(a, b) {\n  b = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(b, a.calendar);\n  a = $571ccebef3ef72f1$export$f91e89d3d0406102(a);\n  b = $571ccebef3ef72f1$export$f91e89d3d0406102(b);\n  return a.era === b.era && a.year === b.year;\n}\n\nfunction $571ccebef3ef72f1$export$91b62ebf2ba703ee(a, b) {\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nfunction $571ccebef3ef72f1$export$5a8da0c44a3afdf2(a, b) {\n  a = $571ccebef3ef72f1$export$a5a3b454ada2268e(a);\n  b = $571ccebef3ef72f1$export$a5a3b454ada2268e(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nfunction $571ccebef3ef72f1$export$ea840f5a6dda8147(a, b) {\n  a = $571ccebef3ef72f1$export$f91e89d3d0406102(a);\n  b = $571ccebef3ef72f1$export$f91e89d3d0406102(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;\n}\n\nfunction $571ccebef3ef72f1$export$629b0a497aa65267(date, timeZone) {\n  return $571ccebef3ef72f1$export$ea39ec197993aef0(date, $571ccebef3ef72f1$export$d0bdf45af03a6ea3(timeZone));\n}\n\nfunction $571ccebef3ef72f1$export$2061056d06d7cdf7(date, locale) {\n  let julian = date.calendar.toJulianDay(date); // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n\n  let dayOfWeek = Math.ceil(julian + 1 - $571ccebef3ef72f1$var$getWeekStart(locale)) % 7;\n  if (dayOfWeek < 0) dayOfWeek += 7;\n  return dayOfWeek;\n}\n\nfunction $571ccebef3ef72f1$export$461939dd4422153(timeZone) {\n  return $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(Date.now(), timeZone);\n}\n\nfunction $571ccebef3ef72f1$export$d0bdf45af03a6ea3(timeZone) {\n  return $9ab2a87bc84c0bfa$export$93522d1a439f3617($571ccebef3ef72f1$export$461939dd4422153(timeZone));\n}\n\nfunction $571ccebef3ef72f1$export$68781ddf31c0090f(a, b) {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nfunction $571ccebef3ef72f1$export$c19a80a9721b80f6(a, b) {\n  return $571ccebef3ef72f1$var$timeToMs(a) - $571ccebef3ef72f1$var$timeToMs(b);\n}\n\nfunction $571ccebef3ef72f1$var$timeToMs(a) {\n  return a.hour * 3600000 + a.minute * 60000 + a.second * 1000 + a.millisecond;\n}\n\nfunction $571ccebef3ef72f1$export$126c91c941de7e(a, timeZone) {\n  let ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(a, timeZone);\n  let tomorrow = a.add({\n    days: 1\n  });\n  let tomorrowMs = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nlet $571ccebef3ef72f1$var$localTimeZone = null;\n\nfunction $571ccebef3ef72f1$export$aa8b41735afcabd2() {\n  // TODO: invalidate this somehow?\n  if ($571ccebef3ef72f1$var$localTimeZone == null) $571ccebef3ef72f1$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return $571ccebef3ef72f1$var$localTimeZone;\n}\n\nfunction $571ccebef3ef72f1$export$a5a3b454ada2268e(date) {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({\n    days: date.day - 1\n  });\n}\n\nfunction $571ccebef3ef72f1$export$a2258d9c4118825c(date) {\n  return date.add({\n    days: date.calendar.getDaysInMonth(date) - date.day\n  });\n}\n\nfunction $571ccebef3ef72f1$export$f91e89d3d0406102(date) {\n  return $571ccebef3ef72f1$export$a5a3b454ada2268e(date.subtract({\n    months: date.month - 1\n  }));\n}\n\nfunction $571ccebef3ef72f1$export$8b7aa55c66d5569e(date) {\n  return $571ccebef3ef72f1$export$a2258d9c4118825c(date.add({\n    months: date.calendar.getMonthsInYear(date) - date.month\n  }));\n}\n\nfunction $571ccebef3ef72f1$export$5412ac11713b72ad(date) {\n  if (date.calendar.getMinimumMonthInYear) return date.calendar.getMinimumMonthInYear(date);\n  return 1;\n}\n\nfunction $571ccebef3ef72f1$export$b2f4953d301981d5(date) {\n  if (date.calendar.getMinimumDayInMonth) return date.calendar.getMinimumDayInMonth(date);\n  return 1;\n}\n\nfunction $571ccebef3ef72f1$export$42c81a444fbfb5d4(date, locale) {\n  let dayOfWeek = $571ccebef3ef72f1$export$2061056d06d7cdf7(date, locale);\n  return date.subtract({\n    days: dayOfWeek\n  });\n}\n\nfunction $571ccebef3ef72f1$export$ef8b6d9133084f4e(date, locale) {\n  return $571ccebef3ef72f1$export$42c81a444fbfb5d4(date, locale).add({\n    days: 6\n  });\n}\n\nconst $571ccebef3ef72f1$var$cachedRegions = new Map();\n\nfunction $571ccebef3ef72f1$var$getRegion(locale) {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    let region = $571ccebef3ef72f1$var$cachedRegions.get(locale);\n\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      $571ccebef3ef72f1$var$cachedRegions.set(locale, region);\n    }\n\n    return region;\n  } // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n\n\n  let part = locale.split('-')[1];\n  return part === 'u' ? null : part;\n}\n\nfunction $571ccebef3ef72f1$var$getWeekStart(locale) {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  let region = $571ccebef3ef72f1$var$getRegion(locale);\n  return $7470da919d0ed06d$export$7a5acbd77d414bd9[region] || 0;\n}\n\nfunction $571ccebef3ef72f1$export$ccc1b2479e7dd654(date, locale) {\n  let days = date.calendar.getDaysInMonth(date);\n  return Math.ceil(($571ccebef3ef72f1$export$2061056d06d7cdf7($571ccebef3ef72f1$export$a5a3b454ada2268e(date), locale) + days) / 7);\n}\n\nfunction $571ccebef3ef72f1$export$5c333a116e949cdd(a, b) {\n  return a.compare(b) <= 0 ? a : b;\n}\n\nfunction $571ccebef3ef72f1$export$a75f2bff57811055(a, b) {\n  return a.compare(b) >= 0 ? a : b;\n}\n\nconst $571ccebef3ef72f1$var$WEEKEND_DATA = {\n  AF: [4, 5],\n  AE: [5, 6],\n  BH: [5, 6],\n  DZ: [5, 6],\n  EG: [5, 6],\n  IL: [5, 6],\n  IQ: [5, 6],\n  IR: [5, 5],\n  JO: [5, 6],\n  KW: [5, 6],\n  LY: [5, 6],\n  OM: [5, 6],\n  QA: [5, 6],\n  SA: [5, 6],\n  SD: [5, 6],\n  SY: [5, 6],\n  YE: [5, 6]\n};\n\nfunction $571ccebef3ef72f1$export$618d60ea299da42(date, locale) {\n  let julian = date.calendar.toJulianDay(date); // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n\n  let dayOfWeek = Math.ceil(julian + 1) % 7;\n  if (dayOfWeek < 0) dayOfWeek += 7;\n  let region = $571ccebef3ef72f1$var$getRegion(locale); // Use Intl.Locale for this once weekInfo is supported.\n  // https://github.com/tc39/proposal-intl-locale-info\n\n  let [start, end] = $571ccebef3ef72f1$var$WEEKEND_DATA[region] || [6, 0];\n  return dayOfWeek === start || dayOfWeek === end;\n}\n\nfunction $571ccebef3ef72f1$export$ee9d87258e1d19ed(date, locale) {\n  return !$571ccebef3ef72f1$export$618d60ea299da42(date, locale);\n}\n\nfunction $6a413dc772e69324$export$842a2cf37af977e1(amount, numerator) {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n\nfunction $6a413dc772e69324$export$784d13d8ee351f07(date) {\n  if (date.era) return new $418a5bbf7b2f3448$export$99faa760c7908e4f(date.calendar, date.era, date.year, date.month, date.day);else return new $418a5bbf7b2f3448$export$99faa760c7908e4f(date.calendar, date.year, date.month, date.day);\n}\n\nfunction $6a413dc772e69324$export$27fa0172ae2644b3(date) {\n  if (date.era) return new $418a5bbf7b2f3448$export$ca871e8dbb80966f(date.calendar, date.era, date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);else return new $418a5bbf7b2f3448$export$ca871e8dbb80966f(date.calendar, date.year, date.month, date.day, date.hour, date.minute, date.second);\n}\n\nconst $22a507fc519bfd45$var$EPOCH = 1721426; // 001/01/03 Julian C.E.\n\nfunction $22a507fc519bfd45$export$f297eb839006d339(year, month, day) {\n  let y1 = year - 1;\n  let monthOffset = -2;\n  if (month <= 2) monthOffset = 0;else if ($22a507fc519bfd45$export$553d7fa8e3805fc0(year)) monthOffset = -1;\n  return $22a507fc519bfd45$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);\n}\n\nfunction $22a507fc519bfd45$export$553d7fa8e3805fc0(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nconst $22a507fc519bfd45$var$daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\nclass $22a507fc519bfd45$export$80ee6245ec4f29ec {\n  fromJulianDay(jd) {\n    let jd0 = jd;\n    let depoch = jd0 - $22a507fc519bfd45$var$EPOCH;\n    let quadricent = Math.floor(depoch / 146097);\n    let dqc = $6a413dc772e69324$export$842a2cf37af977e1(depoch, 146097);\n    let cent = Math.floor(dqc / 36524);\n    let dcent = $6a413dc772e69324$export$842a2cf37af977e1(dqc, 36524);\n    let quad = Math.floor(dcent / 1461);\n    let dquad = $6a413dc772e69324$export$842a2cf37af977e1(dcent, 1461);\n    let yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n    let yearDay = jd0 - $22a507fc519bfd45$export$f297eb839006d339(year, 1, 1);\n    let leapAdj = 2;\n    if (jd0 < $22a507fc519bfd45$export$f297eb839006d339(year, 3, 1)) leapAdj = 0;else if ($22a507fc519bfd45$export$553d7fa8e3805fc0(year)) leapAdj = 1;\n    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n    let day = jd0 - $22a507fc519bfd45$export$f297eb839006d339(year, month, 1) + 1;\n    return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this, year, month, day);\n  }\n\n  toJulianDay(date) {\n    return $22a507fc519bfd45$export$f297eb839006d339(date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date) {\n    return $22a507fc519bfd45$var$daysInMonth[$22a507fc519bfd45$export$553d7fa8e3805fc0(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  getMonthsInYear(date) {\n    return 12;\n  }\n\n  getDaysInYear(date) {\n    return $22a507fc519bfd45$export$553d7fa8e3805fc0(date.year) ? 366 : 365;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  getYearsInEra(date) {\n    return 9999;\n  }\n\n  getEras() {\n    return ['BC', 'AD'];\n  }\n\n  getYearsToAdd(date, years) {\n    return date.era === 'BC' ? -years : years;\n  }\n\n  balanceDate(date) {\n    if (date.year <= 0) {\n      date.era = date.era === 'BC' ? 'AD' : 'BC';\n      date.year = 1 - date.year;\n    }\n  }\n\n  constructor() {\n    this.identifier = 'gregory';\n  }\n\n}\n\nfunction $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(date) {\n  date = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(date, new $22a507fc519bfd45$export$80ee6245ec4f29ec());\n  return $9ab2a87bc84c0bfa$var$epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction $9ab2a87bc84c0bfa$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  let date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nfunction $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms, timeZone) {\n  // Fast path: for local timezone, use native Date.\n  if (timeZone === $571ccebef3ef72f1$export$aa8b41735afcabd2()) return new Date(ms).getTimezoneOffset() * -60000;\n  let {\n    year: year,\n    month: month,\n    day: day,\n    hour: hour,\n    minute: minute,\n    second: second\n  } = $9ab2a87bc84c0bfa$var$getTimeZoneParts(ms, timeZone);\n  let utc = $9ab2a87bc84c0bfa$var$epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nconst $9ab2a87bc84c0bfa$var$formattersByTimeZone = new Map();\n\nfunction $9ab2a87bc84c0bfa$var$getTimeZoneParts(ms, timeZone) {\n  let formatter = $9ab2a87bc84c0bfa$var$formattersByTimeZone.get(timeZone);\n\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone: timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n    $9ab2a87bc84c0bfa$var$formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  let parts = formatter.formatToParts(new Date(ms));\n  let namedParts = {};\n\n  for (let part of parts) if (part.type !== 'literal') namedParts[part.type] = part.value;\n\n  return {\n    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour,\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nconst $9ab2a87bc84c0bfa$var$DAYMILLIS = 86400000;\n\nfunction $9ab2a87bc84c0bfa$export$136f38efe7caf549(date, timeZone) {\n  let ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(date);\n  let earlier = ms - $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms - $9ab2a87bc84c0bfa$var$DAYMILLIS, timeZone);\n  let later = ms - $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms + $9ab2a87bc84c0bfa$var$DAYMILLIS, timeZone);\n  return $9ab2a87bc84c0bfa$var$getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction $9ab2a87bc84c0bfa$var$getValidWallTimes(date, timeZone, earlier, later) {\n  let found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(absolute => $9ab2a87bc84c0bfa$var$isValidWallTime(date, timeZone, absolute));\n}\n\nfunction $9ab2a87bc84c0bfa$var$isValidWallTime(date, timeZone, absolute) {\n  let parts = $9ab2a87bc84c0bfa$var$getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;\n}\n\nfunction $9ab2a87bc84c0bfa$export$5107c82f94518f5c(date, timeZone) {\n  let disambiguation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'compatible';\n  let dateTime = $9ab2a87bc84c0bfa$export$b21e0b124e224484(date); // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n\n  if (timeZone === $571ccebef3ef72f1$export$aa8b41735afcabd2() && disambiguation === 'compatible') {\n    dateTime = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(dateTime, new $22a507fc519bfd45$export$80ee6245ec4f29ec()); // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n\n    let date = new Date();\n    date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);\n    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n    return date.getTime();\n  }\n\n  let ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(dateTime);\n  let offsetBefore = $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms - $9ab2a87bc84c0bfa$var$DAYMILLIS, timeZone);\n  let offsetAfter = $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms + $9ab2a87bc84c0bfa$var$DAYMILLIS, timeZone);\n  let valid = $9ab2a87bc84c0bfa$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n  if (valid.length === 1) return valid[0];\n  if (valid.length > 1) switch (disambiguation) {\n    // 'compatible' means 'earlier' for \"fall back\" transitions\n    case 'compatible':\n    case 'earlier':\n      return valid[0];\n\n    case 'later':\n      return valid[valid.length - 1];\n\n    case 'reject':\n      throw new RangeError('Multiple possible absolute times found');\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nfunction $9ab2a87bc84c0bfa$export$e67a095c620b86fe(dateTime, timeZone) {\n  let disambiguation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'compatible';\n  return new Date($9ab2a87bc84c0bfa$export$5107c82f94518f5c(dateTime, timeZone, disambiguation));\n}\n\nfunction $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, timeZone) {\n  let offset = $9ab2a87bc84c0bfa$export$59c99f3515d3493f(ms, timeZone);\n  let date = new Date(ms + offset);\n  let year = date.getUTCFullYear();\n  let month = date.getUTCMonth() + 1;\n  let day = date.getUTCDate();\n  let hour = date.getUTCHours();\n  let minute = date.getUTCMinutes();\n  let second = date.getUTCSeconds();\n  let millisecond = date.getUTCMilliseconds();\n  return new $418a5bbf7b2f3448$export$d3b7288e7994edea(year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\nfunction $9ab2a87bc84c0bfa$export$e57ff100d91bd4b9(date, timeZone) {\n  return $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(date.getTime(), timeZone);\n}\n\nfunction $9ab2a87bc84c0bfa$export$d7f92bcd3596b086(date) {\n  return $9ab2a87bc84c0bfa$export$e57ff100d91bd4b9(date, $571ccebef3ef72f1$export$aa8b41735afcabd2());\n}\n\nfunction $9ab2a87bc84c0bfa$export$93522d1a439f3617(dateTime) {\n  return new $418a5bbf7b2f3448$export$99faa760c7908e4f(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nfunction $9ab2a87bc84c0bfa$export$6f4d78149f3f53ac(date) {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nfunction $9ab2a87bc84c0bfa$export$4d0393e732857be5(date) {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\nfunction $9ab2a87bc84c0bfa$export$b21e0b124e224484(date, time) {\n  let hour = 0,\n      minute = 0,\n      second = 0,\n      millisecond = 0;\n  if ('timeZone' in date) ({\n    hour: hour,\n    minute: minute,\n    second: second,\n    millisecond: millisecond\n  } = date);else if ('hour' in date && !time) return date;\n  if (time) ({\n    hour: hour,\n    minute: minute,\n    second: second,\n    millisecond: millisecond\n  } = time);\n  return new $418a5bbf7b2f3448$export$ca871e8dbb80966f(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);\n}\n\nfunction $9ab2a87bc84c0bfa$export$d33f79e3ffc3dc83(dateTime) {\n  return new $418a5bbf7b2f3448$export$680ea196effce5f(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\nfunction $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(date, calendar) {\n  if (date.calendar.identifier === calendar.identifier) return date;\n  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  let copy = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  return copy;\n}\n\nfunction $9ab2a87bc84c0bfa$export$84c95a83c799e074(date, timeZone, disambiguation) {\n  if (date instanceof $418a5bbf7b2f3448$export$d3b7288e7994edea) {\n    if (date.timeZone === timeZone) return date;\n    return $9ab2a87bc84c0bfa$export$538b00033cc11c75(date, timeZone);\n  }\n\n  let ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(date, timeZone, disambiguation);\n  return $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, timeZone);\n}\n\nfunction $9ab2a87bc84c0bfa$export$83aac07b4c37b25(date) {\n  let ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(date) - date.offset;\n  return new Date(ms);\n}\n\nfunction $9ab2a87bc84c0bfa$export$538b00033cc11c75(date, timeZone) {\n  let ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(date) - date.offset;\n  return $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, timeZone), date.calendar);\n}\n\nfunction $9ab2a87bc84c0bfa$export$d9b67bc93c097491(date) {\n  return $9ab2a87bc84c0bfa$export$538b00033cc11c75(date, $571ccebef3ef72f1$export$aa8b41735afcabd2());\n}\n\nconst $1e1f3157d0513e0f$var$ONE_HOUR = 3600000;\n\nfunction $1e1f3157d0513e0f$export$e16d8520af44a096(date, duration) {\n  let mutableDate = date.copy();\n  let days = 'hour' in date ? $1e1f3157d0513e0f$var$addTimeFields(date, duration) : 0;\n  $1e1f3157d0513e0f$var$addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  mutableDate.month += duration.months || 0;\n  $1e1f3157d0513e0f$var$balanceYearMonth(mutableDate);\n  $1e1f3157d0513e0f$var$constrainMonthDay(mutableDate);\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n  $1e1f3157d0513e0f$var$balanceDay(mutableDate);\n  if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);\n  return mutableDate;\n}\n\nfunction $1e1f3157d0513e0f$var$addYears(date, years) {\n  if (date.calendar.getYearsToAdd) years = date.calendar.getYearsToAdd(date, years);\n  date.year += years;\n}\n\nfunction $1e1f3157d0513e0f$var$balanceYearMonth(date) {\n  while (date.month < 1) {\n    $1e1f3157d0513e0f$var$addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  let monthsInYear = 0;\n\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    $1e1f3157d0513e0f$var$addYears(date, 1);\n  }\n}\n\nfunction $1e1f3157d0513e0f$var$balanceDay(date) {\n  while (date.day < 1) {\n    date.month--;\n    $1e1f3157d0513e0f$var$balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    $1e1f3157d0513e0f$var$balanceYearMonth(date);\n  }\n}\n\nfunction $1e1f3157d0513e0f$var$constrainMonthDay(date) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nfunction $1e1f3157d0513e0f$export$c4e2ecac49351ef2(date) {\n  if (date.calendar.constrainDate) date.calendar.constrainDate(date);\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  $1e1f3157d0513e0f$var$constrainMonthDay(date);\n}\n\nfunction $1e1f3157d0513e0f$export$3e2544e88a25bff8(duration) {\n  let inverseDuration = {};\n\n  for (let key in duration) if (typeof duration[key] === 'number') inverseDuration[key] = -duration[key];\n\n  return inverseDuration;\n}\n\nfunction $1e1f3157d0513e0f$export$4e2d2ead65e5f7e3(date, duration) {\n  return $1e1f3157d0513e0f$export$e16d8520af44a096(date, $1e1f3157d0513e0f$export$3e2544e88a25bff8(duration));\n}\n\nfunction $1e1f3157d0513e0f$export$adaa4cf7ef1b65be(date, fields) {\n  let mutableDate = date.copy();\n  if (fields.era != null) mutableDate.era = fields.era;\n  if (fields.year != null) mutableDate.year = fields.year;\n  if (fields.month != null) mutableDate.month = fields.month;\n  if (fields.day != null) mutableDate.day = fields.day;\n  $1e1f3157d0513e0f$export$c4e2ecac49351ef2(mutableDate);\n  return mutableDate;\n}\n\nfunction $1e1f3157d0513e0f$export$e5d5e1c1822b6e56(value, fields) {\n  let mutableValue = value.copy();\n  if (fields.hour != null) mutableValue.hour = fields.hour;\n  if (fields.minute != null) mutableValue.minute = fields.minute;\n  if (fields.second != null) mutableValue.second = fields.second;\n  if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;\n  $1e1f3157d0513e0f$export$7555de1e070510cb(mutableValue);\n  return mutableValue;\n}\n\nfunction $1e1f3157d0513e0f$var$balanceTime(time) {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = $1e1f3157d0513e0f$var$nonNegativeMod(time.millisecond, 1000);\n  time.minute += Math.floor(time.second / 60);\n  time.second = $1e1f3157d0513e0f$var$nonNegativeMod(time.second, 60);\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = $1e1f3157d0513e0f$var$nonNegativeMod(time.minute, 60);\n  let days = Math.floor(time.hour / 24);\n  time.hour = $1e1f3157d0513e0f$var$nonNegativeMod(time.hour, 24);\n  return days;\n}\n\nfunction $1e1f3157d0513e0f$export$7555de1e070510cb(time) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction $1e1f3157d0513e0f$var$nonNegativeMod(a, b) {\n  let result = a % b;\n  if (result < 0) result += b;\n  return result;\n}\n\nfunction $1e1f3157d0513e0f$var$addTimeFields(time, duration) {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return $1e1f3157d0513e0f$var$balanceTime(time);\n}\n\nfunction $1e1f3157d0513e0f$export$7ed87b6bc2506470(time, duration) {\n  let res = time.copy();\n  $1e1f3157d0513e0f$var$addTimeFields(res, duration);\n  return res;\n}\n\nfunction $1e1f3157d0513e0f$export$fe34d3a381cd7501(time, duration) {\n  return $1e1f3157d0513e0f$export$7ed87b6bc2506470(time, $1e1f3157d0513e0f$export$3e2544e88a25bff8(duration));\n}\n\nfunction $1e1f3157d0513e0f$export$d52ced6badfb9a4c(value, field, amount, options) {\n  let mutable = value.copy();\n\n  switch (field) {\n    case 'era':\n      {\n        let eras = value.calendar.getEras();\n        let eraIndex = eras.indexOf(value.era);\n        if (eraIndex < 0) throw new Error('Invalid era: ' + value.era);\n        eraIndex = $1e1f3157d0513e0f$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);\n        mutable.era = eras[eraIndex]; // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n\n        $1e1f3157d0513e0f$export$c4e2ecac49351ef2(mutable);\n        break;\n      }\n\n    case 'year':\n      if (mutable.calendar.getYearsToAdd) amount = mutable.calendar.getYearsToAdd(mutable, amount); // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n\n      mutable.year = $1e1f3157d0513e0f$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);\n      if (mutable.year === -Infinity) mutable.year = 1;\n      if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);\n      break;\n\n    case 'month':\n      mutable.month = $1e1f3157d0513e0f$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'day':\n      mutable.day = $1e1f3157d0513e0f$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);\n  $1e1f3157d0513e0f$export$c4e2ecac49351ef2(mutable);\n  return mutable;\n}\n\nfunction $1e1f3157d0513e0f$export$dd02b3e0007dfe28(value, field, amount, options) {\n  let mutable = value.copy();\n\n  switch (field) {\n    case 'hour':\n      {\n        let hours = value.hour;\n        let min = 0;\n        let max = 23;\n\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          let isPM = hours >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        }\n\n        mutable.hour = $1e1f3157d0513e0f$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);\n        break;\n      }\n\n    case 'minute':\n      mutable.minute = $1e1f3157d0513e0f$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'second':\n      mutable.second = $1e1f3157d0513e0f$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'millisecond':\n      mutable.millisecond = $1e1f3157d0513e0f$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction $1e1f3157d0513e0f$var$cycleValue(value, amount, min, max) {\n  let round = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (round) {\n    value += Math.sign(amount);\n    if (value < min) value = max;\n    let div = Math.abs(amount);\n    if (amount > 0) value = Math.ceil(value / div) * div;else value = Math.floor(value / div) * div;\n    if (value > max) value = min;\n  } else {\n    value += amount;\n    if (value < min) value = max - (min - value - 1);else if (value > max) value = min + (value - max - 1);\n  }\n\n  return value;\n}\n\nfunction $1e1f3157d0513e0f$export$96b1d28349274637(dateTime, duration) {\n  let ms;\n\n  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.days != null && duration.days !== 0) {\n    let res = $1e1f3157d0513e0f$export$e16d8520af44a096($9ab2a87bc84c0bfa$export$b21e0b124e224484(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      days: duration.days\n    }); // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n\n    ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(res, dateTime.timeZone);\n  } else // Otherwise, preserve the offset of the original date.\n    ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(dateTime) - dateTime.offset; // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n\n\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60000;\n  ms += (duration.hours || 0) * 3600000;\n  let res = $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, dateTime.timeZone);\n  return $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(res, dateTime.calendar);\n}\n\nfunction $1e1f3157d0513e0f$export$6814caac34ca03c7(dateTime, duration) {\n  return $1e1f3157d0513e0f$export$96b1d28349274637(dateTime, $1e1f3157d0513e0f$export$3e2544e88a25bff8(duration));\n}\n\nfunction $1e1f3157d0513e0f$export$9a297d111fc86b79(dateTime, field, amount, options) {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour':\n      {\n        let min = 0;\n        let max = 23;\n\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          let isPM = dateTime.hour >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        } // The minimum and maximum hour may be affected by daylight saving time.\n        // For example, it might jump forward at midnight, and skip 1am.\n        // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n        // the possible absolute times for the min and max, and find the maximum range\n        // that is within the current day.\n\n\n        let plainDateTime = $9ab2a87bc84c0bfa$export$b21e0b124e224484(dateTime);\n        let minDate = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($1e1f3157d0513e0f$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: min\n        }), new $22a507fc519bfd45$export$80ee6245ec4f29ec());\n        let minAbsolute = [$9ab2a87bc84c0bfa$export$5107c82f94518f5c(minDate, dateTime.timeZone, 'earlier'), $9ab2a87bc84c0bfa$export$5107c82f94518f5c(minDate, dateTime.timeZone, 'later')].filter(ms => $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, dateTime.timeZone).day === minDate.day)[0];\n        let maxDate = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($1e1f3157d0513e0f$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: max\n        }), new $22a507fc519bfd45$export$80ee6245ec4f29ec());\n        let maxAbsolute = [$9ab2a87bc84c0bfa$export$5107c82f94518f5c(maxDate, dateTime.timeZone, 'earlier'), $9ab2a87bc84c0bfa$export$5107c82f94518f5c(maxDate, dateTime.timeZone, 'later')].filter(ms => $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, dateTime.timeZone).day === maxDate.day).pop(); // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n        // This is done in hours from the Unix epoch so that cycleValue works correctly,\n        // and then converted back to milliseconds.\n\n        let ms1 = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(dateTime) - dateTime.offset;\n        let hours = Math.floor(ms1 / $1e1f3157d0513e0f$var$ONE_HOUR);\n        let remainder = ms1 % $1e1f3157d0513e0f$var$ONE_HOUR;\n        ms1 = $1e1f3157d0513e0f$var$cycleValue(hours, amount, Math.floor(minAbsolute / $1e1f3157d0513e0f$var$ONE_HOUR), Math.floor(maxAbsolute / $1e1f3157d0513e0f$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $1e1f3157d0513e0f$var$ONE_HOUR + remainder; // Now compute the new timezone offset, and convert the absolute time back to local time.\n\n        return $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms1, dateTime.timeZone), dateTime.calendar);\n      }\n\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return $1e1f3157d0513e0f$export$dd02b3e0007dfe28(dateTime, field, amount, options);\n\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      {\n        let res = $1e1f3157d0513e0f$export$d52ced6badfb9a4c($9ab2a87bc84c0bfa$export$b21e0b124e224484(dateTime), field, amount, options);\n        let ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(res, dateTime.timeZone);\n        return $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, dateTime.timeZone), dateTime.calendar);\n      }\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nfunction $1e1f3157d0513e0f$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = $9ab2a87bc84c0bfa$export$b21e0b124e224484(dateTime);\n  let res = $1e1f3157d0513e0f$export$e5d5e1c1822b6e56($1e1f3157d0513e0f$export$adaa4cf7ef1b65be(plainDateTime, fields), fields); // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n\n  if (res.compare(plainDateTime) === 0) return dateTime;\n  let ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c(res, dateTime.timeZone, disambiguation);\n  return $9ab2a87bc84c0bfa$export$b4a036af3fc0b032($9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, dateTime.timeZone), dateTime.calendar);\n}\n\nvar $78b7d46219519df2$exports = {};\n$parcel$export($78b7d46219519df2$exports, \"parseTime\", () => $78b7d46219519df2$export$c9698ec7f05a07e1);\n$parcel$export($78b7d46219519df2$exports, \"parseDate\", () => $78b7d46219519df2$export$6b862160d295c8e);\n$parcel$export($78b7d46219519df2$exports, \"parseDateTime\", () => $78b7d46219519df2$export$588937bcd60ade55);\n$parcel$export($78b7d46219519df2$exports, \"parseZonedDateTime\", () => $78b7d46219519df2$export$fd7893f06e92a6a4);\n$parcel$export($78b7d46219519df2$exports, \"dateTimeToString\", () => $78b7d46219519df2$export$4223de14708adc63);\n$parcel$export($78b7d46219519df2$exports, \"parseAbsolute\", () => $78b7d46219519df2$export$5adfdab05168c219);\n$parcel$export($78b7d46219519df2$exports, \"parseAbsoluteToLocal\", () => $78b7d46219519df2$export$8e384432362ed0f0);\n$parcel$export($78b7d46219519df2$exports, \"timeToString\", () => $78b7d46219519df2$export$f59dee82248f5ad4);\n$parcel$export($78b7d46219519df2$exports, \"dateToString\", () => $78b7d46219519df2$export$60dfd74aa96791bd);\n$parcel$export($78b7d46219519df2$exports, \"zonedDateTimeToString\", () => $78b7d46219519df2$export$bf79f1ebf4b18792);\nconst $78b7d46219519df2$var$TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst $78b7d46219519df2$var$DATE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nconst $78b7d46219519df2$var$DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst $78b7d46219519df2$var$ZONED_DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::(\\d{2}))?)?\\[(.*?)\\]$/;\nconst $78b7d46219519df2$var$ABSOLUTE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::(\\d{2}))?)|Z)$/;\n\nfunction $78b7d46219519df2$export$c9698ec7f05a07e1(value) {\n  let m = value.match($78b7d46219519df2$var$TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 time string: ' + value);\n  return new $418a5bbf7b2f3448$export$680ea196effce5f($78b7d46219519df2$var$parseNumber(m[1], 0, 23), m[2] ? $78b7d46219519df2$var$parseNumber(m[2], 0, 59) : 0, m[3] ? $78b7d46219519df2$var$parseNumber(m[3], 0, 59) : 0, m[4] ? $78b7d46219519df2$var$parseNumber(m[4], 0, Infinity) * 1000 : 0);\n}\n\nfunction $78b7d46219519df2$export$6b862160d295c8e(value) {\n  let m = value.match($78b7d46219519df2$var$DATE_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date string: ' + value);\n  let date = new $418a5bbf7b2f3448$export$99faa760c7908e4f($78b7d46219519df2$var$parseNumber(m[1], 0, 9999), $78b7d46219519df2$var$parseNumber(m[2], 1, 12), 1);\n  date.day = $78b7d46219519df2$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date;\n}\n\nfunction $78b7d46219519df2$export$588937bcd60ade55(value) {\n  let m = value.match($78b7d46219519df2$var$DATE_TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  let date = new $418a5bbf7b2f3448$export$ca871e8dbb80966f($78b7d46219519df2$var$parseNumber(m[1], 1, 9999), $78b7d46219519df2$var$parseNumber(m[2], 1, 12), 1, m[4] ? $78b7d46219519df2$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $78b7d46219519df2$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $78b7d46219519df2$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $78b7d46219519df2$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $78b7d46219519df2$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date;\n}\n\nfunction $78b7d46219519df2$export$fd7893f06e92a6a4(value, disambiguation) {\n  let m = value.match($78b7d46219519df2$var$ZONED_DATE_TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  let date = new $418a5bbf7b2f3448$export$d3b7288e7994edea($78b7d46219519df2$var$parseNumber(m[1], 1, 9999), $78b7d46219519df2$var$parseNumber(m[2], 1, 12), 1, m[10], 0, m[4] ? $78b7d46219519df2$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $78b7d46219519df2$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $78b7d46219519df2$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $78b7d46219519df2$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $78b7d46219519df2$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  let plainDateTime = $9ab2a87bc84c0bfa$export$b21e0b124e224484(date);\n  let ms;\n\n  if (m[8]) {\n    var ref;\n    date.offset = $78b7d46219519df2$var$parseNumber(m[8], -23, 23) * 3600000 + $78b7d46219519df2$var$parseNumber((ref = m[9]) !== null && ref !== void 0 ? ref : '0', 0, 59) * 60000;\n    ms = $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb(date) - date.offset; // Validate offset against parsed date.\n\n    let absolutes = $9ab2a87bc84c0bfa$export$136f38efe7caf549(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) throw new Error(`Offset ${$78b7d46219519df2$var$offsetToString(date.offset)} is invalid for ${$78b7d46219519df2$export$4223de14708adc63(date)} in ${date.timeZone}`);\n  } else // Convert to absolute and back to fix invalid times due to DST.\n    ms = $9ab2a87bc84c0bfa$export$5107c82f94518f5c($9ab2a87bc84c0bfa$export$b21e0b124e224484(plainDateTime), date.timeZone, disambiguation);\n\n  return $9ab2a87bc84c0bfa$export$1b96692a1ba042ac(ms, date.timeZone);\n}\n\nfunction $78b7d46219519df2$export$5adfdab05168c219(value, timeZone) {\n  let m = value.match($78b7d46219519df2$var$ABSOLUTE_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  let date = new $418a5bbf7b2f3448$export$d3b7288e7994edea($78b7d46219519df2$var$parseNumber(m[1], 1, 9999), $78b7d46219519df2$var$parseNumber(m[2], 1, 12), 1, timeZone, 0, m[4] ? $78b7d46219519df2$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $78b7d46219519df2$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $78b7d46219519df2$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $78b7d46219519df2$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $78b7d46219519df2$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  var ref;\n  if (m[8]) date.offset = $78b7d46219519df2$var$parseNumber(m[8], -23, 23) * 3600000 + $78b7d46219519df2$var$parseNumber((ref = m[9]) !== null && ref !== void 0 ? ref : '0', 0, 59) * 60000;\n  return $9ab2a87bc84c0bfa$export$538b00033cc11c75(date, timeZone);\n}\n\nfunction $78b7d46219519df2$export$8e384432362ed0f0(value) {\n  return $78b7d46219519df2$export$5adfdab05168c219(value, $571ccebef3ef72f1$export$aa8b41735afcabd2());\n}\n\nfunction $78b7d46219519df2$var$parseNumber(value, min, max) {\n  let val = Number(value);\n  if (val < min || val > max) throw new RangeError(`Value out of range: ${min} <= ${val} <= ${max}`);\n  return val;\n}\n\nfunction $78b7d46219519df2$export$f59dee82248f5ad4(time) {\n  return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}${time.millisecond ? String(time.millisecond / 1000).slice(1) : ''}`;\n}\n\nfunction $78b7d46219519df2$export$60dfd74aa96791bd(date) {\n  let gregorianDate = $9ab2a87bc84c0bfa$export$b4a036af3fc0b032(date, new $22a507fc519bfd45$export$80ee6245ec4f29ec());\n  return `${String(gregorianDate.year).padStart(4, '0')}-${String(gregorianDate.month).padStart(2, '0')}-${String(gregorianDate.day).padStart(2, '0')}`;\n}\n\nfunction $78b7d46219519df2$export$4223de14708adc63(date) {\n  // @ts-ignore\n  return `${$78b7d46219519df2$export$60dfd74aa96791bd(date)}T${$78b7d46219519df2$export$f59dee82248f5ad4(date)}`;\n}\n\nfunction $78b7d46219519df2$var$offsetToString(offset) {\n  let sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  let offsetHours = Math.floor(offset / 3600000);\n  let offsetMinutes = offset % 3600000 / 60000;\n  return `${sign}${String(offsetHours).padStart(2, '0')}:${String(offsetMinutes).padStart(2, '0')}`;\n}\n\nfunction $78b7d46219519df2$export$bf79f1ebf4b18792(date) {\n  return `${$78b7d46219519df2$export$4223de14708adc63(date)}${$78b7d46219519df2$var$offsetToString(date.offset)}[${date.timeZone}]`;\n}\n\nfunction $418a5bbf7b2f3448$var$shiftArgs(args) {\n  let calendar = typeof args[0] === 'object' ? args.shift() : new $22a507fc519bfd45$export$80ee6245ec4f29ec();\n  let era;\n  if (typeof args[0] === 'string') era = args.shift();else {\n    let eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n  let year = args.shift();\n  let month = args.shift();\n  let day = args.shift();\n  return [calendar, era, year, month, day];\n}\n\nclass $418a5bbf7b2f3448$export$99faa760c7908e4f {\n  copy() {\n    if (this.era) return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this.calendar, this.era, this.year, this.month, this.day);else return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this.calendar, this.year, this.month, this.day);\n  }\n\n  add(duration) {\n    return $1e1f3157d0513e0f$export$e16d8520af44a096(this, duration);\n  }\n\n  subtract(duration) {\n    return $1e1f3157d0513e0f$export$4e2d2ead65e5f7e3(this, duration);\n  }\n\n  set(fields) {\n    return $1e1f3157d0513e0f$export$adaa4cf7ef1b65be(this, fields);\n  }\n\n  cycle(field, amount, options) {\n    return $1e1f3157d0513e0f$export$d52ced6badfb9a4c(this, field, amount, options);\n  }\n\n  toDate(timeZone) {\n    return $9ab2a87bc84c0bfa$export$e67a095c620b86fe(this, timeZone);\n  }\n\n  toString() {\n    return $78b7d46219519df2$export$60dfd74aa96791bd(this);\n  }\n\n  compare(b) {\n    return $571ccebef3ef72f1$export$68781ddf31c0090f(this, b);\n  }\n\n  constructor() {\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n    // If that behavior is desired, use the AnyCalendarDate interface instead.\n    _type.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    let [calendar, era, year, month, day] = $418a5bbf7b2f3448$var$shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    $1e1f3157d0513e0f$export$c4e2ecac49351ef2(this);\n  }\n\n}\n\nvar _type = new WeakMap();\n\nclass $418a5bbf7b2f3448$export$680ea196effce5f {\n  copy() {\n    return new $418a5bbf7b2f3448$export$680ea196effce5f(this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  add(duration) {\n    return $1e1f3157d0513e0f$export$7ed87b6bc2506470(this, duration);\n  }\n\n  subtract(duration) {\n    return $1e1f3157d0513e0f$export$fe34d3a381cd7501(this, duration);\n  }\n\n  set(fields) {\n    return $1e1f3157d0513e0f$export$e5d5e1c1822b6e56(this, fields);\n  }\n\n  cycle(field, amount, options) {\n    return $1e1f3157d0513e0f$export$dd02b3e0007dfe28(this, field, amount, options);\n  }\n\n  toString() {\n    return $78b7d46219519df2$export$f59dee82248f5ad4(this);\n  }\n\n  compare(b) {\n    return $571ccebef3ef72f1$export$c19a80a9721b80f6(this, b);\n  }\n\n  constructor() {\n    let hour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let minute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let second = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let millisecond = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type1.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n    $1e1f3157d0513e0f$export$7555de1e070510cb(this);\n  }\n\n}\n\nvar _type1 = new WeakMap();\n\nclass $418a5bbf7b2f3448$export$ca871e8dbb80966f {\n  copy() {\n    if (this.era) return new $418a5bbf7b2f3448$export$ca871e8dbb80966f(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);else return new $418a5bbf7b2f3448$export$ca871e8dbb80966f(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  add(duration) {\n    return $1e1f3157d0513e0f$export$e16d8520af44a096(this, duration);\n  }\n\n  subtract(duration) {\n    return $1e1f3157d0513e0f$export$4e2d2ead65e5f7e3(this, duration);\n  }\n\n  set(fields) {\n    return $1e1f3157d0513e0f$export$adaa4cf7ef1b65be($1e1f3157d0513e0f$export$e5d5e1c1822b6e56(this, fields), fields);\n  }\n\n  cycle(field, amount, options) {\n    switch (field) {\n      case 'era':\n      case 'year':\n      case 'month':\n      case 'day':\n        return $1e1f3157d0513e0f$export$d52ced6badfb9a4c(this, field, amount, options);\n\n      default:\n        return $1e1f3157d0513e0f$export$dd02b3e0007dfe28(this, field, amount, options);\n    }\n  }\n\n  toDate(timeZone) {\n    return $9ab2a87bc84c0bfa$export$e67a095c620b86fe(this, timeZone);\n  }\n\n  toString() {\n    return $78b7d46219519df2$export$4223de14708adc63(this);\n  }\n\n  compare(b) {\n    let res = $571ccebef3ef72f1$export$68781ddf31c0090f(this, b);\n    if (res === 0) return $571ccebef3ef72f1$export$c19a80a9721b80f6(this, $9ab2a87bc84c0bfa$export$b21e0b124e224484(b));\n    return res;\n  }\n\n  constructor() {\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type2.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    let [calendar, era, year, month, day] = $418a5bbf7b2f3448$var$shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n    $1e1f3157d0513e0f$export$c4e2ecac49351ef2(this);\n  }\n\n}\n\nvar _type2 = new WeakMap();\n\nclass $418a5bbf7b2f3448$export$d3b7288e7994edea {\n  copy() {\n    if (this.era) return new $418a5bbf7b2f3448$export$d3b7288e7994edea(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);else return new $418a5bbf7b2f3448$export$d3b7288e7994edea(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  add(duration) {\n    return $1e1f3157d0513e0f$export$96b1d28349274637(this, duration);\n  }\n\n  subtract(duration) {\n    return $1e1f3157d0513e0f$export$6814caac34ca03c7(this, duration);\n  }\n\n  set(fields, disambiguation) {\n    return $1e1f3157d0513e0f$export$31b5430eb18be4f8(this, fields, disambiguation);\n  }\n\n  cycle(field, amount, options) {\n    return $1e1f3157d0513e0f$export$9a297d111fc86b79(this, field, amount, options);\n  }\n\n  toDate() {\n    return $9ab2a87bc84c0bfa$export$83aac07b4c37b25(this);\n  }\n\n  toString() {\n    return $78b7d46219519df2$export$bf79f1ebf4b18792(this);\n  }\n\n  toAbsoluteString() {\n    return this.toDate().toISOString();\n  }\n\n  compare(b) {\n    // TODO: Is this a bad idea??\n    return this.toDate().getTime() - $9ab2a87bc84c0bfa$export$84c95a83c799e074(b, this.timeZone).toDate().getTime();\n  }\n\n  constructor() {\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type3.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    let [calendar, era, year, month, day] = $418a5bbf7b2f3448$var$shiftArgs(args);\n    let timeZone = args.shift();\n    let offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n    $1e1f3157d0513e0f$export$c4e2ecac49351ef2(this);\n  }\n\n}\n\nvar _type3 = new WeakMap();\n\nconst $e3160abf84b3082c$var$ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nconst $e3160abf84b3082c$var$ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nconst $e3160abf84b3082c$var$ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nconst $e3160abf84b3082c$var$ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction $e3160abf84b3082c$var$findEraFromGregorianDate(date) {\n  const idx = $e3160abf84b3082c$var$ERA_START_DATES.findIndex(_ref => {\n    let [year, month, day] = _ref;\n    if (date.year < year) return true;\n    if (date.year === year && date.month < month) return true;\n    if (date.year === year && date.month === month && date.day < day) return true;\n    return false;\n  });\n  if (idx === -1) return $e3160abf84b3082c$var$ERA_START_DATES.length - 1;\n  if (idx === 0) return 0;\n  return idx - 1;\n}\n\nfunction $e3160abf84b3082c$var$toGregorian(date) {\n  let eraAddend = $e3160abf84b3082c$var$ERA_ADDENDS[$e3160abf84b3082c$var$ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) throw new Error('Unknown era: ' + date.era);\n  return new $418a5bbf7b2f3448$export$99faa760c7908e4f(date.year + eraAddend, date.month, date.day);\n}\n\nclass $e3160abf84b3082c$export$b746ab2b60cdffbf extends $22a507fc519bfd45$export$80ee6245ec4f29ec {\n  fromJulianDay(jd) {\n    let date = super.fromJulianDay(jd);\n    let era = $e3160abf84b3082c$var$findEraFromGregorianDate(date);\n    date.era = $e3160abf84b3082c$var$ERA_NAMES[era];\n    date.year -= $e3160abf84b3082c$var$ERA_ADDENDS[era];\n    return date;\n  }\n\n  toJulianDay(date) {\n    return super.toJulianDay($e3160abf84b3082c$var$toGregorian(date));\n  }\n\n  balanceDate(date) {\n    let gregorianDate = $e3160abf84b3082c$var$toGregorian(date);\n    let era = $e3160abf84b3082c$var$findEraFromGregorianDate(gregorianDate);\n\n    if ($e3160abf84b3082c$var$ERA_NAMES[era] !== date.era) {\n      date.era = $e3160abf84b3082c$var$ERA_NAMES[era];\n      date.year = gregorianDate.year - $e3160abf84b3082c$var$ERA_ADDENDS[era];\n    }\n  }\n\n  constrainDate(date) {\n    let idx = $e3160abf84b3082c$var$ERA_NAMES.indexOf(date.era);\n    let end = $e3160abf84b3082c$var$ERA_END_DATES[idx];\n\n    if (end != null) {\n      let [endYear, endMonth, endDay] = end; // Constrain the year to the maximum possible value in the era.\n      // Then constrain the month and day fields within that.\n\n      let maxYear = endYear - $e3160abf84b3082c$var$ERA_ADDENDS[idx];\n      date.year = Math.min(maxYear, date.year);\n\n      if (date.year === maxYear) {\n        date.month = Math.min(endMonth, date.month);\n        if (date.month === endMonth) date.day = Math.min(endDay, date.day);\n      }\n\n      if (date.year === 1) {\n        let [, startMonth, startDay] = $e3160abf84b3082c$var$ERA_START_DATES[idx];\n        date.month = Math.max(startMonth, date.month);\n        if (date.month === startMonth) date.day = Math.max(startDay, date.day);\n      }\n    }\n  }\n\n  getEras() {\n    return $e3160abf84b3082c$var$ERA_NAMES;\n  }\n\n  getYearsInEra(date) {\n    // Get the number of years in the era, taking into account the date's month and day fields.\n    let era = $e3160abf84b3082c$var$ERA_NAMES.indexOf(date.era);\n    let next = $e3160abf84b3082c$var$ERA_START_DATES[era + 1];\n    if (next == null) return 9999;\n    let cur = $e3160abf84b3082c$var$ERA_START_DATES[era];\n    let years = next[0] - cur[0];\n    if (date.month < next[1] || date.month === next[1] && date.day < next[2]) years++;\n    return years;\n  }\n\n  getMinimumMonthInYear(date) {\n    let start = $e3160abf84b3082c$var$getMinimums(date);\n    return start ? start[1] : 1;\n  }\n\n  getMinimumDayInMonth(date) {\n    let start = $e3160abf84b3082c$var$getMinimums(date);\n    return start && date.month === start[1] ? start[2] : 1;\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier = 'japanese';\n  }\n\n}\n\nfunction $e3160abf84b3082c$var$getMinimums(date) {\n  if (date.year === 1) {\n    let idx = $e3160abf84b3082c$var$ERA_NAMES.indexOf(date.era);\n    return $e3160abf84b3082c$var$ERA_START_DATES[idx];\n  }\n}\n\nconst $16ad4c0fc3e87561$var$BUDDHIST_ERA_START = -543;\n\nclass $16ad4c0fc3e87561$export$42d20a78301dee44 extends $22a507fc519bfd45$export$80ee6245ec4f29ec {\n  fromJulianDay(jd) {\n    let date = super.fromJulianDay(jd);\n    date.year -= $16ad4c0fc3e87561$var$BUDDHIST_ERA_START;\n    return date;\n  }\n\n  toJulianDay(date) {\n    return super.toJulianDay(new $418a5bbf7b2f3448$export$99faa760c7908e4f(date.year + $16ad4c0fc3e87561$var$BUDDHIST_ERA_START, date.month, date.day));\n  }\n\n  getEras() {\n    return ['BE'];\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier = 'buddhist';\n  }\n\n}\n\nconst $ff4a0e4b9bb267dc$var$TAIWAN_ERA_START = 1911;\n\nfunction $ff4a0e4b9bb267dc$var$gregorianYear(date) {\n  return date.era === 'minguo' ? date.year + $ff4a0e4b9bb267dc$var$TAIWAN_ERA_START : 1 - date.year + $ff4a0e4b9bb267dc$var$TAIWAN_ERA_START;\n}\n\nfunction $ff4a0e4b9bb267dc$var$gregorianToTaiwan(year, date) {\n  let y = year - $ff4a0e4b9bb267dc$var$TAIWAN_ERA_START;\n\n  if (y > 0) {\n    date.era = 'minguo';\n    date.year = y;\n  } else {\n    date.era = 'before_minguo';\n    date.year = 1 - y;\n  }\n}\n\nclass $ff4a0e4b9bb267dc$export$65e01080afcb0799 extends $22a507fc519bfd45$export$80ee6245ec4f29ec {\n  fromJulianDay(jd) {\n    let date = super.fromJulianDay(jd);\n    $ff4a0e4b9bb267dc$var$gregorianToTaiwan(date.year, date);\n    return date;\n  }\n\n  toJulianDay(date) {\n    return super.toJulianDay(new $418a5bbf7b2f3448$export$99faa760c7908e4f($ff4a0e4b9bb267dc$var$gregorianYear(date), date.month, date.day));\n  }\n\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date) {\n    $ff4a0e4b9bb267dc$var$gregorianToTaiwan($ff4a0e4b9bb267dc$var$gregorianYear(date), date);\n  }\n\n  getYearsToAdd(date, years) {\n    return date.era === 'before_minguo' ? -years : years;\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier // Republic of China\n    = 'roc';\n  }\n\n}\n\nconst $ba726df0f17122fc$var$PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.\n\nfunction $ba726df0f17122fc$var$isLeapYear(year) {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = $6a413dc772e69324$export$842a2cf37af977e1(y0, 2820) + 474;\n  return $6a413dc772e69324$export$842a2cf37af977e1((y1 + 38) * 31, 128) < 31;\n}\n\nfunction $ba726df0f17122fc$var$persianToJulianDay(year, month, day) {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = $6a413dc772e69324$export$842a2cf37af977e1(y0, 2820) + 474;\n  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;\n  return $ba726df0f17122fc$var$PERSIAN_EPOCH - 1 + 1029983 * Math.floor(y0 / 2820) + 365 * (y1 - 1) + Math.floor((31 * y1 - 5) / 128) + offset + day;\n}\n\nclass $ba726df0f17122fc$export$37fccdbfd14c5939 {\n  fromJulianDay(jd) {\n    let d0 = jd - $ba726df0f17122fc$var$persianToJulianDay(475, 1, 1);\n    let n2820 = Math.floor(d0 / 1029983);\n    let d1 = $6a413dc772e69324$export$842a2cf37af977e1(d0, 1029983);\n    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);\n    let year = 474 + 2820 * n2820 + y2820;\n    if (year <= 0) year--;\n    let yDay = jd - $ba726df0f17122fc$var$persianToJulianDay(year, 1, 1) + 1;\n    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);\n    let day = jd - $ba726df0f17122fc$var$persianToJulianDay(year, month, 1) + 1;\n    return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this, year, month, day);\n  }\n\n  toJulianDay(date) {\n    return $ba726df0f17122fc$var$persianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getMonthsInYear() {\n    return 12;\n  }\n\n  getDaysInMonth(date) {\n    if (date.month <= 6) return 31;\n    if (date.month <= 11) return 30;\n    return $ba726df0f17122fc$var$isLeapYear(date.year) ? 30 : 29;\n  }\n\n  getEras() {\n    return ['AP'];\n  }\n\n  getYearsInEra() {\n    return 9999;\n  }\n\n  constructor() {\n    this.identifier = 'persian';\n  }\n\n} // Starts in 78 AD,\n\n\nconst $3d9dab5cb67ed9b1$var$INDIAN_ERA_START = 78; // The Indian year starts 80 days later than the Gregorian year.\n\nconst $3d9dab5cb67ed9b1$var$INDIAN_YEAR_START = 80;\n\nclass $3d9dab5cb67ed9b1$export$39f31c639fa15726 extends $22a507fc519bfd45$export$80ee6245ec4f29ec {\n  fromJulianDay(jd) {\n    // Gregorian date for Julian day\n    let date = super.fromJulianDay(jd); // Year in Saka era\n\n    let indianYear = date.year - $3d9dab5cb67ed9b1$var$INDIAN_ERA_START; // Day number in Gregorian year (starting from 0)\n\n    let yDay = jd - $22a507fc519bfd45$export$f297eb839006d339(date.year, 1, 1);\n    let leapMonth;\n\n    if (yDay < $3d9dab5cb67ed9b1$var$INDIAN_YEAR_START) {\n      //  Day is at the end of the preceding Saka year\n      indianYear--; // Days in leapMonth this year, previous Gregorian year\n\n      leapMonth = $22a507fc519bfd45$export$553d7fa8e3805fc0(date.year - 1) ? 31 : 30;\n      yDay += leapMonth + 155 + 90 + 10;\n    } else {\n      // Days in leapMonth this year\n      leapMonth = $22a507fc519bfd45$export$553d7fa8e3805fc0(date.year) ? 31 : 30;\n      yDay -= $3d9dab5cb67ed9b1$var$INDIAN_YEAR_START;\n    }\n\n    let indianMonth;\n    let indianDay;\n\n    if (yDay < leapMonth) {\n      indianMonth = 1;\n      indianDay = yDay + 1;\n    } else {\n      let mDay = yDay - leapMonth;\n\n      if (mDay < 155) {\n        indianMonth = Math.floor(mDay / 31) + 2;\n        indianDay = mDay % 31 + 1;\n      } else {\n        mDay -= 155;\n        indianMonth = Math.floor(mDay / 30) + 7;\n        indianDay = mDay % 30 + 1;\n      }\n    }\n\n    return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this, indianYear, indianMonth, indianDay);\n  }\n\n  toJulianDay(date) {\n    let year = date.year + $3d9dab5cb67ed9b1$var$INDIAN_ERA_START;\n    let leapMonth;\n    let jd;\n\n    if ($22a507fc519bfd45$export$553d7fa8e3805fc0(year)) {\n      leapMonth = 31;\n      jd = $22a507fc519bfd45$export$f297eb839006d339(year, 3, 21);\n    } else {\n      leapMonth = 30;\n      jd = $22a507fc519bfd45$export$f297eb839006d339(year, 3, 22);\n    }\n\n    if (date.month === 1) return jd + date.day - 1;\n    jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n    if (date.month >= 8) jd += (date.month - 7) * 30;\n    jd += date.day - 1;\n    return jd;\n  }\n\n  getDaysInMonth(date) {\n    if (date.month === 1 && $22a507fc519bfd45$export$553d7fa8e3805fc0(date.year + $3d9dab5cb67ed9b1$var$INDIAN_ERA_START)) return 31;\n    if (date.month >= 2 && date.month <= 6) return 31;\n    return 30;\n  }\n\n  getYearsInEra() {\n    return 9999;\n  }\n\n  getEras() {\n    return ['saka'];\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier = 'indian';\n  }\n\n}\n\nconst $082daba6c2a83229$var$CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\n\nconst $082daba6c2a83229$var$ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\n\nconst $082daba6c2a83229$var$UMALQURA_YEAR_START = 1300;\nconst $082daba6c2a83229$var$UMALQURA_YEAR_END = 1600;\nconst $082daba6c2a83229$var$UMALQURA_START_DAYS = 460322;\n\nfunction $082daba6c2a83229$var$islamicToJulianDay(epoch, year, month, day) {\n  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;\n}\n\nfunction $082daba6c2a83229$var$julianDayToIslamic(calendar, epoch, jd) {\n  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  let month = Math.min(12, Math.ceil((jd - (29 + $082daba6c2a83229$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  let day = jd - $082daba6c2a83229$var$islamicToJulianDay(epoch, year, month, 1) + 1;\n  return new $418a5bbf7b2f3448$export$99faa760c7908e4f(calendar, year, month, day);\n}\n\nfunction $082daba6c2a83229$var$isLeapYear(year) {\n  return (14 + 11 * year) % 30 < 11;\n}\n\nclass $082daba6c2a83229$export$2066795aadd37bfc {\n  fromJulianDay(jd) {\n    return $082daba6c2a83229$var$julianDayToIslamic(this, $082daba6c2a83229$var$CIVIL_EPOC, jd);\n  }\n\n  toJulianDay(date) {\n    return $082daba6c2a83229$var$islamicToJulianDay($082daba6c2a83229$var$CIVIL_EPOC, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date) {\n    let length = 29 + date.month % 2;\n    if (date.month === 12 && $082daba6c2a83229$var$isLeapYear(date.year)) length++;\n    return length;\n  }\n\n  getMonthsInYear() {\n    return 12;\n  }\n\n  getDaysInYear(date) {\n    return $082daba6c2a83229$var$isLeapYear(date.year) ? 355 : 354;\n  }\n\n  getYearsInEra() {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AH'];\n  }\n\n  constructor() {\n    this.identifier = 'islamic-civil';\n  }\n\n}\n\nclass $082daba6c2a83229$export$37f0887f2f9d22f7 extends $082daba6c2a83229$export$2066795aadd37bfc {\n  fromJulianDay(jd) {\n    return $082daba6c2a83229$var$julianDayToIslamic(this, $082daba6c2a83229$var$ASTRONOMICAL_EPOC, jd);\n  }\n\n  toJulianDay(date) {\n    return $082daba6c2a83229$var$islamicToJulianDay($082daba6c2a83229$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier = 'islamic-tbla';\n  }\n\n} // Generated by scripts/generate-umalqura.js\n\n\nconst $082daba6c2a83229$var$UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nlet $082daba6c2a83229$var$UMALQURA_MONTHLENGTH;\nlet $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE;\n\nfunction $082daba6c2a83229$var$umalquraYearStart(year) {\n  return $082daba6c2a83229$var$UMALQURA_START_DAYS + $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE[year - $082daba6c2a83229$var$UMALQURA_YEAR_START];\n}\n\nfunction $082daba6c2a83229$var$umalquraMonthLength(year, month) {\n  let idx = year - $082daba6c2a83229$var$UMALQURA_YEAR_START;\n  let mask = 1 << 11 - (month - 1);\n  if (($082daba6c2a83229$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0) return 29;else return 30;\n}\n\nfunction $082daba6c2a83229$var$umalquraMonthStart(year, month) {\n  let day = $082daba6c2a83229$var$umalquraYearStart(year);\n\n  for (let i = 1; i < month; i++) day += $082daba6c2a83229$var$umalquraMonthLength(year, i);\n\n  return day;\n}\n\nfunction $082daba6c2a83229$var$umalquraYearLength(year) {\n  return $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE[year + 1 - $082daba6c2a83229$var$UMALQURA_YEAR_START] - $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE[year - $082daba6c2a83229$var$UMALQURA_YEAR_START];\n}\n\nclass $082daba6c2a83229$export$5baab4758c231076 extends $082daba6c2a83229$export$2066795aadd37bfc {\n  fromJulianDay(jd) {\n    let days = jd - $082daba6c2a83229$var$CIVIL_EPOC;\n    let startDays = $082daba6c2a83229$var$umalquraYearStart($082daba6c2a83229$var$UMALQURA_YEAR_START);\n    let endDays = $082daba6c2a83229$var$umalquraYearStart($082daba6c2a83229$var$UMALQURA_YEAR_END);\n    if (days < startDays || days > endDays) return super.fromJulianDay(jd);else {\n      let y = $082daba6c2a83229$var$UMALQURA_YEAR_START - 1;\n      let m = 1;\n      let d = 1;\n\n      while (d > 0) {\n        y++;\n        d = days - $082daba6c2a83229$var$umalquraYearStart(y) + 1;\n        let yearLength = $082daba6c2a83229$var$umalquraYearLength(y);\n\n        if (d === yearLength) {\n          m = 12;\n          break;\n        } else if (d < yearLength) {\n          let monthLength = $082daba6c2a83229$var$umalquraMonthLength(y, m);\n          m = 1;\n\n          while (d > monthLength) {\n            d -= monthLength;\n            m++;\n            monthLength = $082daba6c2a83229$var$umalquraMonthLength(y, m);\n          }\n\n          break;\n        }\n      }\n\n      return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this, y, m, days - $082daba6c2a83229$var$umalquraMonthStart(y, m) + 1);\n    }\n  }\n\n  toJulianDay(date) {\n    if (date.year < $082daba6c2a83229$var$UMALQURA_YEAR_START || date.year > $082daba6c2a83229$var$UMALQURA_YEAR_END) return super.toJulianDay(date);\n    return $082daba6c2a83229$var$CIVIL_EPOC + $082daba6c2a83229$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);\n  }\n\n  getDaysInMonth(date) {\n    if (date.year < $082daba6c2a83229$var$UMALQURA_YEAR_START || date.year > $082daba6c2a83229$var$UMALQURA_YEAR_END) return super.getDaysInMonth(date);\n    return $082daba6c2a83229$var$umalquraMonthLength(date.year, date.month);\n  }\n\n  getDaysInYear(date) {\n    if (date.year < $082daba6c2a83229$var$UMALQURA_YEAR_START || date.year > $082daba6c2a83229$var$UMALQURA_YEAR_END) return super.getDaysInYear(date);\n    return $082daba6c2a83229$var$umalquraYearLength(date.year);\n  }\n\n  constructor() {\n    super();\n    this.identifier = 'islamic-umalqura';\n    if (!$082daba6c2a83229$var$UMALQURA_MONTHLENGTH) $082daba6c2a83229$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($082daba6c2a83229$var$UMALQURA_DATA), c => c.charCodeAt(0)).buffer);\n\n    if (!$082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE) {\n      $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($082daba6c2a83229$var$UMALQURA_YEAR_END - $082daba6c2a83229$var$UMALQURA_YEAR_START + 1);\n      let yearStart = 0;\n\n      for (let year = $082daba6c2a83229$var$UMALQURA_YEAR_START; year <= $082daba6c2a83229$var$UMALQURA_YEAR_END; year++) {\n        $082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE[year - $082daba6c2a83229$var$UMALQURA_YEAR_START] = yearStart;\n\n        for (let i = 1; i <= 12; i++) yearStart += $082daba6c2a83229$var$umalquraMonthLength(year, i);\n      }\n    }\n  }\n\n}\n\nconst $e047ddb73bf46f97$var$HEBREW_EPOCH = 347997; // Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\n\nconst $e047ddb73bf46f97$var$HOUR_PARTS = 1080;\nconst $e047ddb73bf46f97$var$DAY_PARTS = 24 * $e047ddb73bf46f97$var$HOUR_PARTS; // An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\n\nconst $e047ddb73bf46f97$var$MONTH_DAYS = 29;\nconst $e047ddb73bf46f97$var$MONTH_FRACT = 12 * $e047ddb73bf46f97$var$HOUR_PARTS + 793;\nconst $e047ddb73bf46f97$var$MONTH_PARTS = $e047ddb73bf46f97$var$MONTH_DAYS * $e047ddb73bf46f97$var$DAY_PARTS + $e047ddb73bf46f97$var$MONTH_FRACT;\n\nfunction $e047ddb73bf46f97$var$isLeapYear(year) {\n  return $6a413dc772e69324$export$842a2cf37af977e1(year * 7 + 1, 19) < 7;\n} // Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\n\n\nfunction $e047ddb73bf46f97$var$hebrewDelay1(year) {\n  let months = Math.floor((235 * year - 234) / 19);\n  let parts = 12084 + 13753 * months;\n  let day = months * 29 + Math.floor(parts / 25920);\n  if ($6a413dc772e69324$export$842a2cf37af977e1(3 * (day + 1), 7) < 3) day += 1;\n  return day;\n} // Check for delay in start of new year due to length of adjacent years\n\n\nfunction $e047ddb73bf46f97$var$hebrewDelay2(year) {\n  let last = $e047ddb73bf46f97$var$hebrewDelay1(year - 1);\n  let present = $e047ddb73bf46f97$var$hebrewDelay1(year);\n  let next = $e047ddb73bf46f97$var$hebrewDelay1(year + 1);\n  if (next - present === 356) return 2;\n  if (present - last === 382) return 1;\n  return 0;\n}\n\nfunction $e047ddb73bf46f97$var$startOfYear(year) {\n  return $e047ddb73bf46f97$var$hebrewDelay1(year) + $e047ddb73bf46f97$var$hebrewDelay2(year);\n}\n\nfunction $e047ddb73bf46f97$var$getDaysInYear(year) {\n  return $e047ddb73bf46f97$var$startOfYear(year + 1) - $e047ddb73bf46f97$var$startOfYear(year);\n}\n\nfunction $e047ddb73bf46f97$var$getYearType(year) {\n  let yearLength = $e047ddb73bf46f97$var$getDaysInYear(year);\n  if (yearLength > 380) yearLength -= 30; // Subtract length of leap month.\n\n  switch (yearLength) {\n    case 353:\n      return 0;\n    // deficient\n\n    case 354:\n      return 1;\n    // normal\n\n    case 355:\n      return 2;\n    // complete\n  }\n}\n\nfunction $e047ddb73bf46f97$var$getDaysInMonth(year, month) {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !$e047ddb73bf46f97$var$isLeapYear(year)) month++; // First of all, dispose of fixed-length 29 day months\n\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) return 29;\n  let yearType = $e047ddb73bf46f97$var$getYearType(year); // If it's Heshvan, days depend on length of year\n\n  if (month === 2) return yearType === 2 ? 30 : 29; // Similarly, Kislev varies with the length of year\n\n  if (month === 3) return yearType === 0 ? 29 : 30; // Adar I only exists in leap years\n\n  if (month === 6) return $e047ddb73bf46f97$var$isLeapYear(year) ? 30 : 0;\n  return 30;\n}\n\nclass $e047ddb73bf46f97$export$ca405048b8fb5af {\n  fromJulianDay(jd) {\n    let d = jd - $e047ddb73bf46f97$var$HEBREW_EPOCH;\n    let m = d * $e047ddb73bf46f97$var$DAY_PARTS / $e047ddb73bf46f97$var$MONTH_PARTS; // Months (approx)\n\n    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n\n    let ys = $e047ddb73bf46f97$var$startOfYear(year); // 1st day of year\n\n    let dayOfYear = Math.floor(d - ys); // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n\n    while (dayOfYear < 1) {\n      year--;\n      ys = $e047ddb73bf46f97$var$startOfYear(year);\n      dayOfYear = Math.floor(d - ys);\n    } // Now figure out which month we're in, and the date within that month\n\n\n    let month = 1;\n    let monthStart = 0;\n\n    while (monthStart < dayOfYear) {\n      monthStart += $e047ddb73bf46f97$var$getDaysInMonth(year, month);\n      month++;\n    }\n\n    month--;\n    monthStart -= $e047ddb73bf46f97$var$getDaysInMonth(year, month);\n    let day = dayOfYear - monthStart;\n    return new $418a5bbf7b2f3448$export$99faa760c7908e4f(this, year, month, day);\n  }\n\n  toJulianDay(date) {\n    let jd = $e047ddb73bf46f97$var$startOfYear(date.year);\n\n    for (let month = 1; month < date.month; month++) jd += $e047ddb73bf46f97$var$getDaysInMonth(date.year, month);\n\n    return jd + date.day + $e047ddb73bf46f97$var$HEBREW_EPOCH;\n  }\n\n  getDaysInMonth(date) {\n    return $e047ddb73bf46f97$var$getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(date) {\n    return $e047ddb73bf46f97$var$isLeapYear(date.year) ? 13 : 12;\n  }\n\n  getDaysInYear(date) {\n    return $e047ddb73bf46f97$var$getDaysInYear(date.year);\n  }\n\n  getYearsInEra() {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AM'];\n  }\n\n  balanceYearMonth(date, previousDate) {\n    // Keep date in the same month when switching between leap years and non leap years\n    if (previousDate.year !== date.year) {\n      if ($e047ddb73bf46f97$var$isLeapYear(previousDate.year) && !$e047ddb73bf46f97$var$isLeapYear(date.year) && previousDate.month > 6) date.month--;else if (!$e047ddb73bf46f97$var$isLeapYear(previousDate.year) && $e047ddb73bf46f97$var$isLeapYear(date.year) && previousDate.month > 6) date.month++;\n    }\n  }\n\n  constructor() {\n    this.identifier = 'hebrew';\n  }\n\n}\n\nconst $aed9e24d29bfb310$var$ETHIOPIC_EPOCH = 1723856;\nconst $aed9e24d29bfb310$var$COPTIC_EPOCH = 1824665; // The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\n\nconst $aed9e24d29bfb310$var$AMETE_MIHRET_DELTA = 5500;\n\nfunction $aed9e24d29bfb310$var$ceToJulianDay(epoch, year, month, day) {\n  return epoch // difference from Julian epoch to 1,1,1\n  + 365 * year // number of days from years\n  + Math.floor(year / 4) // extra day of leap year\n  + 30 * (month - 1) // number of days from months (1 based)\n  + day - 1 // number of days for present month (1 based)\n  ;\n}\n\nfunction $aed9e24d29bfb310$var$julianDayToCE(calendar, epoch, jd) {\n  let year = Math.floor(4 * (jd - epoch) / 1461);\n  let month = 1 + Math.floor((jd - $aed9e24d29bfb310$var$ceToJulianDay(epoch, year, 1, 1)) / 30);\n  let day = jd + 1 - $aed9e24d29bfb310$var$ceToJulianDay(epoch, year, month, 1);\n  return new $418a5bbf7b2f3448$export$99faa760c7908e4f(calendar, year, month, day);\n}\n\nfunction $aed9e24d29bfb310$var$getLeapDay(year) {\n  return Math.floor(year % 4 / 3);\n}\n\nfunction $aed9e24d29bfb310$var$getDaysInMonth(year, month) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) // not intercalary month\n    return 30;else // intercalary month 5 days + possible leap day\n    return $aed9e24d29bfb310$var$getLeapDay(year) + 5;\n}\n\nclass $aed9e24d29bfb310$export$26ba6eab5e20cd7d {\n  fromJulianDay(jd) {\n    let date = $aed9e24d29bfb310$var$julianDayToCE(this, $aed9e24d29bfb310$var$ETHIOPIC_EPOCH, jd);\n    if (date.year > 0) date.era = 'AM';else {\n      date.era = 'AA';\n      date.year += $aed9e24d29bfb310$var$AMETE_MIHRET_DELTA;\n    }\n    return date;\n  }\n\n  toJulianDay(date) {\n    let year = date.year;\n    if (date.era === 'AA') year -= $aed9e24d29bfb310$var$AMETE_MIHRET_DELTA;\n    return $aed9e24d29bfb310$var$ceToJulianDay($aed9e24d29bfb310$var$ETHIOPIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date) {\n    let year = date.year;\n    if (date.era === 'AA') year -= $aed9e24d29bfb310$var$AMETE_MIHRET_DELTA;\n    return $aed9e24d29bfb310$var$getDaysInMonth(year, date.month);\n  }\n\n  getMonthsInYear() {\n    return 13;\n  }\n\n  getDaysInYear(date) {\n    return 365 + $aed9e24d29bfb310$var$getLeapDay(date.year);\n  }\n\n  getYearsInEra() {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AA', 'AM'];\n  }\n\n  constructor() {\n    this.identifier = 'ethiopic';\n  }\n\n}\n\nclass $aed9e24d29bfb310$export$d72e0c37005a4914 extends $aed9e24d29bfb310$export$26ba6eab5e20cd7d {\n  fromJulianDay(jd) {\n    let date = $aed9e24d29bfb310$var$julianDayToCE(this, $aed9e24d29bfb310$var$ETHIOPIC_EPOCH, jd);\n    date.era = 'AA';\n    date.year += $aed9e24d29bfb310$var$AMETE_MIHRET_DELTA;\n    return date;\n  }\n\n  getEras() {\n    return ['AA'];\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier // also known as 'ethiopic-amete-alem' in ICU\n    = 'ethioaa';\n  }\n\n}\n\nclass $aed9e24d29bfb310$export$fe6243cbe1a4b7c1 extends $aed9e24d29bfb310$export$26ba6eab5e20cd7d {\n  fromJulianDay(jd) {\n    let date = $aed9e24d29bfb310$var$julianDayToCE(this, $aed9e24d29bfb310$var$COPTIC_EPOCH, jd);\n\n    if (date.year <= 0) {\n      date.era = 'BCE';\n      date.year = 1 - date.year;\n    } else date.era = 'CE';\n\n    return date;\n  }\n\n  toJulianDay(date) {\n    let year = date.year;\n    if (date.era === 'BCE') year = 1 - year;\n    return $aed9e24d29bfb310$var$ceToJulianDay($aed9e24d29bfb310$var$COPTIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date) {\n    let year = date.year;\n    if (date.era === 'BCE') year = 1 - year;\n    return $aed9e24d29bfb310$var$getDaysInMonth(year, date.month);\n  }\n\n  getYearsToAdd(date, years) {\n    return date.era === 'BCE' ? -years : years;\n  }\n\n  getEras() {\n    return ['BCE', 'CE'];\n  }\n\n  constructor() {\n    super(...arguments);\n    this.identifier = 'coptic';\n  }\n\n}\n\nfunction $dfd4c35de264b327$export$dd0bbc9b26defe37(name) {\n  switch (name) {\n    case 'buddhist':\n      return new $16ad4c0fc3e87561$export$42d20a78301dee44();\n\n    case 'ethiopic':\n      return new $aed9e24d29bfb310$export$26ba6eab5e20cd7d();\n\n    case 'ethioaa':\n      return new $aed9e24d29bfb310$export$d72e0c37005a4914();\n\n    case 'coptic':\n      return new $aed9e24d29bfb310$export$fe6243cbe1a4b7c1();\n\n    case 'hebrew':\n      return new $e047ddb73bf46f97$export$ca405048b8fb5af();\n\n    case 'indian':\n      return new $3d9dab5cb67ed9b1$export$39f31c639fa15726();\n\n    case 'islamic-civil':\n      return new $082daba6c2a83229$export$2066795aadd37bfc();\n\n    case 'islamic-tbla':\n      return new $082daba6c2a83229$export$37f0887f2f9d22f7();\n\n    case 'islamic-umalqura':\n      return new $082daba6c2a83229$export$5baab4758c231076();\n\n    case 'japanese':\n      return new $e3160abf84b3082c$export$b746ab2b60cdffbf();\n\n    case 'persian':\n      return new $ba726df0f17122fc$export$37fccdbfd14c5939();\n\n    case 'roc':\n      return new $ff4a0e4b9bb267dc$export$65e01080afcb0799();\n\n    case 'gregory':\n    default:\n      return new $22a507fc519bfd45$export$80ee6245ec4f29ec();\n  }\n}\n\nvar $52d5895097fb3243$exports = {};\nvar $ea6cd4c800b471d1$exports = {};\n$parcel$export($ea6cd4c800b471d1$exports, \"DateFormatter\", () => $ea6cd4c800b471d1$export$ad991b66133851cf);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $ea6cd4c800b471d1$var$formatterCache = new Map();\n\nclass $ea6cd4c800b471d1$export$ad991b66133851cf {\n  format(value) {\n    return this.formatter.format(value);\n  }\n\n  formatToParts(value) {\n    return this.formatter.formatToParts(value);\n  }\n\n  formatRange(start, end) {\n    // @ts-ignore\n    if (typeof this.formatter.formatRange === 'function') // @ts-ignore\n      return this.formatter.formatRange(start, end);\n    if (end < start) throw new RangeError('End date must be >= start date'); // Very basic fallback for old browsers.\n\n    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;\n  }\n\n  formatRangeToParts(start, end) {\n    // @ts-ignore\n    if (typeof this.formatter.formatRangeToParts === 'function') // @ts-ignore\n      return this.formatter.formatRangeToParts(start, end);\n    if (end < start) throw new RangeError('End date must be >= start date');\n    let startParts = this.formatter.formatToParts(start);\n    let endParts = this.formatter.formatToParts(end);\n    return [...startParts.map(p => ({ ...p,\n      source: 'startRange'\n    })), {\n      type: 'literal',\n      value: ' – ',\n      source: 'shared'\n    }, ...endParts.map(p => ({ ...p,\n      source: 'endRange'\n    }))];\n  }\n\n  resolvedOptions() {\n    let resolvedOptions = this.formatter.resolvedOptions();\n\n    if ($ea6cd4c800b471d1$var$hasBuggyResolvedHourCycle()) {\n      if (!this.resolvedHourCycle) this.resolvedHourCycle = $ea6cd4c800b471d1$var$getResolvedHourCycle(resolvedOptions.locale, this.options);\n      resolvedOptions.hourCycle = this.resolvedHourCycle;\n      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n    }\n\n    return resolvedOptions;\n  }\n\n  constructor(locale) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.formatter = $ea6cd4c800b471d1$var$getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n} // There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\n\n\nconst $ea6cd4c800b471d1$var$hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {}\n};\n\nfunction $ea6cd4c800b471d1$var$getCachedDateFormatter(locale) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && $ea6cd4c800b471d1$var$hasBuggyHour12Behavior()) {\n    options = { ...options\n    };\n    let pref = $ea6cd4c800b471d1$var$hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;\n    delete options.hour12;\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if ($ea6cd4c800b471d1$var$formatterCache.has(cacheKey)) return $ea6cd4c800b471d1$var$formatterCache.get(cacheKey);\n  let numberFormatter = new Intl.DateTimeFormat(locale, options);\n  $ea6cd4c800b471d1$var$formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nlet $ea6cd4c800b471d1$var$_hasBuggyHour12Behavior = null;\n\nfunction $ea6cd4c800b471d1$var$hasBuggyHour12Behavior() {\n  if ($ea6cd4c800b471d1$var$_hasBuggyHour12Behavior == null) $ea6cd4c800b471d1$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    hour12: false\n  }).format(new Date(2020, 2, 3, 0)) === '24';\n  return $ea6cd4c800b471d1$var$_hasBuggyHour12Behavior;\n}\n\nlet $ea6cd4c800b471d1$var$_hasBuggyResolvedHourCycle = null;\n\nfunction $ea6cd4c800b471d1$var$hasBuggyResolvedHourCycle() {\n  if ($ea6cd4c800b471d1$var$_hasBuggyResolvedHourCycle == null) $ea6cd4c800b471d1$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat('fr', {\n    hour: 'numeric',\n    hour12: false\n  }).resolvedOptions().hourCycle === 'h12';\n  return $ea6cd4c800b471d1$var$_hasBuggyResolvedHourCycle;\n}\n\nfunction $ea6cd4c800b471d1$var$getResolvedHourCycle(locale, options) {\n  if (!options.timeStyle && !options.hour) return undefined; // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  let formatter = $ea6cd4c800b471d1$var$getCachedDateFormatter(locale, { ...options,\n    timeZone: undefined // use local timezone\n\n  });\n  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour').value, 10);\n  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour').value, 10);\n  if (min === 0 && max === 23) return 'h23';\n  if (min === 24 && max === 23) return 'h24';\n  if (min === 0 && max === 11) return 'h11';\n  if (min === 12 && max === 11) return 'h12';\n  throw new Error('Unexpected hour cycle result');\n}\n\nexport { $22a507fc519bfd45$export$80ee6245ec4f29ec as GregorianCalendar, $e3160abf84b3082c$export$b746ab2b60cdffbf as JapaneseCalendar, $16ad4c0fc3e87561$export$42d20a78301dee44 as BuddhistCalendar, $ff4a0e4b9bb267dc$export$65e01080afcb0799 as TaiwanCalendar, $ba726df0f17122fc$export$37fccdbfd14c5939 as PersianCalendar, $3d9dab5cb67ed9b1$export$39f31c639fa15726 as IndianCalendar, $082daba6c2a83229$export$2066795aadd37bfc as IslamicCivilCalendar, $082daba6c2a83229$export$37f0887f2f9d22f7 as IslamicTabularCalendar, $082daba6c2a83229$export$5baab4758c231076 as IslamicUmalquraCalendar, $e047ddb73bf46f97$export$ca405048b8fb5af as HebrewCalendar, $aed9e24d29bfb310$export$26ba6eab5e20cd7d as EthiopicCalendar, $aed9e24d29bfb310$export$d72e0c37005a4914 as EthiopicAmeteAlemCalendar, $aed9e24d29bfb310$export$fe6243cbe1a4b7c1 as CopticCalendar, $dfd4c35de264b327$export$dd0bbc9b26defe37 as createCalendar, $418a5bbf7b2f3448$export$99faa760c7908e4f as CalendarDate, $418a5bbf7b2f3448$export$680ea196effce5f as Time, $418a5bbf7b2f3448$export$ca871e8dbb80966f as CalendarDateTime, $418a5bbf7b2f3448$export$d3b7288e7994edea as ZonedDateTime, $9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb as epochFromDate, $9ab2a87bc84c0bfa$export$b4a036af3fc0b032 as toCalendar, $9ab2a87bc84c0bfa$export$59c99f3515d3493f as getTimeZoneOffset, $9ab2a87bc84c0bfa$export$136f38efe7caf549 as possibleAbsolutes, $9ab2a87bc84c0bfa$export$5107c82f94518f5c as toAbsolute, $9ab2a87bc84c0bfa$export$b21e0b124e224484 as toCalendarDateTime, $9ab2a87bc84c0bfa$export$e67a095c620b86fe as toDate, $9ab2a87bc84c0bfa$export$1b96692a1ba042ac as fromAbsolute, $9ab2a87bc84c0bfa$export$e57ff100d91bd4b9 as fromDate, $9ab2a87bc84c0bfa$export$d7f92bcd3596b086 as fromDateToLocal, $9ab2a87bc84c0bfa$export$93522d1a439f3617 as toCalendarDate, $9ab2a87bc84c0bfa$export$6f4d78149f3f53ac as toDateFields, $9ab2a87bc84c0bfa$export$4d0393e732857be5 as toTimeFields, $9ab2a87bc84c0bfa$export$d33f79e3ffc3dc83 as toTime, $9ab2a87bc84c0bfa$export$84c95a83c799e074 as toZoned, $9ab2a87bc84c0bfa$export$538b00033cc11c75 as toTimeZone, $9ab2a87bc84c0bfa$export$83aac07b4c37b25 as zonedToDate, $9ab2a87bc84c0bfa$export$d9b67bc93c097491 as toLocalTimeZone, $571ccebef3ef72f1$export$ea39ec197993aef0 as isSameDay, $571ccebef3ef72f1$export$a18c89cbd24170ff as isSameMonth, $571ccebef3ef72f1$export$a5a3b454ada2268e as startOfMonth, $571ccebef3ef72f1$export$5841f9eb9773f25f as isSameYear, $571ccebef3ef72f1$export$f91e89d3d0406102 as startOfYear, $571ccebef3ef72f1$export$91b62ebf2ba703ee as isEqualDay, $571ccebef3ef72f1$export$5a8da0c44a3afdf2 as isEqualMonth, $571ccebef3ef72f1$export$ea840f5a6dda8147 as isEqualYear, $571ccebef3ef72f1$export$629b0a497aa65267 as isToday, $571ccebef3ef72f1$export$d0bdf45af03a6ea3 as today, $571ccebef3ef72f1$export$2061056d06d7cdf7 as getDayOfWeek, $571ccebef3ef72f1$export$461939dd4422153 as now, $571ccebef3ef72f1$export$68781ddf31c0090f as compareDate, $571ccebef3ef72f1$export$c19a80a9721b80f6 as compareTime, $571ccebef3ef72f1$export$126c91c941de7e as getHoursInDay, $571ccebef3ef72f1$export$aa8b41735afcabd2 as getLocalTimeZone, $571ccebef3ef72f1$export$a2258d9c4118825c as endOfMonth, $571ccebef3ef72f1$export$8b7aa55c66d5569e as endOfYear, $571ccebef3ef72f1$export$5412ac11713b72ad as getMinimumMonthInYear, $571ccebef3ef72f1$export$b2f4953d301981d5 as getMinimumDayInMonth, $571ccebef3ef72f1$export$42c81a444fbfb5d4 as startOfWeek, $571ccebef3ef72f1$export$ef8b6d9133084f4e as endOfWeek, $571ccebef3ef72f1$export$ccc1b2479e7dd654 as getWeeksInMonth, $571ccebef3ef72f1$export$5c333a116e949cdd as minDate, $571ccebef3ef72f1$export$a75f2bff57811055 as maxDate, $571ccebef3ef72f1$export$618d60ea299da42 as isWeekend, $571ccebef3ef72f1$export$ee9d87258e1d19ed as isWeekday, $78b7d46219519df2$export$c9698ec7f05a07e1 as parseTime, $78b7d46219519df2$export$6b862160d295c8e as parseDate, $78b7d46219519df2$export$588937bcd60ade55 as parseDateTime, $78b7d46219519df2$export$fd7893f06e92a6a4 as parseZonedDateTime, $78b7d46219519df2$export$4223de14708adc63 as dateTimeToString, $78b7d46219519df2$export$5adfdab05168c219 as parseAbsolute, $78b7d46219519df2$export$8e384432362ed0f0 as parseAbsoluteToLocal, $78b7d46219519df2$export$f59dee82248f5ad4 as timeToString, $78b7d46219519df2$export$60dfd74aa96791bd as dateToString, $78b7d46219519df2$export$bf79f1ebf4b18792 as zonedDateTimeToString, $ea6cd4c800b471d1$export$ad991b66133851cf as DateFormatter };","map":{"version":3,"mappings":"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","names":["$7470da919d0ed06d$export$7a5acbd77d414bd9","AD","AE","AF","AI","AL","AM","AN","AT","AX","AZ","BA","BE","BG","BH","BM","BN","BY","CH","CL","CM","CR","CY","CZ","DE","DJ","DK","DZ","EC","EE","EG","ES","FI","FJ","FO","FR","GB","GE","GF","GP","GR","HR","HU","IE","IQ","IR","IS","IT","JO","KG","KW","KZ","LB","LI","LK","LT","LU","LV","LY","MC","MD","ME","MK","MN","MQ","MV","MY","NL","NO","NZ","OM","PL","QA","RE","RO","RS","RU","SD","SE","SI","SK","SM","SY","TJ","TM","TR","UA","UY","UZ","VA","VN","XK","$571ccebef3ef72f1$export$ea39ec197993aef0","a","b","$9ab2a87bc84c0bfa$export$b4a036af3fc0b032","calendar","era","year","month","day","$571ccebef3ef72f1$export$a18c89cbd24170ff","$571ccebef3ef72f1$export$a5a3b454ada2268e","$571ccebef3ef72f1$export$5841f9eb9773f25f","$571ccebef3ef72f1$export$f91e89d3d0406102","$571ccebef3ef72f1$export$91b62ebf2ba703ee","identifier","$571ccebef3ef72f1$export$5a8da0c44a3afdf2","$571ccebef3ef72f1$export$ea840f5a6dda8147","$571ccebef3ef72f1$export$629b0a497aa65267","date","timeZone","$571ccebef3ef72f1$export$d0bdf45af03a6ea3","$571ccebef3ef72f1$export$2061056d06d7cdf7","locale","julian","toJulianDay","dayOfWeek","Math","ceil","$571ccebef3ef72f1$var$getWeekStart","$571ccebef3ef72f1$export$461939dd4422153","$9ab2a87bc84c0bfa$export$1b96692a1ba042ac","Date","now","$9ab2a87bc84c0bfa$export$93522d1a439f3617","$571ccebef3ef72f1$export$68781ddf31c0090f","$571ccebef3ef72f1$export$c19a80a9721b80f6","$571ccebef3ef72f1$var$timeToMs","hour","minute","second","millisecond","$571ccebef3ef72f1$export$126c91c941de7e","ms","$9ab2a87bc84c0bfa$export$5107c82f94518f5c","tomorrow","add","days","tomorrowMs","$571ccebef3ef72f1$var$localTimeZone","$571ccebef3ef72f1$export$aa8b41735afcabd2","Intl","DateTimeFormat","resolvedOptions","subtract","$571ccebef3ef72f1$export$a2258d9c4118825c","getDaysInMonth","months","$571ccebef3ef72f1$export$8b7aa55c66d5569e","getMonthsInYear","$571ccebef3ef72f1$export$5412ac11713b72ad","getMinimumMonthInYear","$571ccebef3ef72f1$export$b2f4953d301981d5","getMinimumDayInMonth","$571ccebef3ef72f1$export$42c81a444fbfb5d4","$571ccebef3ef72f1$export$ef8b6d9133084f4e","$571ccebef3ef72f1$var$cachedRegions","Map","$571ccebef3ef72f1$var$getRegion","Locale","region","get","maximize","set","part","split","$571ccebef3ef72f1$export$ccc1b2479e7dd654","$571ccebef3ef72f1$export$5c333a116e949cdd","compare","$571ccebef3ef72f1$export$a75f2bff57811055","$571ccebef3ef72f1$var$WEEKEND_DATA","IL","SA","YE","$571ccebef3ef72f1$export$618d60ea299da42","start","end","$571ccebef3ef72f1$export$ee9d87258e1d19ed","$6a413dc772e69324$export$842a2cf37af977e1","amount","numerator","floor","$6a413dc772e69324$export$784d13d8ee351f07","$418a5bbf7b2f3448$export$99faa760c7908e4f","$6a413dc772e69324$export$27fa0172ae2644b3","$418a5bbf7b2f3448$export$ca871e8dbb80966f","$22a507fc519bfd45$var$EPOCH","$22a507fc519bfd45$export$f297eb839006d339","y1","monthOffset","$22a507fc519bfd45$export$553d7fa8e3805fc0","$22a507fc519bfd45$var$daysInMonth","standard","leapyear","$22a507fc519bfd45$export$80ee6245ec4f29ec","fromJulianDay","jd","jd0","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearDay","leapAdj","getDaysInYear","getYearsInEra","getEras","getYearsToAdd","years","balanceDate","$9ab2a87bc84c0bfa$export$bd4fb2bc8bb06fb","$9ab2a87bc84c0bfa$var$epochFromParts","setUTCHours","setUTCFullYear","getTime","$9ab2a87bc84c0bfa$export$59c99f3515d3493f","getTimezoneOffset","$9ab2a87bc84c0bfa$var$getTimeZoneParts","utc","$9ab2a87bc84c0bfa$var$formattersByTimeZone","formatter","hour12","parts","formatToParts","namedParts","type","value","$9ab2a87bc84c0bfa$var$DAYMILLIS","$9ab2a87bc84c0bfa$export$136f38efe7caf549","earlier","later","$9ab2a87bc84c0bfa$var$getValidWallTimes","found","filter","absolute","$9ab2a87bc84c0bfa$var$isValidWallTime","disambiguation","dateTime","$9ab2a87bc84c0bfa$export$b21e0b124e224484","setFullYear","setHours","offsetBefore","offsetAfter","valid","length","RangeError","min","max","$9ab2a87bc84c0bfa$export$e67a095c620b86fe","offset","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$418a5bbf7b2f3448$export$d3b7288e7994edea","$9ab2a87bc84c0bfa$export$e57ff100d91bd4b9","$9ab2a87bc84c0bfa$export$d7f92bcd3596b086","$9ab2a87bc84c0bfa$export$6f4d78149f3f53ac","$9ab2a87bc84c0bfa$export$4d0393e732857be5","time","$9ab2a87bc84c0bfa$export$d33f79e3ffc3dc83","$418a5bbf7b2f3448$export$680ea196effce5f","calendarDate","copy","$9ab2a87bc84c0bfa$export$84c95a83c799e074","$9ab2a87bc84c0bfa$export$538b00033cc11c75","$9ab2a87bc84c0bfa$export$83aac07b4c37b25","$9ab2a87bc84c0bfa$export$d9b67bc93c097491","$1e1f3157d0513e0f$var$ONE_HOUR","$1e1f3157d0513e0f$export$e16d8520af44a096","duration","mutableDate","$1e1f3157d0513e0f$var$addTimeFields","$1e1f3157d0513e0f$var$addYears","balanceYearMonth","$1e1f3157d0513e0f$var$balanceYearMonth","$1e1f3157d0513e0f$var$constrainMonthDay","weeks","$1e1f3157d0513e0f$var$balanceDay","monthsInYear","$1e1f3157d0513e0f$export$c4e2ecac49351ef2","constrainDate","$1e1f3157d0513e0f$export$3e2544e88a25bff8","inverseDuration","key","$1e1f3157d0513e0f$export$4e2d2ead65e5f7e3","$1e1f3157d0513e0f$export$adaa4cf7ef1b65be","fields","$1e1f3157d0513e0f$export$e5d5e1c1822b6e56","mutableValue","$1e1f3157d0513e0f$export$7555de1e070510cb","$1e1f3157d0513e0f$var$balanceTime","$1e1f3157d0513e0f$var$nonNegativeMod","result","hours","minutes","seconds","milliseconds","$1e1f3157d0513e0f$export$7ed87b6bc2506470","res","$1e1f3157d0513e0f$export$fe34d3a381cd7501","$1e1f3157d0513e0f$export$d52ced6badfb9a4c","field","options","mutable","eras","eraIndex","indexOf","Error","$1e1f3157d0513e0f$var$cycleValue","round","Infinity","$1e1f3157d0513e0f$export$dd02b3e0007dfe28","hourCycle","isPM","sign","div","abs","$1e1f3157d0513e0f$export$96b1d28349274637","$1e1f3157d0513e0f$export$6814caac34ca03c7","$1e1f3157d0513e0f$export$9a297d111fc86b79","plainDateTime","minDate","minAbsolute","maxDate","maxAbsolute","pop","ms1","remainder","$1e1f3157d0513e0f$export$31b5430eb18be4f8","$78b7d46219519df2$var$TIME_RE","$78b7d46219519df2$var$DATE_RE","$78b7d46219519df2$var$DATE_TIME_RE","$78b7d46219519df2$var$ZONED_DATE_TIME_RE","$78b7d46219519df2$var$ABSOLUTE_RE","$78b7d46219519df2$export$c9698ec7f05a07e1","m","match","$78b7d46219519df2$var$parseNumber","$78b7d46219519df2$export$6b862160d295c8e","$78b7d46219519df2$export$588937bcd60ade55","$78b7d46219519df2$export$fd7893f06e92a6a4","ref","absolutes","includes","$78b7d46219519df2$var$offsetToString","$78b7d46219519df2$export$4223de14708adc63","$78b7d46219519df2$export$5adfdab05168c219","$78b7d46219519df2$export$8e384432362ed0f0","val","Number","$78b7d46219519df2$export$f59dee82248f5ad4","String","padStart","slice","$78b7d46219519df2$export$60dfd74aa96791bd","gregorianDate","offsetHours","offsetMinutes","$78b7d46219519df2$export$bf79f1ebf4b18792","$418a5bbf7b2f3448$var$shiftArgs","args","shift","cycle","toDate","toString","_type","_type1","_type2","toAbsoluteString","toISOString","_type3","$e3160abf84b3082c$var$ERA_START_DATES","$e3160abf84b3082c$var$ERA_END_DATES","$e3160abf84b3082c$var$ERA_ADDENDS","$e3160abf84b3082c$var$ERA_NAMES","$e3160abf84b3082c$var$findEraFromGregorianDate","idx","findIndex","$e3160abf84b3082c$var$toGregorian","eraAddend","$e3160abf84b3082c$export$b746ab2b60cdffbf","endYear","endMonth","endDay","maxYear","startMonth","startDay","next","cur","$e3160abf84b3082c$var$getMinimums","$16ad4c0fc3e87561$var$BUDDHIST_ERA_START","$16ad4c0fc3e87561$export$42d20a78301dee44","$ff4a0e4b9bb267dc$var$TAIWAN_ERA_START","$ff4a0e4b9bb267dc$var$gregorianYear","$ff4a0e4b9bb267dc$var$gregorianToTaiwan","y","$ff4a0e4b9bb267dc$export$65e01080afcb0799","$ba726df0f17122fc$var$PERSIAN_EPOCH","$ba726df0f17122fc$var$isLeapYear","y0","$ba726df0f17122fc$var$persianToJulianDay","$ba726df0f17122fc$export$37fccdbfd14c5939","d0","n2820","d1","y2820","yDay","$3d9dab5cb67ed9b1$var$INDIAN_ERA_START","$3d9dab5cb67ed9b1$var$INDIAN_YEAR_START","$3d9dab5cb67ed9b1$export$39f31c639fa15726","indianYear","leapMonth","indianMonth","indianDay","mDay","$082daba6c2a83229$var$CIVIL_EPOC","$082daba6c2a83229$var$ASTRONOMICAL_EPOC","$082daba6c2a83229$var$UMALQURA_YEAR_START","$082daba6c2a83229$var$UMALQURA_YEAR_END","$082daba6c2a83229$var$UMALQURA_START_DAYS","$082daba6c2a83229$var$islamicToJulianDay","epoch","$082daba6c2a83229$var$julianDayToIslamic","$082daba6c2a83229$var$isLeapYear","$082daba6c2a83229$export$2066795aadd37bfc","$082daba6c2a83229$export$37f0887f2f9d22f7","$082daba6c2a83229$var$UMALQURA_DATA","$082daba6c2a83229$var$UMALQURA_MONTHLENGTH","$082daba6c2a83229$var$UMALQURA_YEAR_START_TABLE","$082daba6c2a83229$var$umalquraYearStart","$082daba6c2a83229$var$umalquraMonthLength","mask","$082daba6c2a83229$var$umalquraMonthStart","i","$082daba6c2a83229$var$umalquraYearLength","$082daba6c2a83229$export$5baab4758c231076","startDays","endDays","d","yearLength","monthLength","Uint16Array","Uint8Array","from","atob","c","charCodeAt","buffer","Uint32Array","yearStart","$e047ddb73bf46f97$var$HEBREW_EPOCH","$e047ddb73bf46f97$var$HOUR_PARTS","$e047ddb73bf46f97$var$DAY_PARTS","$e047ddb73bf46f97$var$MONTH_DAYS","$e047ddb73bf46f97$var$MONTH_FRACT","$e047ddb73bf46f97$var$MONTH_PARTS","$e047ddb73bf46f97$var$isLeapYear","$e047ddb73bf46f97$var$hebrewDelay1","$e047ddb73bf46f97$var$hebrewDelay2","last","present","$e047ddb73bf46f97$var$startOfYear","$e047ddb73bf46f97$var$getDaysInYear","$e047ddb73bf46f97$var$getYearType","$e047ddb73bf46f97$var$getDaysInMonth","yearType","$e047ddb73bf46f97$export$ca405048b8fb5af","ys","dayOfYear","monthStart","previousDate","$aed9e24d29bfb310$var$ETHIOPIC_EPOCH","$aed9e24d29bfb310$var$COPTIC_EPOCH","$aed9e24d29bfb310$var$AMETE_MIHRET_DELTA","$aed9e24d29bfb310$var$ceToJulianDay","$aed9e24d29bfb310$var$julianDayToCE","$aed9e24d29bfb310$var$getLeapDay","$aed9e24d29bfb310$var$getDaysInMonth","$aed9e24d29bfb310$export$26ba6eab5e20cd7d","$aed9e24d29bfb310$export$d72e0c37005a4914","$aed9e24d29bfb310$export$fe6243cbe1a4b7c1","$dfd4c35de264b327$export$dd0bbc9b26defe37","name","$ea6cd4c800b471d1$var$formatterCache","$ea6cd4c800b471d1$export$ad991b66133851cf","format","formatRange","formatRangeToParts","startParts","endParts","map","p","source","$ea6cd4c800b471d1$var$hasBuggyResolvedHourCycle","resolvedHourCycle","$ea6cd4c800b471d1$var$getResolvedHourCycle","$ea6cd4c800b471d1$var$getCachedDateFormatter","$ea6cd4c800b471d1$var$hour12Preferences","true","ja","false","$ea6cd4c800b471d1$var$hasBuggyHour12Behavior","pref","defaultHourCycle","cacheKey","Object","entries","sort","join","has","numberFormatter","$ea6cd4c800b471d1$var$_hasBuggyHour12Behavior","$ea6cd4c800b471d1$var$_hasBuggyResolvedHourCycle","timeStyle","undefined","replace","parseInt","find"],"sources":["/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/weekStartData.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/queries.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/utils.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/GregorianCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/conversion.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/manipulation.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/string.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/CalendarDate.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/JapaneseCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/BuddhistCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/TaiwanCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/PersianCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/IndianCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/IslamicCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/HebrewCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/EthiopicCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/createCalendar.ts","/Users/asattiraju/Desktop/gt-bigdata-website/node_modules/@internationalized/date/dist/packages/@internationalized/date/src/DateFormatter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Data from https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/weekData.json\n// Locales starting on Sunday have been removed for compression.\nexport const weekStartData = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AT: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime} from './types';\nimport {CalendarDate, CalendarDateTime, ZonedDateTime} from './CalendarDate';\nimport {fromAbsolute, toAbsolute, toCalendar, toCalendarDate} from './conversion';\nimport {weekStartData} from './weekStartData';\n\ntype DateValue = CalendarDate | CalendarDateTime | ZonedDateTime;\n\nexport function isSameDay(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nexport function isSameMonth(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nexport function isSameYear(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.era === b.era && a.year === b.year;\n}\n\nexport function isEqualDay(a: DateValue, b: DateValue): boolean {\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nexport function isEqualMonth(a: DateValue, b: DateValue): boolean {\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nexport function isEqualYear(a: DateValue, b: DateValue): boolean {\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;\n}\n\nexport function isToday(date: DateValue, timeZone: string): boolean {\n  return isSameDay(date, today(timeZone));\n}\n\nexport function getDayOfWeek(date: DateValue, locale: string) {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1 - getWeekStart(locale)) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  return dayOfWeek;\n}\n\nexport function now(timeZone: string): ZonedDateTime {\n  return fromAbsolute(Date.now(), timeZone);\n}\n\nexport function today(timeZone: string): CalendarDate {\n  return toCalendarDate(now(timeZone));\n}\n\nexport function compareDate(a: AnyCalendarDate, b: AnyCalendarDate): number {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nexport function compareTime(a: AnyTime, b: AnyTime): number {\n  return timeToMs(a) - timeToMs(b);\n}\n\nfunction timeToMs(a: AnyTime): number {\n  return a.hour * 60 * 60 * 1000 + a.minute * 60 * 1000 + a.second * 1000 + a.millisecond;\n}\n\nexport function getHoursInDay(a: CalendarDate, timeZone: string): number {\n  let ms = toAbsolute(a, timeZone);\n  let tomorrow = a.add({days: 1});\n  let tomorrowMs = toAbsolute(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nlet localTimeZone = null;\nexport function getLocalTimeZone(): string {\n  // TODO: invalidate this somehow?\n  if (localTimeZone == null) {\n    localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  return localTimeZone;\n}\n\nexport function startOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function startOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function startOfMonth(date: CalendarDate): CalendarDate;\nexport function startOfMonth(date: DateValue): DateValue;\nexport function startOfMonth(date: DateValue) {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({days: date.day - 1});\n}\n\nexport function endOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function endOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function endOfMonth(date: CalendarDate): CalendarDate;\nexport function endOfMonth(date: DateValue): DateValue;\nexport function endOfMonth(date: DateValue) {\n  return date.add({days: date.calendar.getDaysInMonth(date) - date.day});\n}\n\nexport function startOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function startOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function startOfYear(date: CalendarDate): CalendarDate;\nexport function startOfYear(date: DateValue): DateValue;\nexport function startOfYear(date: DateValue) {\n  return startOfMonth(date.subtract({months: date.month - 1}));\n}\n\nexport function endOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function endOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function endOfYear(date: CalendarDate): CalendarDate;\nexport function endOfYear(date: DateValue): DateValue;\nexport function endOfYear(date: DateValue) {\n  return endOfMonth(date.add({months: date.calendar.getMonthsInYear(date) - date.month}));\n}\n\nexport function getMinimumMonthInYear(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumMonthInYear) {\n    return date.calendar.getMinimumMonthInYear(date);\n  }\n\n  return 1;\n}\n\nexport function getMinimumDayInMonth(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumDayInMonth) {\n    return date.calendar.getMinimumDayInMonth(date);\n  }\n\n  return 1;\n}\n\nexport function startOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function startOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function startOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function startOfWeek(date: DateValue, locale: string): DateValue;\nexport function startOfWeek(date: DateValue, locale: string) {\n  let dayOfWeek = getDayOfWeek(date, locale);\n  return date.subtract({days: dayOfWeek});\n}\n\nexport function endOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function endOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function endOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function endOfWeek(date: DateValue, locale: string) {\n  return startOfWeek(date, locale).add({days: 6});\n}\n\nconst cachedRegions = new Map<string, string>();\n\nfunction getRegion(locale: string) {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    let region = cachedRegions.get(locale);\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      cachedRegions.set(locale, region);\n    }\n    return region;\n  }\n\n  // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n  let part = locale.split('-')[1];\n  return part === 'u' ? null : part;\n}\n\nfunction getWeekStart(locale: string) {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  let region = getRegion(locale);\n  return weekStartData[region] || 0;\n}\n\nexport function getWeeksInMonth(date: DateValue, locale: string) {\n  let days = date.calendar.getDaysInMonth(date);\n  return Math.ceil((getDayOfWeek(startOfMonth(date), locale) + days) / 7);\n}\n\nexport function minDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  return a.compare(b) <= 0 ? a : b;\n}\n\nexport function maxDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  return a.compare(b) >= 0 ? a : b;\n}\n\nconst WEEKEND_DATA = {\n  AF: [4, 5],\n  AE: [5, 6],\n  BH: [5, 6],\n  DZ: [5, 6],\n  EG: [5, 6],\n  IL: [5, 6],\n  IQ: [5, 6],\n  IR: [5, 5],\n  JO: [5, 6],\n  KW: [5, 6],\n  LY: [5, 6],\n  OM: [5, 6],\n  QA: [5, 6],\n  SA: [5, 6],\n  SD: [5, 6],\n  SY: [5, 6],\n  YE: [5, 6]\n};\n\nexport function isWeekend(date: DateValue, locale: string) {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  let region = getRegion(locale);\n  // Use Intl.Locale for this once weekInfo is supported.\n  // https://github.com/tc39/proposal-intl-locale-info\n  let [start, end] = WEEKEND_DATA[region] || [6, 0];\n  return dayOfWeek === start || dayOfWeek === end;\n}\n\nexport function isWeekday(date: DateValue, locale: string) {\n  return !isWeekend(date, locale);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, CalendarDateTime} from './CalendarDate';\n\nexport type Mutable<T> = {\n  -readonly[P in keyof T]: T[P]\n};\n\nexport function mod(amount: number, numerator: number): number {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n\nexport function copy(date: CalendarDate): Mutable<CalendarDate> {\n  if (date.era) {\n    return new CalendarDate(date.calendar, date.era, date.year, date.month, date.day);\n  } else {\n    return new CalendarDate(date.calendar, date.year, date.month, date.day);\n  }\n}\n\nexport function copyDateTime(date: CalendarDateTime): Mutable<CalendarDateTime> {\n  if (date.era) {\n    return new CalendarDateTime(date.calendar, date.era, date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n  } else {\n    return new CalendarDateTime(date.calendar, date.year, date.month, date.day, date.hour, date.minute, date.second);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst EPOCH = 1721426; // 001/01/03 Julian C.E.\nexport function gregorianToJulianDay(year: number, month: number, day: number): number {\n  let y1 = year - 1;\n  let monthOffset = -2;\n  if (month <= 2) {\n    monthOffset = 0;\n  } else if (isLeapYear(year)) {\n    monthOffset = -1;\n  }\n\n  return (\n    EPOCH -\n    1 +\n    365 * y1 +\n    Math.floor(y1 / 4) -\n    Math.floor(y1 / 100) +\n    Math.floor(y1 / 400) +\n    Math.floor((367 * month - 362) / 12 + monthOffset + day)\n  );\n}\n\nexport function isLeapYear(year: number): boolean {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nconst daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\nexport class GregorianCalendar implements Calendar {\n  identifier = 'gregory';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let jd0 = jd;\n    let depoch = jd0 - EPOCH;\n    let quadricent = Math.floor(depoch / 146097);\n    let dqc = mod(depoch, 146097);\n    let cent = Math.floor(dqc / 36524);\n    let dcent = mod(dqc, 36524);\n    let quad = Math.floor(dcent / 1461);\n    let dquad = mod(dcent, 1461);\n    let yindex = Math.floor(dquad / 365);\n\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n    let yearDay = jd0 - gregorianToJulianDay(year, 1, 1);\n    let leapAdj = 2;\n    if (jd0 < gregorianToJulianDay(year, 3, 1)) {\n      leapAdj = 0;\n    } else if (isLeapYear(year)) {\n      leapAdj = 1;\n    }\n    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n    let day = jd0 - gregorianToJulianDay(year, month, 1) + 1;\n\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return gregorianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return daysInMonth[isLeapYear(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 366 : 365;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getYearsInEra(date: AnyCalendarDate): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['BC', 'AD'];\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BC' ? -years : years;\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    if (date.year <= 0) {\n      date.era = date.era === 'BC' ? 'AD' : 'BC';\n      date.year = 1 - date.year;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, AnyDateTime, AnyTime, Calendar, DateFields, Disambiguation, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nexport function epochFromDate(date: AnyDateTime) {\n  date = toCalendar(date, new GregorianCalendar());\n  return epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction epochFromParts(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number) {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  let date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nexport function getTimeZoneOffset(ms: number, timeZone: string) {\n  // Fast path: for local timezone, use native Date.\n  if (timeZone === getLocalTimeZone()) {\n    return new Date(ms).getTimezoneOffset() * -60 * 1000;\n  }\n\n  let {year, month, day, hour, minute, second} = getTimeZoneParts(ms, timeZone);\n  let utc = epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nconst formattersByTimeZone = new Map<string, Intl.DateTimeFormat>();\n\nfunction getTimeZoneParts(ms: number, timeZone: string) {\n  let formatter = formattersByTimeZone.get(timeZone);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n\n    formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  let parts = formatter.formatToParts(new Date(ms));\n  let namedParts: {[name: string]: string} = {};\n  for (let part of parts) {\n    if (part.type !== 'literal') {\n      namedParts[part.type] = part.value;\n    }\n  }\n\n  return {\n    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour, // bugs.chromium.org/p/chromium/issues/detail?id=1045791\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nconst DAYMILLIS = 86400000;\n\nexport function possibleAbsolutes(date: CalendarDateTime, timeZone: string): number[] {\n  let ms = epochFromDate(date);\n  let earlier = ms - getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let later = ms - getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  return getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction getValidWallTimes(date: CalendarDateTime, timeZone: string, earlier: number, later: number): number[] {\n  let found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(absolute => isValidWallTime(date, timeZone, absolute));\n}\n\nfunction isValidWallTime(date: CalendarDateTime, timeZone: string, absolute: number) {\n  let parts = getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year\n    && date.month === parts.month\n    && date.day === parts.day\n    && date.hour === parts.hour\n    && date.minute === parts.minute\n    && date.second === parts.second;\n}\n\nexport function toAbsolute(date: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): number {\n  let dateTime = toCalendarDateTime(date);\n\n  // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n  if (timeZone === getLocalTimeZone() && disambiguation === 'compatible') {\n    dateTime = toCalendar(dateTime, new GregorianCalendar());\n\n    // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n    let date = new Date();\n    date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);\n    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n    return date.getTime();\n  }\n\n  let ms = epochFromDate(dateTime);\n  let offsetBefore = getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let offsetAfter = getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  let valid = getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n\n  if (valid.length === 1) {\n    return valid[0];\n  }\n\n  if (valid.length > 1) {\n    switch (disambiguation) {\n      // 'compatible' means 'earlier' for \"fall back\" transitions\n      case 'compatible':\n      case 'earlier':\n        return valid[0];\n      case 'later':\n        return valid[valid.length - 1];\n      case 'reject':\n        throw new RangeError('Multiple possible absolute times found');\n    }\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nexport function toDate(dateTime: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): Date {\n  return new Date(toAbsolute(dateTime, timeZone, disambiguation));\n}\n\nexport function fromAbsolute(ms: number, timeZone: string): ZonedDateTime {\n  let offset = getTimeZoneOffset(ms, timeZone);\n  let date = new Date(ms + offset);\n  let year = date.getUTCFullYear();\n  let month = date.getUTCMonth() + 1;\n  let day = date.getUTCDate();\n  let hour = date.getUTCHours();\n  let minute = date.getUTCMinutes();\n  let second = date.getUTCSeconds();\n  let millisecond = date.getUTCMilliseconds();\n\n  return new ZonedDateTime(year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\nexport function fromDate(date: Date, timeZone: string): ZonedDateTime {\n  return fromAbsolute(date.getTime(), timeZone);\n}\n\nexport function fromDateToLocal(date: Date): ZonedDateTime {\n  return fromDate(date, getLocalTimeZone());\n}\n\nexport function toCalendarDate(dateTime: AnyCalendarDate): CalendarDate {\n  return new CalendarDate(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nexport function toDateFields(date: AnyCalendarDate): DateFields {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nexport function toTimeFields(date: AnyTime): TimeFields {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\nexport function toCalendarDateTime(date: CalendarDate | CalendarDateTime | ZonedDateTime, time?: AnyTime): CalendarDateTime {\n  let hour = 0, minute = 0, second = 0, millisecond = 0;\n  if ('timeZone' in date) {\n    ({hour, minute, second, millisecond} = date);\n  } else if ('hour' in date && !time) {\n    return date;\n  }\n\n  if (time) {\n    ({hour, minute, second, millisecond} = time);\n  }\n\n  return new CalendarDateTime(\n    date.calendar,\n    date.era,\n    date.year,\n    date.month,\n    date.day,\n    hour,\n    minute,\n    second,\n    millisecond\n  );\n}\n\nexport function toTime(dateTime: CalendarDateTime): Time {\n  return new Time(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\nexport function toCalendar<T extends AnyCalendarDate>(date: T, calendar: Calendar): T {\n  if (date.calendar.identifier === calendar.identifier) {\n    return date;\n  }\n\n  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  let copy: Mutable<T> = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  return copy;\n}\n\nexport function toZoned(date: CalendarDate | CalendarDateTime | ZonedDateTime, timeZone: string, disambiguation?: Disambiguation) {\n  if (date instanceof ZonedDateTime) {\n    if (date.timeZone === timeZone) {\n      return date;\n    }\n\n    return toTimeZone(date, timeZone);\n  }\n\n  let ms = toAbsolute(date, timeZone, disambiguation);\n  return fromAbsolute(ms, timeZone);\n}\n\nexport function zonedToDate(date: ZonedDateTime) {\n  let ms = epochFromDate(date) - date.offset;\n  return new Date(ms);\n}\n\nexport function toTimeZone(date: ZonedDateTime, timeZone: string): ZonedDateTime {\n  let ms = epochFromDate(date) - date.offset;\n  return toCalendar(fromAbsolute(ms, timeZone), date.calendar);\n}\n\nexport function toLocalTimeZone(date: ZonedDateTime) {\n  return toTimeZone(date, getLocalTimeZone());\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime, CycleOptions, CycleTimeOptions, DateField, DateFields, Disambiguation, Duration, TimeField, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, toAbsolute, toCalendar, toCalendarDateTime} from './conversion';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst ONE_HOUR = 3600000;\n\nexport function add(date: CalendarDateTime, duration: Duration): CalendarDateTime;\nexport function add(date: CalendarDate, duration: Duration): CalendarDate;\nexport function add(date: CalendarDate | CalendarDateTime, duration: Duration): CalendarDate | CalendarDateTime;\nexport function add(date: CalendarDate | CalendarDateTime, duration: Duration) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n  let days = 'hour' in date ? addTimeFields(date, duration) : 0;\n\n  addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) {\n    mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  }\n\n  mutableDate.month += duration.months || 0;\n\n  balanceYearMonth(mutableDate);\n  constrainMonthDay(mutableDate);\n\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n\n  balanceDay(mutableDate);\n\n  if (mutableDate.calendar.balanceDate) {\n    mutableDate.calendar.balanceDate(mutableDate);\n  }\n\n  return mutableDate;\n}\n\nfunction addYears(date: Mutable<AnyCalendarDate>, years: number) {\n  if (date.calendar.getYearsToAdd) {\n    years = date.calendar.getYearsToAdd(date, years);\n  }\n\n  date.year += years;\n}\n\nfunction balanceYearMonth(date: Mutable<AnyCalendarDate>) {\n  while (date.month < 1) {\n    addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  let monthsInYear = 0;\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    addYears(date, 1);\n  }\n}\n\nfunction balanceDay(date: Mutable<AnyCalendarDate>) {\n  while (date.day < 1) {\n    date.month--;\n    balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    balanceYearMonth(date);\n  }\n}\n\nfunction constrainMonthDay(date: Mutable<AnyCalendarDate>) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nexport function constrain(date: Mutable<AnyCalendarDate>) {\n  if (date.calendar.constrainDate) {\n    date.calendar.constrainDate(date);\n  }\n\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  constrainMonthDay(date);\n}\n\nexport function invertDuration(duration: Duration): Duration {\n  let inverseDuration = {};\n  for (let key in duration) {\n    if (typeof duration[key] === 'number') {\n      inverseDuration[key] = -duration[key];\n    }\n  }\n\n  return inverseDuration;\n}\n\nexport function subtract(date: CalendarDateTime, duration: Duration): CalendarDateTime;\nexport function subtract(date: CalendarDate, duration: Duration): CalendarDate;\nexport function subtract(date: CalendarDate | CalendarDateTime, duration: Duration): CalendarDate | CalendarDateTime {\n  return add(date, invertDuration(duration));\n}\n\nexport function set(date: CalendarDateTime, fields: DateFields): CalendarDateTime;\nexport function set(date: CalendarDate, fields: DateFields): CalendarDate;\nexport function set(date: CalendarDate | CalendarDateTime, fields: DateFields) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n\n  if (fields.era != null) {\n    mutableDate.era = fields.era;\n  }\n\n  if (fields.year != null) {\n    mutableDate.year = fields.year;\n  }\n\n  if (fields.month != null) {\n    mutableDate.month = fields.month;\n  }\n\n  if (fields.day != null) {\n    mutableDate.day = fields.day;\n  }\n\n  constrain(mutableDate);\n  return mutableDate;\n}\n\nexport function setTime(value: CalendarDateTime, fields: TimeFields): CalendarDateTime;\nexport function setTime(value: Time, fields: TimeFields): Time;\nexport function setTime(value: Time | CalendarDateTime, fields: TimeFields) {\n  let mutableValue: Mutable<Time | CalendarDateTime> = value.copy();\n\n  if (fields.hour != null) {\n    mutableValue.hour = fields.hour;\n  }\n\n  if (fields.minute != null) {\n    mutableValue.minute = fields.minute;\n  }\n\n  if (fields.second != null) {\n    mutableValue.second = fields.second;\n  }\n\n  if (fields.millisecond != null) {\n    mutableValue.millisecond = fields.millisecond;\n  }\n\n  constrainTime(mutableValue);\n  return mutableValue;\n}\n\nfunction balanceTime(time: Mutable<AnyTime>): number {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = nonNegativeMod(time.millisecond, 1000);\n\n  time.minute += Math.floor(time.second / 60);\n  time.second = nonNegativeMod(time.second, 60);\n\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = nonNegativeMod(time.minute, 60);\n\n  let days = Math.floor(time.hour / 24);\n  time.hour = nonNegativeMod(time.hour, 24);\n\n  return days;\n}\n\nexport function constrainTime(time: Mutable<AnyTime>) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction nonNegativeMod(a: number, b: number) {\n  let result = a % b;\n  if (result < 0) {\n    result += b;\n  }\n  return result;\n}\n\nfunction addTimeFields(time: Mutable<AnyTime>, duration: Duration): number {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return balanceTime(time);\n}\n\nexport function addTime(time: Time, duration: Duration): Time {\n  let res = time.copy();\n  addTimeFields(res, duration);\n  return res;\n}\n\nexport function subtractTime(time: Time, duration: Duration): Time {\n  return addTime(time, invertDuration(duration));\n}\n\nexport function cycleDate(value: CalendarDateTime, field: DateField, amount: number, options?: CycleOptions): CalendarDateTime;\nexport function cycleDate(value: CalendarDate, field: DateField, amount: number, options?: CycleOptions): CalendarDate;\nexport function cycleDate(value: CalendarDate | CalendarDateTime, field: DateField, amount: number, options?: CycleOptions) {\n  let mutable: Mutable<CalendarDate | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'era': {\n      let eras = value.calendar.getEras();\n      let eraIndex = eras.indexOf(value.era);\n      if (eraIndex < 0) {\n        throw new Error('Invalid era: ' + value.era);\n      }\n      eraIndex = cycleValue(eraIndex, amount, 0, eras.length - 1, options?.round);\n      mutable.era = eras[eraIndex];\n\n      // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n      constrain(mutable);\n      break;\n    }\n    case 'year': {\n      if (mutable.calendar.getYearsToAdd) {\n        amount = mutable.calendar.getYearsToAdd(mutable, amount);\n      }\n\n      // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n      mutable.year = cycleValue(value.year, amount, -Infinity, 9999, options?.round);\n      if (mutable.year === -Infinity) {\n        mutable.year = 1;\n      }\n\n      if (mutable.calendar.balanceYearMonth) {\n        mutable.calendar.balanceYearMonth(mutable, value);\n      }\n      break;\n    }\n    case 'month':\n      mutable.month = cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options?.round);\n      break;\n    case 'day':\n      mutable.day = cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) {\n    value.calendar.balanceDate(mutable);\n  }\n\n  constrain(mutable);\n  return mutable;\n}\n\nexport function cycleTime(value: CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime;\nexport function cycleTime(value: Time, field: TimeField, amount: number, options?: CycleTimeOptions): Time;\nexport function cycleTime(value: Time | CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions) {\n  let mutable: Mutable<Time | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'hour': {\n      let hours = value.hour;\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = hours >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n      mutable.hour = cycleValue(hours, amount, min, max, options?.round);\n      break;\n    }\n    case 'minute':\n      mutable.minute = cycleValue(value.minute, amount, 0, 59, options?.round);\n      break;\n    case 'second':\n      mutable.second = cycleValue(value.second, amount, 0, 59, options?.round);\n      break;\n    case 'millisecond':\n      mutable.millisecond = cycleValue(value.millisecond, amount, 0, 999, options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction cycleValue(value: number, amount: number, min: number, max: number, round = false) {\n  if (round) {\n    value += Math.sign(amount);\n\n    if (value < min) {\n      value = max;\n    }\n\n    let div = Math.abs(amount);\n    if (amount > 0) {\n      value = Math.ceil(value / div) * div;\n    } else {\n      value = Math.floor(value / div) * div;\n    }\n\n    if (value > max) {\n      value = min;\n    }\n  } else {\n    value += amount;\n    if (value < min) {\n      value = max - (min - value - 1);\n    } else if (value > max) {\n      value = min + (value - max - 1);\n    }\n  }\n\n  return value;\n}\n\nexport function addZoned(dateTime: ZonedDateTime, duration: Duration): ZonedDateTime {\n  let ms: number;\n  if ((duration.years != null && duration.years !== 0) || (duration.months != null && duration.months !== 0) || (duration.days != null && duration.days !== 0)) {\n    let res = add(toCalendarDateTime(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      days: duration.days\n    });\n\n    // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n    ms = toAbsolute(res, dateTime.timeZone);\n  } else {\n    // Otherwise, preserve the offset of the original date.\n    ms = epochFromDate(dateTime) - dateTime.offset;\n  }\n\n  // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60 * 1000;\n  ms += (duration.hours || 0) * 60 * 60 * 1000;\n\n  let res = fromAbsolute(ms, dateTime.timeZone);\n  return toCalendar(res, dateTime.calendar);\n}\n\nexport function subtractZoned(dateTime: ZonedDateTime, duration: Duration): ZonedDateTime {\n  return addZoned(dateTime, invertDuration(duration));\n}\n\nexport function cycleZoned(dateTime: ZonedDateTime, field: DateField | TimeField, amount: number, options?: CycleTimeOptions): ZonedDateTime {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour': {\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = dateTime.hour >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n\n      // The minimum and maximum hour may be affected by daylight saving time.\n      // For example, it might jump forward at midnight, and skip 1am.\n      // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n      // the possible absolute times for the min and max, and find the maximum range\n      // that is within the current day.\n      let plainDateTime = toCalendarDateTime(dateTime);\n      let minDate = toCalendar(setTime(plainDateTime, {hour: min}), new GregorianCalendar());\n      let minAbsolute = [toAbsolute(minDate, dateTime.timeZone, 'earlier'), toAbsolute(minDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === minDate.day)[0];\n\n      let maxDate = toCalendar(setTime(plainDateTime, {hour: max}), new GregorianCalendar());\n      let maxAbsolute = [toAbsolute(maxDate, dateTime.timeZone, 'earlier'), toAbsolute(maxDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === maxDate.day).pop();\n\n      // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n      // This is done in hours from the Unix epoch so that cycleValue works correctly,\n      // and then converted back to milliseconds.\n      let ms = epochFromDate(dateTime) - dateTime.offset;\n      let hours = Math.floor(ms / ONE_HOUR);\n      let remainder = ms % ONE_HOUR;\n      ms = cycleValue(\n        hours,\n        amount,\n        Math.floor(minAbsolute / ONE_HOUR),\n        Math.floor(maxAbsolute / ONE_HOUR),\n        options?.round\n      ) * ONE_HOUR + remainder;\n\n      // Now compute the new timezone offset, and convert the absolute time back to local time.\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return cycleTime(dateTime, field, amount, options);\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day': {\n      let res = cycleDate(toCalendarDateTime(dateTime), field, amount, options);\n      let ms = toAbsolute(res, dateTime.timeZone);\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nexport function setZoned(dateTime: ZonedDateTime, fields: DateFields & TimeFields, disambiguation?: Disambiguation): ZonedDateTime {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = toCalendarDateTime(dateTime);\n  let res = setTime(set(plainDateTime, fields), fields);\n\n  // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n  if (res.compare(plainDateTime) === 0) {\n    return dateTime;\n  }\n\n  let ms = toAbsolute(res, dateTime.timeZone, disambiguation);\n  return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyDateTime, Disambiguation} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, possibleAbsolutes, toAbsolute, toCalendar, toCalendarDateTime, toTimeZone} from './conversion';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst DATE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nconst DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst ZONED_DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::(\\d{2}))?)?\\[(.*?)\\]$/;\nconst ABSOLUTE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::(\\d{2}))?)|Z)$/;\n\nexport function parseTime(value: string): Time {\n  let m = value.match(TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 time string: ' + value);\n  }\n\n  return new Time(\n    parseNumber(m[1], 0, 23),\n    m[2] ? parseNumber(m[2], 0, 59) : 0,\n    m[3] ? parseNumber(m[3], 0, 59) : 0,\n    m[4] ? parseNumber(m[4], 0, Infinity) * 1000 : 0\n  );\n}\n\nexport function parseDate(value: string): CalendarDate {\n  let m = value.match(DATE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date string: ' + value);\n  }\n\n  let date: Mutable<CalendarDate> = new CalendarDate(\n    parseNumber(m[1], 0, 9999),\n    parseNumber(m[2], 1, 12),\n    1\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDate;\n}\n\nexport function parseDateTime(value: string): CalendarDateTime {\n  let m = value.match(DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<CalendarDateTime> = new CalendarDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDateTime;\n}\n\nexport function parseZonedDateTime(value: string, disambiguation?: Disambiguation): ZonedDateTime {\n  let m = value.match(ZONED_DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[10],\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  let plainDateTime = toCalendarDateTime(date as ZonedDateTime);\n\n  let ms: number;\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n    ms = epochFromDate(date as ZonedDateTime) - date.offset;\n\n    // Validate offset against parsed date.\n    let absolutes = possibleAbsolutes(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) {\n      throw new Error(`Offset ${offsetToString(date.offset)} is invalid for ${dateTimeToString(date)} in ${date.timeZone}`);\n    }\n  } else {\n    // Convert to absolute and back to fix invalid times due to DST.\n    ms = toAbsolute(toCalendarDateTime(plainDateTime), date.timeZone, disambiguation);\n  }\n\n  return fromAbsolute(ms, date.timeZone);\n}\n\nexport function parseAbsolute(value: string, timeZone: string): ZonedDateTime {\n  let m = value.match(ABSOLUTE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    timeZone,\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n  }\n\n  return toTimeZone(date as ZonedDateTime, timeZone);\n}\n\nexport function parseAbsoluteToLocal(value: string): ZonedDateTime {\n  return parseAbsolute(value, getLocalTimeZone());\n}\n\nfunction parseNumber(value: string, min: number, max: number) {\n  let val = Number(value);\n  if (val < min || val > max) {\n    throw new RangeError(`Value out of range: ${min} <= ${val} <= ${max}`);\n  }\n\n  return val;\n}\n\nexport function timeToString(time: Time): string {\n  return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}${time.millisecond ? String(time.millisecond / 1000).slice(1) : ''}`;\n}\n\nexport function dateToString(date: CalendarDate): string {\n  let gregorianDate = toCalendar(date, new GregorianCalendar());\n  return `${String(gregorianDate.year).padStart(4, '0')}-${String(gregorianDate.month).padStart(2, '0')}-${String(gregorianDate.day).padStart(2, '0')}`;\n}\n\nexport function dateTimeToString(date: AnyDateTime): string {\n  // @ts-ignore\n  return `${dateToString(date)}T${timeToString(date)}`;\n}\n\nfunction offsetToString(offset: number) {\n  let sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  let offsetHours = Math.floor(offset / (60 * 60 * 1000));\n  let offsetMinutes = (offset % (60 * 60 * 1000)) / (60 * 1000);\n  return `${sign}${String(offsetHours).padStart(2, '0')}:${String(offsetMinutes).padStart(2, '0')}`;\n}\n\nexport function zonedDateTimeToString(date: ZonedDateTime): string {\n  return `${dateTimeToString(date)}${offsetToString(date.offset)}[${date.timeZone}]`;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {add, addTime, addZoned, constrain, constrainTime, cycleDate, cycleTime, cycleZoned, set, setTime, setZoned, subtract, subtractTime, subtractZoned} from './manipulation';\nimport {AnyCalendarDate, AnyTime, Calendar, CycleOptions, CycleTimeOptions, DateField, DateFields, Disambiguation, Duration, TimeField, TimeFields} from './types';\nimport {compareDate, compareTime} from './queries';\nimport {dateTimeToString, dateToString, timeToString, zonedDateTimeToString} from './string';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {toCalendarDateTime, toDate, toZoned, zonedToDate} from './conversion';\n\nfunction shiftArgs(args: any[]) {\n  let calendar: Calendar = typeof args[0] === 'object'\n    ? args.shift()\n    : new GregorianCalendar();\n\n  let era: string;\n  if (typeof args[0] === 'string') {\n    era = args.shift();\n  } else {\n    let eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n\n  let year = args.shift();\n  let month = args.shift();\n  let day = args.shift();\n\n  return [calendar, era, year, month, day];\n}\n\nexport class CalendarDate {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n  // If that behavior is desired, use the AnyCalendarDate interface instead.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n\n  constructor(year: number, month: number, day: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n\n    constrain(this);\n  }\n\n  copy(): CalendarDate {\n    if (this.era) {\n      return new CalendarDate(this.calendar, this.era, this.year, this.month, this.day);\n    } else {\n      return new CalendarDate(this.calendar, this.year, this.month, this.day);\n    }\n  }\n\n  add(duration: Duration) {\n    return add(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtract(this, duration);\n  }\n\n  set(fields: DateFields) {\n    return set(this, fields);\n  }\n\n  cycle(field: DateField, amount: number, options?: CycleOptions) {\n    return cycleDate(this, field, amount, options);\n  }\n\n  toDate(timeZone: string) {\n    return toDate(this, timeZone);\n  }\n\n  toString() {\n    return dateToString(this);\n  }\n\n  compare(b: AnyCalendarDate) {\n    return compareDate(this, b);\n  }\n}\n\nexport class Time {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n\n  constructor(\n    public readonly hour: number = 0,\n    public readonly minute: number = 0,\n    public readonly second: number = 0,\n    public readonly millisecond: number = 0\n  ) {\n    constrainTime(this);\n  }\n\n  copy(): Time {\n    return new Time(this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  add(duration: Duration) {\n    return addTime(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtractTime(this, duration);\n  }\n\n  set(fields: TimeFields) {\n    return setTime(this, fields);\n  }\n\n  cycle(field: TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleTime(this, field, amount, options);\n  }\n\n  toString() {\n    return timeToString(this);\n  }\n\n  compare(b: AnyTime) {\n    return compareTime(this, b);\n  }\n}\n\nexport class CalendarDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n  public readonly hour: number;\n  public readonly minute: number;\n  public readonly second: number;\n  public readonly millisecond: number;\n\n  constructor(year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  copy(): CalendarDateTime {\n    if (this.era) {\n      return new CalendarDateTime(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new CalendarDateTime(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  add(duration: Duration) {\n    return add(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtract(this, duration);\n  }\n\n  set(fields: DateFields & TimeFields) {\n    return set(setTime(this, fields), fields);\n  }\n\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions) {\n    switch (field) {\n      case 'era':\n      case 'year':\n      case 'month':\n      case 'day':\n        return cycleDate(this, field, amount, options);\n      default:\n        return cycleTime(this, field, amount, options);\n    }\n  }\n\n  toDate(timeZone: string) {\n    return toDate(this, timeZone);\n  }\n\n  toString() {\n    return dateTimeToString(this);\n  }\n\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime) {\n    let res = compareDate(this, b);\n    if (res === 0) {\n      return compareTime(this, toCalendarDateTime(b));\n    }\n\n    return res;\n  }\n}\n\nexport class ZonedDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  public readonly calendar: Calendar;\n  public readonly era: string;\n  public readonly year: number;\n  public readonly month: number;\n  public readonly day: number;\n  public readonly hour: number;\n  public readonly minute: number;\n  public readonly second: number;\n  public readonly millisecond: number;\n  public readonly timeZone: string;\n  public readonly offset: number;\n\n  constructor(year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    let timeZone = args.shift();\n    let offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  copy(): ZonedDateTime {\n    if (this.era) {\n      return new ZonedDateTime(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new ZonedDateTime(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  add(duration: Duration) {\n    return addZoned(this, duration);\n  }\n\n  subtract(duration: Duration) {\n    return subtractZoned(this, duration);\n  }\n\n  set(fields: DateFields & TimeFields, disambiguation?: Disambiguation) {\n    return setZoned(this, fields, disambiguation);\n  }\n\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleZoned(this, field, amount, options);\n  }\n\n  toDate() {\n    return zonedToDate(this);\n  }\n\n  toString() {\n    return zonedDateTimeToString(this);\n  }\n\n  toAbsoluteString() {\n    return this.toDate().toISOString();\n  }\n\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime) {\n    // TODO: Is this a bad idea??\n    return this.toDate().getTime() - toZoned(b, this.timeZone).toDate().getTime();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nconst ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nconst ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nconst ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction findEraFromGregorianDate(date: AnyCalendarDate) {\n  const idx = ERA_START_DATES.findIndex(([year, month, day]) => {\n    if (date.year < year) {\n      return true;\n    }\n\n    if (date.year === year && date.month < month) {\n      return true;\n    }\n\n    if (date.year === year && date.month === month && date.day < day) {\n      return true;\n    }\n\n    return false;\n  });\n\n  if (idx === -1) {\n    return ERA_START_DATES.length - 1;\n  }\n\n  if (idx === 0) {\n    return 0;\n  }\n\n  return idx - 1;\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let eraAddend = ERA_ADDENDS[ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) {\n    throw new Error('Unknown era: ' + date.era);\n  }\n\n  return new CalendarDate(\n    date.year + eraAddend,\n    date.month,\n    date.day\n  );\n}\n\nexport class JapaneseCalendar extends GregorianCalendar {\n  identifier = 'japanese';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n\n    let era = findEraFromGregorianDate(date);\n    date.era = ERA_NAMES[era];\n    date.year -= ERA_ADDENDS[era];\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    let gregorianDate = toGregorian(date);\n    let era = findEraFromGregorianDate(gregorianDate);\n\n    if (ERA_NAMES[era] !== date.era) {\n      date.era = ERA_NAMES[era];\n      date.year = gregorianDate.year - ERA_ADDENDS[era];\n    }\n  }\n\n  constrainDate(date: Mutable<AnyCalendarDate>) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    let end = ERA_END_DATES[idx];\n    if (end != null) {\n      let [endYear, endMonth, endDay] = end;\n\n      // Constrain the year to the maximum possible value in the era.\n      // Then constrain the month and day fields within that.\n      let maxYear = endYear - ERA_ADDENDS[idx];\n      date.year = Math.min(maxYear, date.year);\n      if (date.year === maxYear) {\n        date.month = Math.min(endMonth, date.month);\n\n        if (date.month === endMonth) {\n          date.day = Math.min(endDay, date.day);\n        }\n      }\n\n      if (date.year === 1) {\n        let [, startMonth, startDay] = ERA_START_DATES[idx];\n        date.month = Math.max(startMonth, date.month);\n\n        if (date.month === startMonth) {\n          date.day = Math.max(startDay, date.day);\n        }\n      }\n    }\n  }\n\n  getEras() {\n    return ERA_NAMES;\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // Get the number of years in the era, taking into account the date's month and day fields.\n    let era = ERA_NAMES.indexOf(date.era);\n    let next = ERA_START_DATES[era + 1];\n    if (next == null) {\n      return 9999;\n    }\n\n    let cur = ERA_START_DATES[era];\n    let years = next[0] - cur[0];\n\n    if (date.month < next[1] || (date.month === next[1] && date.day < next[2])) {\n      years++;\n    }\n\n    return years;\n  }\n\n  getMinimumMonthInYear(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start ? start[1] : 1;\n  }\n\n  getMinimumDayInMonth(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start && date.month === start[1] ? start[2] : 1;\n  }\n}\n\nfunction getMinimums(date: AnyCalendarDate) {\n  if (date.year === 1) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    return ERA_START_DATES[idx];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst BUDDHIST_ERA_START = -543;\n\nexport class BuddhistCalendar extends GregorianCalendar {\n  identifier = 'buddhist';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n    date.year -= BUDDHIST_ERA_START;\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(\n      new CalendarDate(\n        date.year + BUDDHIST_ERA_START,\n        date.month,\n        date.day\n      )\n    );\n  }\n\n  getEras() {\n    return ['BE'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst TAIWAN_ERA_START = 1911;\n\nfunction gregorianYear(date: AnyCalendarDate) {\n  return date.era === 'minguo'\n    ? date.year + TAIWAN_ERA_START\n    : 1 - date.year + TAIWAN_ERA_START;\n}\n\nfunction gregorianToTaiwan(year: number, date: Mutable<AnyCalendarDate>) {\n  let y = year - TAIWAN_ERA_START;\n  if (y > 0) {\n    date.era = 'minguo';\n    date.year = y;\n  } else {\n    date.era = 'before_minguo';\n    date.year = 1 - y;\n  }\n}\n\nexport class TaiwanCalendar extends GregorianCalendar {\n  identifier = 'roc'; // Republic of China\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date: Mutable<CalendarDate> = super.fromJulianDay(jd);\n    gregorianToTaiwan(date.year, date);\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(\n      new CalendarDate(\n        gregorianYear(date),\n        date.month,\n        date.day\n      )\n    );\n  }\n\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    gregorianToTaiwan(gregorianYear(date), date);\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'before_minguo' ? -years : years;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod} from '../utils';\n\nconst PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.\n\nfunction isLeapYear(year: number): boolean {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n\n  return mod((y1 + 38) * 31, 128) < 31;\n}\n\nfunction persianToJulianDay(year: number, month: number, day: number): number {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;\n\n  return (\n    PERSIAN_EPOCH -\n    1 +\n    1029983 * Math.floor(y0 / 2820) +\n    365 * (y1 - 1) +\n    Math.floor((31 * y1 - 5) / 128) +\n    offset +\n    day\n  );\n}\n\nexport class PersianCalendar implements Calendar {\n  identifier = 'persian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d0 = jd - persianToJulianDay(475, 1, 1);\n    let n2820 = Math.floor(d0 / 1029983);\n    let d1 = mod(d0, 1029983);\n    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);\n    let year = 474 + 2820 * n2820 + y2820;\n    if (year <= 0) {\n      year--;\n    }\n\n    let yDay = jd - persianToJulianDay(year, 1, 1) + 1;\n    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);\n    let day = jd - persianToJulianDay(year, month, 1) + 1;\n\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return persianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month <= 6) {\n      return 31;\n    }\n\n    if (date.month <= 11) {\n      return 30;\n    }\n\n    return isLeapYear(date.year) ? 30 : 29;\n  }\n\n  getEras() {\n    return ['AP'];\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar, gregorianToJulianDay, isLeapYear} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\n// Starts in 78 AD,\nconst INDIAN_ERA_START = 78;\n\n// The Indian year starts 80 days later than the Gregorian year.\nconst INDIAN_YEAR_START = 80;\n\nexport class IndianCalendar extends GregorianCalendar {\n  identifier = 'indian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    // Gregorian date for Julian day\n    let date = super.fromJulianDay(jd) as Mutable<CalendarDate>;\n\n    // Year in Saka era\n    let indianYear = date.year - INDIAN_ERA_START;\n\n    // Day number in Gregorian year (starting from 0)\n    let yDay = jd - gregorianToJulianDay(date.year, 1, 1);\n\n    let leapMonth: number;\n    if (yDay < INDIAN_YEAR_START) {\n      //  Day is at the end of the preceding Saka year\n      indianYear--;\n\n      // Days in leapMonth this year, previous Gregorian year\n      leapMonth = isLeapYear(date.year - 1) ? 31 : 30;\n      yDay += leapMonth + (31 * 5) + (30 * 3) + 10;\n    } else {\n      // Days in leapMonth this year\n      leapMonth = isLeapYear(date.year) ? 31 : 30;\n      yDay -= INDIAN_YEAR_START;\n    }\n\n    let indianMonth: number;\n    let indianDay: number;\n    if (yDay < leapMonth) {\n      indianMonth = 1;\n      indianDay = yDay + 1;\n    } else {\n      let mDay = yDay - leapMonth;\n      if (mDay < (31 * 5)) {\n        indianMonth = Math.floor(mDay / 31) + 2;\n        indianDay = (mDay % 31) + 1;\n      } else {\n        mDay -= 31 * 5;\n        indianMonth = Math.floor(mDay / 30) + 7;\n        indianDay = (mDay % 30) + 1;\n      }\n    }\n\n    return new CalendarDate(this, indianYear, indianMonth, indianDay);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year + INDIAN_ERA_START;\n\n    let leapMonth: number;\n    let jd: number;\n    if (isLeapYear(year)) {\n      leapMonth = 31;\n      jd = gregorianToJulianDay(year, 3, 21);\n    } else {\n      leapMonth = 30;\n      jd = gregorianToJulianDay(year, 3, 22);\n    }\n\n    if (date.month === 1) {\n      return jd + date.day - 1;\n    }\n\n    jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n\n    if (date.month >= 8) {\n      jd += (date.month - 7) * 30;\n    }\n\n    jd += date.day - 1;\n    return jd;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month === 1 && isLeapYear(date.year + INDIAN_ERA_START)) {\n      return 31;\n    }\n\n    if (date.month >= 2 && date.month <= 6) {\n      return 31;\n    }\n\n    return 30;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['saka'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\n\nconst CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\nconst ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\nconst UMALQURA_YEAR_START = 1300;\nconst UMALQURA_YEAR_END = 1600;\nconst UMALQURA_START_DAYS = 460322;\n\nfunction islamicToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return day +\n    Math.ceil(29.5 * (month - 1)) +\n    (year - 1) * 354 +\n    Math.floor((3 + 11 * year) / 30) +\n    epoch - 1;\n}\n\nfunction julianDayToIslamic(calendar: Calendar, epoch: number, jd: number) {\n  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  let month = Math.min(12, Math.ceil((jd - (29 + islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  let day = jd - islamicToJulianDay(epoch, year, month, 1) + 1;\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction isLeapYear(year: number): boolean {\n  return (14 + 11 * year) % 30 < 11;\n}\n\nexport class IslamicCivilCalendar implements Calendar {\n  identifier = 'islamic-civil';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, CIVIL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(CIVIL_EPOC, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let length = 29 + date.month % 2;\n    if (date.month === 12 && isLeapYear(date.year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 355 : 354;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AH'];\n  }\n}\n\nexport class IslamicTabularCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-tbla';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, ASTRONOMICAL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n  }\n}\n\n// Generated by scripts/generate-umalqura.js\nconst UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nlet UMALQURA_MONTHLENGTH: Uint16Array;\nlet UMALQURA_YEAR_START_TABLE: Uint32Array;\n\nfunction umalquraYearStart(year: number): number {\n  return UMALQURA_START_DAYS + UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nfunction umalquraMonthLength(year: number, month: number): number {\n  let idx = (year - UMALQURA_YEAR_START);\n  let mask = (0x01 << (11 - (month - 1)));\n  if ((UMALQURA_MONTHLENGTH[idx] & mask) === 0) {\n    return 29;\n  } else {\n    return 30;\n  }\n}\n\nfunction umalquraMonthStart(year: number, month: number): number {\n  let day = umalquraYearStart(year);\n  for (let i = 1; i < month; i++) {\n    day += umalquraMonthLength(year, i);\n  }\n  return day;\n}\n\nfunction umalquraYearLength(year: number): number {\n  return UMALQURA_YEAR_START_TABLE[year + 1 - UMALQURA_YEAR_START] - UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nexport class IslamicUmalquraCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-umalqura';\n\n  constructor() {\n    super();\n    if (!UMALQURA_MONTHLENGTH) {\n      UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob(UMALQURA_DATA), c => c.charCodeAt(0)).buffer);\n    }\n\n    if (!UMALQURA_YEAR_START_TABLE) {\n      UMALQURA_YEAR_START_TABLE = new Uint32Array(UMALQURA_YEAR_END - UMALQURA_YEAR_START + 1);\n\n      let yearStart = 0;\n      for (let year = UMALQURA_YEAR_START; year <= UMALQURA_YEAR_END; year++) {\n        UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START] = yearStart;\n        for (let i = 1; i <= 12; i++) {\n          yearStart += umalquraMonthLength(year, i);\n        }\n      }\n    }\n  }\n\n  fromJulianDay(jd: number): CalendarDate {\n    let days = jd - CIVIL_EPOC;\n    let startDays = umalquraYearStart(UMALQURA_YEAR_START);\n    let endDays = umalquraYearStart(UMALQURA_YEAR_END);\n    if (days < startDays || days > endDays) {\n      return super.fromJulianDay(jd);\n    } else {\n      let y = UMALQURA_YEAR_START - 1;\n      let m = 1;\n      let d = 1;\n      while (d > 0) {\n        y++;\n        d = days - umalquraYearStart(y) + 1;\n        let yearLength = umalquraYearLength(y);\n        if (d === yearLength) {\n          m = 12;\n          break;\n        } else if (d < yearLength) {\n          let monthLength = umalquraMonthLength(y, m);\n          m = 1;\n          while (d > monthLength) {\n            d -= monthLength;\n            m++;\n            monthLength = umalquraMonthLength(y, m);\n          }\n          break;\n        }\n      }\n\n      return new CalendarDate(this, y, m, (days - umalquraMonthStart(y, m) + 1));\n    }\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.toJulianDay(date);\n    }\n\n    return CIVIL_EPOC + umalquraMonthStart(date.year, date.month) + (date.day - 1);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInMonth(date);\n    }\n\n    return umalquraMonthLength(date.year, date.month);\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInYear(date);\n    }\n\n    return umalquraYearLength(date.year);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst HEBREW_EPOCH = 347997;\n\n// Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\nconst HOUR_PARTS = 1080;\nconst DAY_PARTS  = 24 * HOUR_PARTS;\n\n// An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\nconst MONTH_DAYS = 29;\nconst MONTH_FRACT = 12 * HOUR_PARTS + 793;\nconst MONTH_PARTS = MONTH_DAYS * DAY_PARTS + MONTH_FRACT;\n\nfunction isLeapYear(year: number) {\n  return mod(year * 7 + 1, 19) < 7;\n}\n\n// Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\nfunction hebrewDelay1(year: number) {\n  let months = Math.floor((235 * year - 234) / 19);\n  let parts = 12084 + 13753 * months;\n  let day = months * 29 + Math.floor(parts / 25920);\n\n  if (mod(3 * (day + 1), 7) < 3) {\n    day += 1;\n  }\n\n  return day;\n}\n\n// Check for delay in start of new year due to length of adjacent years\nfunction hebrewDelay2(year: number) {\n  let last = hebrewDelay1(year - 1);\n  let present = hebrewDelay1(year);\n  let next = hebrewDelay1(year + 1);\n\n  if (next - present === 356) {\n    return 2;\n  }\n\n  if (present - last === 382) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction startOfYear(year: number) {\n  return hebrewDelay1(year) + hebrewDelay2(year);\n}\n\nfunction getDaysInYear(year: number) {\n  return startOfYear(year + 1) - startOfYear(year);\n}\n\nfunction getYearType(year: number) {\n  let yearLength = getDaysInYear(year);\n\n  if (yearLength > 380) {\n    yearLength -= 30; // Subtract length of leap month.\n  }\n\n  switch (yearLength) {\n    case 353:\n      return 0; // deficient\n    case 354:\n      return 1; // normal\n    case 355:\n      return 2; // complete\n  }\n}\n\nfunction getDaysInMonth(year: number, month: number): number {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !isLeapYear(year)) {\n    month++;\n  }\n\n  // First of all, dispose of fixed-length 29 day months\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) {\n    return 29;\n  }\n\n  let yearType = getYearType(year);\n\n  // If it's Heshvan, days depend on length of year\n  if (month === 2) {\n    return yearType === 2 ? 30 : 29;\n  }\n\n  // Similarly, Kislev varies with the length of year\n  if (month === 3) {\n    return yearType === 0 ? 29 : 30;\n  }\n\n  // Adar I only exists in leap years\n  if (month === 6) {\n    return isLeapYear(year) ? 30 : 0;\n  }\n\n  return 30;\n}\n\nexport class HebrewCalendar implements Calendar {\n  identifier = 'hebrew';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d = jd - HEBREW_EPOCH;\n    let m = (d * DAY_PARTS) / MONTH_PARTS;           // Months (approx)\n    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n    let ys = startOfYear(year);                      // 1st day of year\n    let dayOfYear = Math.floor(d - ys);\n\n    // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n    while (dayOfYear < 1) {\n      year--;\n      ys = startOfYear(year);\n      dayOfYear = Math.floor(d - ys);\n    }\n\n    // Now figure out which month we're in, and the date within that month\n    let month = 1;\n    let monthStart = 0;\n    while (monthStart < dayOfYear) {\n      monthStart += getDaysInMonth(year, month);\n      month++;\n    }\n\n    month--;\n    monthStart -= getDaysInMonth(year, month);\n\n    let day = dayOfYear - monthStart;\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let jd = startOfYear(date.year);\n    for (let month = 1; month < date.month; month++) {\n      jd += getDaysInMonth(date.year, month);\n    }\n\n    return jd + date.day + HEBREW_EPOCH;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 13 : 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return getDaysInYear(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AM'];\n  }\n\n  balanceYearMonth(date: Mutable<AnyCalendarDate>, previousDate: AnyCalendarDate) {\n    // Keep date in the same month when switching between leap years and non leap years\n    if (previousDate.year !== date.year) {\n      if (isLeapYear(previousDate.year) && !isLeapYear(date.year) && previousDate.month > 6) {\n        date.month--;\n      } else if (!isLeapYear(previousDate.year) && isLeapYear(date.year) && previousDate.month > 6) {\n        date.month++;\n      }\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {Mutable} from '../utils';\n\nconst ETHIOPIC_EPOCH = 1723856;\nconst COPTIC_EPOCH = 1824665;\n\n// The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\nconst AMETE_MIHRET_DELTA = 5500;\n\nfunction ceToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return (\n    epoch                   // difference from Julian epoch to 1,1,1\n    + 365 * year            // number of days from years\n    + Math.floor(year / 4)  // extra day of leap year\n    + 30 * (month - 1)      // number of days from months (1 based)\n    + day - 1               // number of days for present month (1 based)\n  );\n}\n\nfunction julianDayToCE(calendar: Calendar, epoch: number, jd: number): Mutable<CalendarDate> {\n  let year = Math.floor((4 * (jd - epoch)) / 1461);\n  let month = 1 + Math.floor((jd - ceToJulianDay(epoch, year, 1, 1)) / 30);\n  let day = jd + 1 - ceToJulianDay(epoch, year, month, 1);\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction getLeapDay(year: number) {\n  return Math.floor((year % 4) / 3);\n}\n\nfunction getDaysInMonth(year: number, month: number) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) {\n    // not intercalary month\n    return 30;\n  } else {\n    // intercalary month 5 days + possible leap day\n    return getLeapDay(year) + 5;\n  }\n}\n\nexport class EthiopicCalendar implements Calendar {\n  identifier = 'ethiopic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    if (date.year > 0) {\n      date.era = 'AM';\n    } else {\n      date.era = 'AA';\n      date.year += AMETE_MIHRET_DELTA;\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return ceToJulianDay(ETHIOPIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getMonthsInYear(): number {\n    return 13;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return 365 + getLeapDay(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AA', 'AM'];\n  }\n}\n\nexport class EthiopicAmeteAlemCalendar extends EthiopicCalendar {\n  identifier = 'ethioaa'; // also known as 'ethiopic-amete-alem' in ICU\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    date.era = 'AA';\n    date.year += AMETE_MIHRET_DELTA;\n    return date as CalendarDate;\n  }\n\n  getEras() {\n    return ['AA'];\n  }\n}\n\nexport class CopticCalendar extends EthiopicCalendar {\n  identifier = 'coptic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, COPTIC_EPOCH, jd);\n    if (date.year <= 0) {\n      date.era = 'BCE';\n      date.year = 1 - date.year;\n    } else {\n      date.era = 'CE';\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return ceToJulianDay(COPTIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BCE' ? -years : years;\n  }\n\n  getEras() {\n    return ['BCE', 'CE'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BuddhistCalendar} from './calendars/BuddhistCalendar';\nimport {Calendar} from './types';\nimport {CopticCalendar, EthiopicAmeteAlemCalendar, EthiopicCalendar} from './calendars/EthiopicCalendar';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {HebrewCalendar} from './calendars/HebrewCalendar';\nimport {IndianCalendar} from './calendars/IndianCalendar';\nimport {IslamicCivilCalendar, IslamicTabularCalendar, IslamicUmalquraCalendar} from './calendars/IslamicCalendar';\nimport {JapaneseCalendar} from './calendars/JapaneseCalendar';\nimport {PersianCalendar} from './calendars/PersianCalendar';\nimport {TaiwanCalendar} from './calendars/TaiwanCalendar';\n\nexport function createCalendar(name: string): Calendar {\n  switch (name) {\n    case 'buddhist':\n      return new BuddhistCalendar();\n    case 'ethiopic':\n      return new EthiopicCalendar();\n    case 'ethioaa':\n      return new EthiopicAmeteAlemCalendar();\n    case 'coptic':\n      return new CopticCalendar();\n    case 'hebrew':\n      return new HebrewCalendar();\n    case 'indian':\n      return new IndianCalendar();\n    case 'islamic-civil':\n      return new IslamicCivilCalendar();\n    case 'islamic-tbla':\n      return new IslamicTabularCalendar();\n    case 'islamic-umalqura':\n      return new IslamicUmalquraCalendar();\n    case 'japanese':\n      return new JapaneseCalendar();\n    case 'persian':\n      return new PersianCalendar();\n    case 'roc':\n      return new TaiwanCalendar();\n    case 'gregory':\n    default:\n      return new GregorianCalendar();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet formatterCache = new Map<string, Intl.DateTimeFormat>();\n\ninterface ResolvedDateTimeFormatOptions extends Intl.ResolvedDateTimeFormatOptions {\n  hourCycle?: Intl.DateTimeFormatOptions['hourCycle']\n}\n\ninterface DateRangeFormatPart extends Intl.DateTimeFormatPart {\n  source: 'startRange' | 'endRange' | 'shared'\n}\n\nexport class DateFormatter implements Intl.DateTimeFormat {\n  private formatter: Intl.DateTimeFormat;\n  private options: Intl.DateTimeFormatOptions;\n  private resolvedHourCycle: Intl.DateTimeFormatOptions['hourCycle'];\n\n  constructor(locale: string, options: Intl.DateTimeFormatOptions = {}) {\n    this.formatter = getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n  format(value: Date): string {\n    return this.formatter.format(value);\n  }\n\n  formatToParts(value: Date): Intl.DateTimeFormatPart[] {\n    return this.formatter.formatToParts(value);\n  }\n\n  formatRange(start: Date, end: Date): string {\n    // @ts-ignore\n    if (typeof this.formatter.formatRange === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRange(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    // Very basic fallback for old browsers.\n    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;\n  }\n\n  formatRangeToParts(start: Date, end: Date): DateRangeFormatPart[] {\n    // @ts-ignore\n    if (typeof this.formatter.formatRangeToParts === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRangeToParts(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    let startParts = this.formatter.formatToParts(start);\n    let endParts = this.formatter.formatToParts(end);\n    return [\n      ...startParts.map(p => ({...p, source: 'startRange'} as DateRangeFormatPart)),\n      {type: 'literal', value: ' – ', source: 'shared'},\n      ...endParts.map(p => ({...p, source: 'endRange'} as DateRangeFormatPart))\n    ];\n  }\n\n  resolvedOptions(): ResolvedDateTimeFormatOptions {\n    let resolvedOptions = this.formatter.resolvedOptions() as ResolvedDateTimeFormatOptions;\n    if (hasBuggyResolvedHourCycle()) {\n      if (!this.resolvedHourCycle) {\n        this.resolvedHourCycle = getResolvedHourCycle(resolvedOptions.locale, this.options);\n      }\n      resolvedOptions.hourCycle = this.resolvedHourCycle;\n      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n    }\n\n    return resolvedOptions;\n  }\n}\n\n// There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\nconst hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {\n    // All locales use h23 for 24 hour time. None use h24.\n  }\n};\n\nfunction getCachedDateFormatter(locale: string, options: Intl.DateTimeFormatOptions = {}): Intl.DateTimeFormat {\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && hasBuggyHour12Behavior()) {\n    options = {...options};\n    let pref = hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref ?? defaultHourCycle;\n    delete options.hour12;\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey);\n  }\n\n  let numberFormatter = new Intl.DateTimeFormat(locale, options);\n  formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nlet _hasBuggyHour12Behavior: boolean = null;\nfunction hasBuggyHour12Behavior() {\n  if (_hasBuggyHour12Behavior == null) {\n    _hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      hour12: false\n    }).format(new Date(2020, 2, 3, 0)) === '24';\n  }\n\n  return _hasBuggyHour12Behavior;\n}\n\nlet _hasBuggyResolvedHourCycle: boolean = null;\nfunction hasBuggyResolvedHourCycle() {\n  if (_hasBuggyResolvedHourCycle == null) {\n    _hasBuggyResolvedHourCycle = (new Intl.DateTimeFormat('fr', {\n      hour: 'numeric',\n      hour12: false\n    }).resolvedOptions() as ResolvedDateTimeFormatOptions).hourCycle === 'h12';\n  }\n\n  return _hasBuggyResolvedHourCycle;\n}\n\nfunction getResolvedHourCycle(locale: string, options: Intl.DateTimeFormatOptions) {\n  if (!options.timeStyle && !options.hour) {\n    return undefined;\n  }\n\n  // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  let formatter = getCachedDateFormatter(locale, {\n    ...options,\n    timeZone: undefined // use local timezone\n  });\n\n  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour').value, 10);\n  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour').value, 10);\n\n  if (min === 0 && max === 23) {\n    return 'h23';\n  }\n\n  if (min === 24 && max === 23) {\n    return 'h24';\n  }\n\n  if (min === 0 && max === 11) {\n    return 'h11';\n  }\n\n  if (min === 12 && max === 11) {\n    return 'h12';\n  }\n\n  throw new Error('Unexpected hour cycle result');\n}\n"]},"metadata":{},"sourceType":"module"}