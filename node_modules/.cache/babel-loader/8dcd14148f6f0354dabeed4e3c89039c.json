{"ast":null,"code":"import { filterDOMProps as $hgL9i$filterDOMProps } from \"@react-aria/utils\";\nimport $hgL9i$react, { forwardRef as $hgL9i$forwardRef } from \"react\";\nimport { useSlotProps as $hgL9i$useSlotProps, useStyleProps as $hgL9i$useStyleProps, useDOMRef as $hgL9i$useDOMRef } from \"@react-spectrum/utils\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $2f505f60703ca8dc$exports = {};\n$parcel$export($2f505f60703ca8dc$exports, \"Text\", () => $2f505f60703ca8dc$export$5f1af8db9871e1d6);\n\nfunction $2f505f60703ca8dc$var$Text(props, ref) {\n  props = $hgL9i$useSlotProps(props, 'text');\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $hgL9i$useStyleProps(otherProps);\n  let domRef = $hgL9i$useDOMRef(ref);\n  return /*#__PURE__*/$hgL9i$react.createElement(\"span\", { ...$hgL9i$filterDOMProps(otherProps),\n    ...styleProps,\n    ref: domRef\n  }, children);\n}\n/**\n * Text represents text with no specific semantic meaning.\n */\n\n\nconst $2f505f60703ca8dc$export$5f1af8db9871e1d6 = /*#__PURE__*/$hgL9i$forwardRef($2f505f60703ca8dc$var$Text);\nvar $f62b4ac2b080fa8f$exports = {};\n$parcel$export($f62b4ac2b080fa8f$exports, \"Heading\", () => $f62b4ac2b080fa8f$export$a8a3e93435678ff9);\n\nfunction $f62b4ac2b080fa8f$var$Heading(props, ref) {\n  props = $hgL9i$useSlotProps(props, 'heading');\n  let {\n    children: children,\n    level = 3,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $hgL9i$useStyleProps(otherProps);\n  let domRef = $hgL9i$useDOMRef(ref);\n  let HeadingTag = `h${level}`;\n  return /*#__PURE__*/$hgL9i$react.createElement(HeadingTag, { ...$hgL9i$filterDOMProps(otherProps),\n    ...styleProps,\n    ref: domRef\n  }, children);\n}\n/**\n * Heading is used to create various levels of typographic hierarchies.\n */\n\n\nconst $f62b4ac2b080fa8f$export$a8a3e93435678ff9 = /*#__PURE__*/$hgL9i$forwardRef($f62b4ac2b080fa8f$var$Heading);\nvar $9db65624fc9b5771$exports = {};\n$parcel$export($9db65624fc9b5771$exports, \"Keyboard\", () => $9db65624fc9b5771$export$16e4d70cc375e707);\n\nfunction $9db65624fc9b5771$var$Keyboard(props, ref) {\n  props = $hgL9i$useSlotProps(props, 'keyboard');\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $hgL9i$useStyleProps(otherProps);\n  let domRef = $hgL9i$useDOMRef(ref);\n  return /*#__PURE__*/$hgL9i$react.createElement(\"kbd\", { ...$hgL9i$filterDOMProps(otherProps),\n    ...styleProps,\n    dir: \"ltr\",\n    ref: domRef\n  }, children);\n}\n/**\n * Keyboard represents text that specifies a keyboard command.\n */\n\n\nconst $9db65624fc9b5771$export$16e4d70cc375e707 = /*#__PURE__*/$hgL9i$forwardRef($9db65624fc9b5771$var$Keyboard);\nexport { $2f505f60703ca8dc$export$5f1af8db9871e1d6 as Text, $f62b4ac2b080fa8f$export$a8a3e93435678ff9 as Heading, $9db65624fc9b5771$export$16e4d70cc375e707 as Keyboard };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;SAkBSA,2BAAKC,OAAkBC,KAAa;AAC3CD,OAAK,GAAGE,mBAAY,CAACF,KAAD,EAAQ,MAAR,CAApB;AACA,MAAI;AAACG,cACHA,QADE;AACM,OACLC;AAFD,MAGAJ,KAHJ;AAIA,MAAI;AAACK;AAAD,MAAeC,oBAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,gBAAS,CAACP,GAAD,CAAtB;AAEA,SAAM,wCACH,MADG,EACC,KAAKQ,qBAAc,CAACL,UAAD,CAAnB;OAAqCC,UAArC;AAAiDJ,OAAG,EAAEM;AAAtD,GADD,EAEDJ,QAFC,CAAN;AAKD;AAED;;;;;AAGA,MAAMO,yCAAK,gBAAGC,iBAAU,CAACZ,0BAAD,CAAxB;;;;SCnBSa,8BAAQZ,OAAqBC,KAAiC;AACrED,OAAK,GAAGE,mBAAY,CAACF,KAAD,EAAQ,SAAR,CAApB;AAEA,MAAI;AAACG,cACHA,QADE;AAEFU,SAAK,GAAG,CAFN;AAEO,OACNT;AAHD,MAIAJ,KAJJ;AAKA,MAAI;AAACK;AAAD,MAAeC,oBAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,gBAAS,CAACP,GAAD,CAAtB;AACA,MAAIa,UAAU,GAAI,IAAGD,KAAK,EAA1B;AAEA,SAAM,wCACHC,UADG,EACO,KAAKL,qBAAc,CAACL,UAAD,CAAnB;OAAqCC,UAArC;AAAiDJ,OAAG,EAAEM;AAAtD,GADP,EAEDJ,QAFC,CAAN;AAKD;AAED;;;;;AAGA,MAAMY,yCAAQ,gBAAGJ,iBAAU,CAACC,6BAAD,CAA3B;;;;SCtBSI,+BAAShB,OAAsBC,KAAa;AACnDD,OAAK,GAAGE,mBAAY,CAACF,KAAD,EAAQ,UAAR,CAApB;AACA,MAAI;AAACG,cACHA,QADE;AACM,OACLC;AAFD,MAGAJ,KAHJ;AAIA,MAAI;AAACK;AAAD,MAAeC,oBAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,gBAAS,CAACP,GAAD,CAAtB;AAEA,SAAM,wCACH,KADG,EACA,KAAKQ,qBAAc,CAACL,UAAD,CAAnB;OAAqCC,UAArC;AAAiDY,OAAG,EAAC,KAArD;AAA2DhB,OAAG,EAAEM;AAAhE,GADA,EAEDJ,QAFC,CAAN;AAKD;AAED;;;;;AAGA,MAAMe,yCAAS,gBAAGP,iBAAU,CAACK,8BAAD,CAA5B","names":["$2f505f60703ca8dc$var$Text","props","ref","$hgL9i$useSlotProps","children","otherProps","styleProps","$hgL9i$useStyleProps","domRef","$hgL9i$useDOMRef","$hgL9i$filterDOMProps","$2f505f60703ca8dc$export$5f1af8db9871e1d6","$hgL9i$forwardRef","$f62b4ac2b080fa8f$var$Heading","level","HeadingTag","$f62b4ac2b080fa8f$export$a8a3e93435678ff9","$9db65624fc9b5771$var$Keyboard","dir","$9db65624fc9b5771$export$16e4d70cc375e707"],"sources":["/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/text/dist/packages/@react-spectrum/text/src/Text.tsx","/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/text/dist/packages/@react-spectrum/text/src/Heading.tsx","/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/text/dist/packages/@react-spectrum/text/src/Keyboard.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {TextProps} from '@react-types/text';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Text(props: TextProps, ref: DOMRef) {\n  props = useSlotProps(props, 'text');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <span {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </span>\n  );\n}\n\n/**\n * Text represents text with no specific semantic meaning.\n */\nconst _Text = forwardRef(Text);\nexport {_Text as Text};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {HeadingProps} from '@react-types/text';\nimport React, {ElementType, forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Heading(props: HeadingProps, ref: DOMRef<HTMLHeadingElement>) {\n  props = useSlotProps(props, 'heading');\n\n  let {\n    children,\n    level = 3,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  let HeadingTag = `h${level}` as ElementType;\n\n  return (\n    <HeadingTag {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </HeadingTag>\n  );\n}\n\n/**\n * Heading is used to create various levels of typographic hierarchies.\n */\nconst _Heading = forwardRef(Heading);\nexport {_Heading as Heading};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {KeyboardProps} from '@react-types/text';\nimport React, {forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Keyboard(props: KeyboardProps, ref: DOMRef) {\n  props = useSlotProps(props, 'keyboard');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <kbd {...filterDOMProps(otherProps)} {...styleProps} dir=\"ltr\" ref={domRef}>\n      {children}\n    </kbd>\n  );\n}\n\n/**\n * Keyboard represents text that specifies a keyboard command.\n */\nconst _Keyboard = forwardRef(Keyboard);\nexport {_Keyboard as Keyboard};\n"]},"metadata":{},"sourceType":"module"}