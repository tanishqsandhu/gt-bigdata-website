{"ast":null,"code":"import \"./main.css\";\nimport { baseStyleProps as $5XBri$baseStyleProps, passthroughStyle as $5XBri$passthroughStyle, dimensionValue as $5XBri$dimensionValue, useStyleProps as $5XBri$useStyleProps, useDOMRef as $5XBri$useDOMRef, useBreakpoint as $5XBri$useBreakpoint, responsiveDimensionValue as $5XBri$responsiveDimensionValue, classNames as $5XBri$classNames } from \"@react-spectrum/utils\";\nimport { filterDOMProps as $5XBri$filterDOMProps } from \"@react-aria/utils\";\nimport $5XBri$react, { forwardRef as $5XBri$forwardRef } from \"react\";\nimport { useIsSSR as $5XBri$useIsSSR } from \"@react-aria/ssr\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $adc7dbc11bf4e86c$exports = {};\n$parcel$export($adc7dbc11bf4e86c$exports, \"repeat\", () => $adc7dbc11bf4e86c$export$76d90c956114f2c2);\n$parcel$export($adc7dbc11bf4e86c$exports, \"minmax\", () => $adc7dbc11bf4e86c$export$9c1b655deaca4988);\n$parcel$export($adc7dbc11bf4e86c$exports, \"fitContent\", () => $adc7dbc11bf4e86c$export$2f0b47b0911ce698);\n$parcel$export($adc7dbc11bf4e86c$exports, \"Grid\", () => $adc7dbc11bf4e86c$export$ef2184bd89960b14);\nconst $adc7dbc11bf4e86c$var$gridStyleProps = { ...$5XBri$baseStyleProps,\n  autoFlow: ['gridAutoFlow', $5XBri$passthroughStyle],\n  autoColumns: ['gridAutoColumns', $adc7dbc11bf4e86c$var$gridDimensionValue],\n  autoRows: ['gridAutoRows', $adc7dbc11bf4e86c$var$gridDimensionValue],\n  areas: ['gridTemplateAreas', $adc7dbc11bf4e86c$var$gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', $adc7dbc11bf4e86c$var$gridTemplateValue],\n  rows: ['gridTemplateRows', $adc7dbc11bf4e86c$var$gridTemplateValue],\n  gap: ['gap', $5XBri$dimensionValue],\n  rowGap: ['rowGap', $5XBri$dimensionValue],\n  columnGap: ['columnGap', $5XBri$dimensionValue],\n  justifyItems: ['justifyItems', $5XBri$passthroughStyle],\n  justifyContent: ['justifyContent', $5XBri$passthroughStyle],\n  alignItems: ['alignItems', $5XBri$passthroughStyle],\n  alignContent: ['alignContent', $5XBri$passthroughStyle]\n};\n\nfunction $adc7dbc11bf4e86c$var$Grid(props, ref) {\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $5XBri$useStyleProps(otherProps, $adc7dbc11bf4e86c$var$gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n\n  let domRef = $5XBri$useDOMRef(ref);\n  return /*#__PURE__*/$5XBri$react.createElement(\"div\", { ...$5XBri$filterDOMProps(otherProps),\n    ...styleProps,\n    ref: domRef\n  }, children);\n}\n\nfunction $adc7dbc11bf4e86c$export$76d90c956114f2c2(count, $adc7dbc11bf4e86c$export$76d90c956114f2c2) {\n  return `repeat(${count}, ${$adc7dbc11bf4e86c$var$gridTemplateValue($adc7dbc11bf4e86c$export$76d90c956114f2c2)})`;\n}\n\nfunction $adc7dbc11bf4e86c$export$9c1b655deaca4988(min, max) {\n  return `minmax(${$adc7dbc11bf4e86c$var$gridDimensionValue(min)}, ${$adc7dbc11bf4e86c$var$gridDimensionValue(max)})`;\n}\n\nfunction $adc7dbc11bf4e86c$export$2f0b47b0911ce698(dimension) {\n  return `fit-content(${$adc7dbc11bf4e86c$var$gridDimensionValue(dimension)})`;\n}\n\nfunction $adc7dbc11bf4e86c$var$gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction $adc7dbc11bf4e86c$var$gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) return value;\n  return $5XBri$dimensionValue(value);\n}\n\nfunction $adc7dbc11bf4e86c$var$gridTemplateValue(value) {\n  if (Array.isArray(value)) return value.map($adc7dbc11bf4e86c$var$gridDimensionValue).join(' ');\n  return $adc7dbc11bf4e86c$var$gridDimensionValue(value);\n}\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\n\n\nconst $adc7dbc11bf4e86c$export$ef2184bd89960b14 = /*#__PURE__*/$5XBri$forwardRef($adc7dbc11bf4e86c$var$Grid);\nvar $1b39fab7603c3bcf$exports = {};\n$parcel$export($1b39fab7603c3bcf$exports, \"Flex\", () => $1b39fab7603c3bcf$export$f51f4c4ede09e011);\nvar $fbc4eea22f41fc14$exports = {};\n$parcel$export($fbc4eea22f41fc14$exports, \"flex-container\", () => $fbc4eea22f41fc14$export$69d7a39fa31a000b, v => $fbc4eea22f41fc14$export$69d7a39fa31a000b = v);\n$parcel$export($fbc4eea22f41fc14$exports, \"flex\", () => $fbc4eea22f41fc14$export$97691fbb80847c19, v => $fbc4eea22f41fc14$export$97691fbb80847c19 = v);\n$parcel$export($fbc4eea22f41fc14$exports, \"flex-gap\", () => $fbc4eea22f41fc14$export$31a9da8b58047a44, v => $fbc4eea22f41fc14$export$31a9da8b58047a44 = v);\nvar $fbc4eea22f41fc14$export$69d7a39fa31a000b;\nvar $fbc4eea22f41fc14$export$97691fbb80847c19;\nvar $fbc4eea22f41fc14$export$31a9da8b58047a44;\n$fbc4eea22f41fc14$export$69d7a39fa31a000b = \"flex-container_e15493\";\n$fbc4eea22f41fc14$export$97691fbb80847c19 = \"flex_e15493\";\n$fbc4eea22f41fc14$export$31a9da8b58047a44 = \"flex-gap_e15493\";\nconst $1b39fab7603c3bcf$var$flexStyleProps = {\n  direction: ['flexDirection', $5XBri$passthroughStyle],\n  wrap: ['flexWrap', $1b39fab7603c3bcf$var$flexWrapValue],\n  justifyContent: ['justifyContent', $1b39fab7603c3bcf$var$flexAlignValue],\n  alignItems: ['alignItems', $1b39fab7603c3bcf$var$flexAlignValue],\n  alignContent: ['alignContent', $1b39fab7603c3bcf$var$flexAlignValue]\n};\n\nfunction $1b39fab7603c3bcf$var$Flex(props, ref) {\n  let {\n    children: children,\n    ...otherProps\n  } = props;\n  let breakpointProvider = $5XBri$useBreakpoint();\n  let matchedBreakpoints = (breakpointProvider === null || breakpointProvider === void 0 ? void 0 : breakpointProvider.matchedBreakpoints) || ['base'];\n  let {\n    styleProps: styleProps\n  } = $5XBri$useStyleProps(otherProps);\n  let {\n    styleProps: flexStyle\n  } = $5XBri$useStyleProps(otherProps, $1b39fab7603c3bcf$var$flexStyleProps);\n  let domRef = $5XBri$useDOMRef(ref);\n  let isSSR = $5XBri$useIsSSR(); // If a gap property is specified, and there is no native support or we're in SSR, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n\n  if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !$1b39fab7603c3bcf$var$isFlexGapSupported())) {\n    let style = { ...flexStyle.style,\n      '--column-gap': props.columnGap != null ? $5XBri$responsiveDimensionValue(props.columnGap, matchedBreakpoints) : undefined,\n      '--row-gap': props.rowGap != null ? $5XBri$responsiveDimensionValue(props.rowGap, matchedBreakpoints) : undefined,\n      '--gap': props.gap != null ? $5XBri$responsiveDimensionValue(props.gap, matchedBreakpoints) : undefined\n    };\n    return /*#__PURE__*/$5XBri$react.createElement(\"div\", { ...$5XBri$filterDOMProps(otherProps),\n      ...styleProps,\n      className: $5XBri$classNames( /*@__PURE__*/$parcel$interopDefault($fbc4eea22f41fc14$exports), 'flex-container', styleProps.className),\n      ref: domRef\n    }, /*#__PURE__*/$5XBri$react.createElement(\"div\", {\n      className: $5XBri$classNames( /*@__PURE__*/$parcel$interopDefault($fbc4eea22f41fc14$exports), 'flex', 'flex-gap'),\n      style: style\n    }, children));\n  } // If no gaps, or native support exists, then we only need to render a single div.\n\n\n  let style = { ...styleProps.style,\n    ...flexStyle.style\n  };\n  if (props.gap != null) style.gap = $5XBri$responsiveDimensionValue(props.gap, matchedBreakpoints);\n  if (props.columnGap != null) style.columnGap = $5XBri$responsiveDimensionValue(props.columnGap, matchedBreakpoints);\n  if (props.rowGap != null) style.rowGap = $5XBri$responsiveDimensionValue(props.rowGap, matchedBreakpoints);\n  return /*#__PURE__*/$5XBri$react.createElement(\"div\", { ...$5XBri$filterDOMProps(otherProps),\n    className: $5XBri$classNames( /*@__PURE__*/$parcel$interopDefault($fbc4eea22f41fc14$exports), 'flex', styleProps.className),\n    style: style,\n    ref: domRef\n  }, children);\n}\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\n\n\nfunction $1b39fab7603c3bcf$var$flexAlignValue(value) {\n  if (value === 'start') return 'flex-start';\n  if (value === 'end') return 'flex-end';\n  return value;\n}\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\n\n\nfunction $1b39fab7603c3bcf$var$flexWrapValue(value) {\n  if (typeof value === 'boolean') return value ? 'wrap' : 'nowrap';\n  return value;\n} // Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\n\nlet $1b39fab7603c3bcf$var$_isFlexGapSupported = null;\n\nfunction $1b39fab7603c3bcf$var$isFlexGapSupported() {\n  if ($1b39fab7603c3bcf$var$_isFlexGapSupported != null) return $1b39fab7603c3bcf$var$_isFlexGapSupported;\n  if (typeof document === 'undefined') return false; // create flex container with row-gap set\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  $1b39fab7603c3bcf$var$_isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  flex.parentNode.removeChild(flex);\n  return $1b39fab7603c3bcf$var$_isFlexGapSupported;\n}\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\n\n\nconst $1b39fab7603c3bcf$export$f51f4c4ede09e011 = /*#__PURE__*/$5XBri$forwardRef($1b39fab7603c3bcf$var$Flex);\nexport { $adc7dbc11bf4e86c$export$76d90c956114f2c2 as repeat, $adc7dbc11bf4e86c$export$9c1b655deaca4988 as minmax, $adc7dbc11bf4e86c$export$2f0b47b0911ce698 as fitContent, $adc7dbc11bf4e86c$export$ef2184bd89960b14 as Grid, $1b39fab7603c3bcf$export$f51f4c4ede09e011 as Flex };","map":{"version":3,"mappings":"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","names":["$adc7dbc11bf4e86c$var$gridStyleProps","$5XBri$baseStyleProps","autoFlow","$5XBri$passthroughStyle","autoColumns","$adc7dbc11bf4e86c$var$gridDimensionValue","autoRows","areas","$adc7dbc11bf4e86c$var$gridTemplateAreasValue","columns","$adc7dbc11bf4e86c$var$gridTemplateValue","rows","gap","$5XBri$dimensionValue","rowGap","columnGap","justifyItems","justifyContent","alignItems","alignContent","$adc7dbc11bf4e86c$var$Grid","props","ref","children","otherProps","styleProps","$5XBri$useStyleProps","style","display","domRef","$5XBri$useDOMRef","$5XBri$filterDOMProps","$adc7dbc11bf4e86c$export$76d90c956114f2c2","count","$adc7dbc11bf4e86c$export$9c1b655deaca4988","min","max","$adc7dbc11bf4e86c$export$2f0b47b0911ce698","dimension","value","map","v","join","test","Array","isArray","$adc7dbc11bf4e86c$export$ef2184bd89960b14","$5XBri$forwardRef","$fbc4eea22f41fc14$export$69d7a39fa31a000b","$fbc4eea22f41fc14$export$97691fbb80847c19","$fbc4eea22f41fc14$export$31a9da8b58047a44","$1b39fab7603c3bcf$var$flexStyleProps","direction","wrap","$1b39fab7603c3bcf$var$flexWrapValue","$1b39fab7603c3bcf$var$flexAlignValue","$1b39fab7603c3bcf$var$Flex","breakpointProvider","$5XBri$useBreakpoint","matchedBreakpoints","flexStyle","isSSR","$5XBri$useIsSSR","$1b39fab7603c3bcf$var$isFlexGapSupported","$5XBri$responsiveDimensionValue","undefined","className","$5XBri$classNames","$1b39fab7603c3bcf$var$_isFlexGapSupported","document","flex","createElement","flexDirection","appendChild","body","scrollHeight","parentNode","removeChild","$1b39fab7603c3bcf$export$f51f4c4ede09e011"],"sources":["/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/Grid.tsx","/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/flex-gap.css","/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/Flex.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  baseStyleProps,\n  dimensionValue,\n  passthroughStyle,\n  StyleHandlers,\n  useDOMRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {DimensionValue, DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {GridProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\n\nconst gridStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', gridDimensionValue],\n  autoRows: ['gridAutoRows', gridDimensionValue],\n  areas: ['gridTemplateAreas', gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', gridTemplateValue],\n  rows: ['gridTemplateRows', gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n};\n\nfunction Grid(props: GridProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = useDOMRef(ref);\n\n  return (\n    <div {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\nexport function repeat(count: number | 'auto-fill' | 'auto-fit', repeat: DimensionValue | DimensionValue[]): string {\n  return `repeat(${count}, ${gridTemplateValue(repeat)})`;\n}\n\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\nexport function minmax(min: DimensionValue, max: DimensionValue): string {\n  return `minmax(${gridDimensionValue(min)}, ${gridDimensionValue(max)})`;\n}\n\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\nexport function fitContent(dimension: DimensionValue): string {\n  return `fit-content(${gridDimensionValue(dimension)})`;\n}\n\nfunction gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map(gridDimensionValue).join(' ');\n  }\n\n  return gridDimensionValue(value);\n}\n\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst _Grid = forwardRef(Grid);\nexport {_Grid as Grid};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.flex-container {\n  /* this is necessary so that the inner margins don't affect anything outside */\n  display: flex;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-gap {\n  --gap: 0px;\n  --column-gap: var(--gap);\n  --row-gap: var(--gap);\n\n  /* apply a negative margin to counteract the margin on each item at the edges */\n  margin: calc(var(--row-gap) / -2) calc(var(--column-gap) / -2);\n\n  /* increase the width and height to account for this margin */\n  /* Add 1px to fix rounding error in Safari (╯°□°)╯︵ ┻━┻ */\n  width: calc(100% + calc(var(--column-gap) + 1px));\n  height: calc(100% + var(--row-gap));\n}\n\n/* If the selector was .flex-gap > *, it wouldn't override when components have a margin 0 specified by a single\n * class selector, specificity is equal. Both are one class. Neither > nor * contribute to specificity.\n * We need to make it more specific, so we raise it by 1 class.\n */\n.flex-container .flex-gap > * {\n  /* apply half of the gap to each side of every item */\n  margin: calc(var(--row-gap) / 2) calc(var(--column-gap) / 2);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, passthroughStyle, responsiveDimensionValue, StyleHandlers, useBreakpoint, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {FlexProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\nimport styles from './flex-gap.css';\nimport {useIsSSR} from '@react-aria/ssr';\n\nconst flexStyleProps: StyleHandlers = {\n  direction: ['flexDirection', passthroughStyle],\n  wrap: ['flexWrap', flexWrapValue],\n  justifyContent: ['justifyContent', flexAlignValue],\n  alignItems: ['alignItems', flexAlignValue],\n  alignContent: ['alignContent', flexAlignValue]\n};\n\nfunction Flex(props: FlexProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let breakpointProvider = useBreakpoint();\n  let matchedBreakpoints = breakpointProvider?.matchedBreakpoints || ['base'];\n  let {styleProps} = useStyleProps(otherProps);\n  let {styleProps: flexStyle} = useStyleProps(otherProps, flexStyleProps);\n  let domRef = useDOMRef(ref);\n  let isSSR = useIsSSR();\n\n  // If a gap property is specified, and there is no native support or we're in SSR, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n  if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !isFlexGapSupported())) {\n    let style = {\n      ...flexStyle.style,\n      '--column-gap': props.columnGap != null ? responsiveDimensionValue(props.columnGap, matchedBreakpoints) : undefined,\n      '--row-gap': props.rowGap != null ? responsiveDimensionValue(props.rowGap, matchedBreakpoints) : undefined,\n      '--gap': props.gap != null ? responsiveDimensionValue(props.gap, matchedBreakpoints) : undefined\n    };\n\n    return (\n      <div {...filterDOMProps(otherProps)} {...styleProps} className={classNames(styles, 'flex-container', styleProps.className)} ref={domRef}>\n        <div className={classNames(styles, 'flex', 'flex-gap')} style={style}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n\n  // If no gaps, or native support exists, then we only need to render a single div.\n  let style = {\n    ...styleProps.style,\n    ...flexStyle.style\n  };\n\n  if (props.gap != null) {\n    style.gap = responsiveDimensionValue(props.gap, matchedBreakpoints);\n  }\n\n  if (props.columnGap != null) {\n    style.columnGap = responsiveDimensionValue(props.columnGap, matchedBreakpoints);\n  }\n\n  if (props.rowGap != null) {\n    style.rowGap = responsiveDimensionValue(props.rowGap, matchedBreakpoints);\n  }\n\n  return (\n    <div {...filterDOMProps(otherProps)} className={classNames(styles, 'flex', styleProps.className)} style={style} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\nfunction flexAlignValue(value) {\n  if (value === 'start') {\n    return 'flex-start';\n  }\n\n  if (value === 'end') {\n    return 'flex-end';\n  }\n\n  return value;\n}\n\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\nfunction flexWrapValue(value) {\n  if (typeof value === 'boolean') {\n    return value ? 'wrap' : 'nowrap';\n  }\n\n  return value;\n}\n\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\nlet _isFlexGapSupported = null;\nfunction isFlexGapSupported() {\n  if (_isFlexGapSupported != null) {\n    return _isFlexGapSupported;\n  }\n\n  if (typeof document === 'undefined') {\n    return false;\n  }\n\n  // create flex container with row-gap set\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px';\n\n  // create two, elements inside it\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div'));\n\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  _isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  flex.parentNode.removeChild(flex);\n\n  return _isFlexGapSupported;\n}\n\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\nconst _Flex = forwardRef(Flex);\nexport {_Flex as Flex};\n"]},"metadata":{},"sourceType":"module"}