{"ast":null,"code":"import { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useMessageFormatter as $cVkRF$useMessageFormatter, useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $d1c300d9c497e402$exports = {};\n$parcel$export($d1c300d9c497e402$exports, \"GridKeyboardDelegate\", () => $d1c300d9c497e402$export$de9feff04fda126e);\n\nclass $d1c300d9c497e402$export$de9feff04fda126e {\n  isCell(node) {\n    return node.type === 'cell';\n  }\n\n  isRow(node) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  findPreviousKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  findNextKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the next item\n\n    key = this.findNextKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the next row\n\n\n      if (this.focusMode === 'row') return key;\n    }\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus is on a cell, start searching from the parent row\n\n    if (this.isCell(startItem)) key = startItem.parentKey; // Find the previous item\n\n    key = this.findPreviousKey(key);\n\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      } // Otherwise, focus the previous row\n\n\n      if (this.focusMode === 'row') return key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the first child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[children.length - 1].key : children[0].key;\n    } // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl' ? children[item.index - 1] : children[item.index + 1];\n      if (next) return next.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus is on a row, focus the last child cell.\n\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[0].key : children[children.length - 1].key;\n    } // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n\n\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl' ? children[item.index + 1] : children[item.index - 1];\n      if (prev) return prev.key; // focus row only if focusMode is set to row\n\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    } // Find the first row\n\n\n    key = this.findNextKey(); // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getLastKey(key, global) {\n    let item;\n\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return; // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    } // Find the last row\n\n\n    key = this.findPreviousKey(); // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    } // Otherwise, focus the row itself.\n\n\n    return key;\n  }\n\n  getItem(key) {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  getItemRect(key) {\n    var ref;\n    if (this.layout) return (ref = this.layout.getLayoutInfo(key)) === null || ref === void 0 ? void 0 : ref.rect;\n    let item = this.getItem(key);\n    if (item) return new $cVkRF$Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n  }\n\n  getPageHeight() {\n    var ref, ref1, ref2;\n    if (this.layout) return (ref = this.layout.virtualizer) === null || ref === void 0 ? void 0 : ref.visibleRect.height;\n    return (ref1 = this.ref) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.current) === null || ref2 === void 0 ? void 0 : ref2.offsetHeight;\n  }\n\n  getContentHeight() {\n    var ref, ref3;\n    if (this.layout) return this.layout.getContentSize().height;\n    return (ref = this.ref) === null || ref === void 0 ? void 0 : (ref3 = ref.current) === null || ref3 === void 0 ? void 0 : ref3.scrollHeight;\n  }\n\n  getKeyPageAbove(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey); // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n\n      if (nextKey != null) key = nextKey;\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey(); // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // check row text value for match\n\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') return [...item.childNodes][0].key;\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n  constructor(options) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n}\n\nvar $83c6e2eafa584c67$exports = {};\n$parcel$export($83c6e2eafa584c67$exports, \"useGrid\", () => $83c6e2eafa584c67$export$f6b86a04e5d66d90);\nconst $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} غير المحدد\\\",\\\"longPressToSelect\\\":\\\"اضغط مطولًا للدخول إلى وضع التحديد.\\\",\\\"select\\\":\\\"تحديد\\\",\\\"selectedAll\\\":\\\"جميع العناصر المحددة.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\\\",\\\"selectedItem\\\":\\\"{item} المحدد\\\"}\");\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не е избран.\\\",\\\"longPressToSelect\\\":\\\"Натиснете и задръжте за да влезете в избирателен режим.\\\",\\\"select\\\":\\\"Изберете\\\",\\\"selectedAll\\\":\\\"Всички елементи са избрани.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\\\",\\\"selectedItem\\\":\\\"{item} избран.\\\"}\");\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Položka {item} není vybrána.\\\",\\\"longPressToSelect\\\":\\\"Dlouhým stisknutím přejdete do režimu výběru.\\\",\\\"select\\\":\\\"Vybrat\\\",\\\"selectedAll\\\":\\\"Vybrány všechny položky.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\\\",\\\"selectedItem\\\":\\\"Vybrána položka {item}.\\\"}\");\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} ikke valgt.\\\",\\\"longPressToSelect\\\":\\\"Lav et langt tryk for at aktivere valgtilstand.\\\",\\\"select\\\":\\\"Vælg\\\",\\\"selectedAll\\\":\\\"Alle elementer valgt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\\\",\\\"selectedItem\\\":\\\"{item} valgt.\\\"}\");\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nicht ausgewählt.\\\",\\\"longPressToSelect\\\":\\\"Gedrückt halten, um Auswahlmodus zu öffnen.\\\",\\\"select\\\":\\\"Auswählen\\\",\\\"selectedAll\\\":\\\"Alle Elemente ausgewählt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\\\",\\\"selectedItem\\\":\\\"{item} ausgewählt.\\\"}\");\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Δεν επιλέχθηκε το στοιχείο {item}.\\\",\\\"longPressToSelect\\\":\\\"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\\\",\\\"select\\\":\\\"Επιλογή\\\",\\\"selectedAll\\\":\\\"Επιλέχθηκαν όλα τα στοιχεία.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\\\",\\\"selectedItem\\\":\\\"Επιλέχθηκε το στοιχείο {item}.\\\"}\");\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} not selected.\\\",\\\"select\\\":\\\"Select\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\\\",\\\"selectedAll\\\":\\\"All items selected.\\\",\\\"selectedItem\\\":\\\"{item} selected.\\\",\\\"longPressToSelect\\\":\\\"Long press to enter selection mode.\\\"}\");\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} no seleccionado.\\\",\\\"longPressToSelect\\\":\\\"Mantenga pulsado para abrir el modo de selección.\\\",\\\"select\\\":\\\"Seleccionar\\\",\\\"selectedAll\\\":\\\"Todos los elementos seleccionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\\\",\\\"selectedItem\\\":\\\"{item} seleccionado.\\\"}\");\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} pole valitud.\\\",\\\"longPressToSelect\\\":\\\"Valikurežiimi sisenemiseks vajutage pikalt.\\\",\\\"select\\\":\\\"Vali\\\",\\\"selectedAll\\\":\\\"Kõik üksused valitud.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\\\",\\\"selectedItem\\\":\\\"{item} valitud.\\\"}\");\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Kohdetta {item} ei valittu.\\\",\\\"longPressToSelect\\\":\\\"Siirry valintatilaan painamalla pitkään.\\\",\\\"select\\\":\\\"Valitse\\\",\\\"selectedAll\\\":\\\"Kaikki kohteet valittu.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\\\",\\\"selectedItem\\\":\\\"{item} valittu.\\\"}\");\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} non sélectionné.\\\",\\\"longPressToSelect\\\":\\\"Appuyez de manière prolongée pour passer en mode de sélection.\\\",\\\"select\\\":\\\"Sélectionner\\\",\\\"selectedAll\\\":\\\"Tous les éléments sélectionnés.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\\\",\\\"selectedItem\\\":\\\"{item} sélectionné.\\\"}\");\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} לא נבחר.\\\",\\\"longPressToSelect\\\":\\\"הקשה ארוכה לכניסה למצב בחירה.\\\",\\\"select\\\":\\\"בחר\\\",\\\"selectedAll\\\":\\\"כל הפריטים נבחרו.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\\\",\\\"selectedItem\\\":\\\"{item} נבחר.\\\"}\");\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Stavka {item} nije odabrana.\\\",\\\"longPressToSelect\\\":\\\"Dugo pritisnite za ulazak u način odabira.\\\",\\\"select\\\":\\\"Odaberite\\\",\\\"selectedAll\\\":\\\"Odabrane su sve stavke.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\\\",\\\"selectedItem\\\":\\\"Stavka {item} je odabrana.\\\"}\");\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nincs kijelölve.\\\",\\\"longPressToSelect\\\":\\\"Nyomja hosszan a kijelöléshez.\\\",\\\"select\\\":\\\"Kijelölés\\\",\\\"selectedAll\\\":\\\"Az összes elem kijelölve.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\\\",\\\"selectedItem\\\":\\\"{item} kijelölve.\\\"}\");\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} non selezionato.\\\",\\\"longPressToSelect\\\":\\\"Premi a lungo per passare alla modalità di selezione.\\\",\\\"select\\\":\\\"Seleziona\\\",\\\"selectedAll\\\":\\\"Tutti gli elementi selezionati.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\\\",\\\"selectedItem\\\":\\\"{item} selezionato.\\\"}\");\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} が選択されていません。\\\",\\\"longPressToSelect\\\":\\\"長押しして選択モードを開きます。\\\",\\\"select\\\":\\\"選択\\\",\\\"selectedAll\\\":\\\"すべての項目を選択しました。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\\\",\\\"selectedItem\\\":\\\"{item} を選択しました。\\\"}\");\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item}이(가) 선택되지 않았습니다.\\\",\\\"longPressToSelect\\\":\\\"선택 모드로 들어가려면 길게 누르십시오.\\\",\\\"select\\\":\\\"선택\\\",\\\"selectedAll\\\":\\\"모든 항목이 선택되었습니다.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\\\",\\\"selectedItem\\\":\\\"{item}이(가) 선택되었습니다.\\\"}\");\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nepasirinkta.\\\",\\\"longPressToSelect\\\":\\\"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\\\",\\\"select\\\":\\\"Pasirinkti\\\",\\\"selectedAll\\\":\\\"Pasirinkti visi elementai.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\\\",\\\"selectedItem\\\":\\\"Pasirinkta: {item}.\\\"}\");\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Vienums {item} nav atlasīts.\\\",\\\"longPressToSelect\\\":\\\"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\\\",\\\"select\\\":\\\"Atlasīt\\\",\\\"selectedAll\\\":\\\"Atlasīti visi vienumi.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\\\",\\\"selectedItem\\\":\\\"Atlasīts vienums {item}.\\\"}\");\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} er ikke valgt.\\\",\\\"longPressToSelect\\\":\\\"Bruk et langt trykk for å gå inn i valgmodus.\\\",\\\"select\\\":\\\"Velg\\\",\\\"selectedAll\\\":\\\"Alle elementer er valgt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\\\",\\\"selectedItem\\\":\\\"{item} er valgt.\\\"}\");\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} niet geselecteerd.\\\",\\\"longPressToSelect\\\":\\\"Druk lang om de selectiemodus te openen.\\\",\\\"select\\\":\\\"Selecteren\\\",\\\"selectedAll\\\":\\\"Alle items geselecteerd.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\\\",\\\"selectedItem\\\":\\\"{item} geselecteerd.\\\"}\");\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Nie zaznaczono {item}.\\\",\\\"longPressToSelect\\\":\\\"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\\\",\\\"select\\\":\\\"Zaznacz\\\",\\\"selectedAll\\\":\\\"Wszystkie zaznaczone elementy.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\\\",\\\"selectedItem\\\":\\\"Zaznaczono {item}.\\\"}\");\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} não selecionado.\\\",\\\"longPressToSelect\\\":\\\"Mantenha pressionado para entrar no modo de seleção.\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectedAll\\\":\\\"Todos os itens selecionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\\\",\\\"selectedItem\\\":\\\"{item} selecionado.\\\"}\");\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} não selecionado.\\\",\\\"longPressToSelect\\\":\\\"Prima continuamente para entrar no modo de seleção.\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectedAll\\\":\\\"Todos os itens selecionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\\\",\\\"selectedItem\\\":\\\"{item} selecionado.\\\"}\");\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} neselectat.\\\",\\\"longPressToSelect\\\":\\\"Apăsați lung pentru a intra în modul de selectare.\\\",\\\"select\\\":\\\"Selectare\\\",\\\"selectedAll\\\":\\\"Toate elementele selectate.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\\\",\\\"selectedItem\\\":\\\"{item} selectat.\\\"}\");\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не выбрано.\\\",\\\"longPressToSelect\\\":\\\"Нажмите и удерживайте для входа в режим выбора.\\\",\\\"select\\\":\\\"Выбрать\\\",\\\"selectedAll\\\":\\\"Выбраны все элементы.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\\\",\\\"selectedItem\\\":\\\"{item} выбрано.\\\"}\");\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Nevybraté položky: {item}.\\\",\\\"longPressToSelect\\\":\\\"Dlhším stlačením prejdite do režimu výberu.\\\",\\\"select\\\":\\\"Vybrať\\\",\\\"selectedAll\\\":\\\"Všetky vybraté položky.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\\\",\\\"selectedItem\\\":\\\"Vybraté položky: {item}.\\\"}\");\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Element {item} ni izbran.\\\",\\\"longPressToSelect\\\":\\\"Za izbirni način pritisnite in dlje časa držite.\\\",\\\"select\\\":\\\"Izberite\\\",\\\"selectedAll\\\":\\\"Vsi elementi so izbrani.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\\\",\\\"selectedItem\\\":\\\"Element {item} je izbran.\\\"}\");\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nije izabrano.\\\",\\\"longPressToSelect\\\":\\\"Dugo pritisnite za ulazak u režim biranja.\\\",\\\"select\\\":\\\"Izaberite\\\",\\\"selectedAll\\\":\\\"Izabrane su sve stavke.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\\\",\\\"selectedItem\\\":\\\"{item} je izabrano.\\\"}\");\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} ej markerat.\\\",\\\"longPressToSelect\\\":\\\"Tryck länge när du vill öppna väljarläge.\\\",\\\"select\\\":\\\"Markera\\\",\\\"selectedAll\\\":\\\"Alla markerade objekt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\\\",\\\"selectedItem\\\":\\\"{item} markerat.\\\"}\");\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} seçilmedi.\\\",\\\"longPressToSelect\\\":\\\"Seçim moduna girmek için uzun basın.\\\",\\\"select\\\":\\\"Seç\\\",\\\"selectedAll\\\":\\\"Tüm ögeler seçildi.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\\\",\\\"selectedItem\\\":\\\"{item} seçildi.\\\"}\");\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не вибрано.\\\",\\\"longPressToSelect\\\":\\\"Виконайте довге натиснення, щоб перейти в режим вибору.\\\",\\\"select\\\":\\\"Вибрати\\\",\\\"selectedAll\\\":\\\"Усі елементи вибрано.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\\\",\\\"selectedItem\\\":\\\"{item} вибрано.\\\"}\");\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"未选择 {item}。\\\",\\\"longPressToSelect\\\":\\\"长按以进入选择模式。\\\",\\\"select\\\":\\\"选择\\\",\\\"selectedAll\\\":\\\"已选择所有项目。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\\\",\\\"selectedItem\\\":\\\"已选择 {item}。\\\"}\");\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"未選取「{item}」。\\\",\\\"longPressToSelect\\\":\\\"長按以進入選擇模式。\\\",\\\"select\\\":\\\"選取\\\",\\\"selectedAll\\\":\\\"已選取所有項目。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\\\",\\\"selectedItem\\\":\\\"已選取「{item}」。\\\"}\");\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  let formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  let modality = $cVkRF$useInteractionModality(); // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null) && typeof window !== 'undefined' && 'ontouchstart' in window;\n  let interactionDescription = $cVkRF$useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n    let message = undefined;\n    if (shouldLongPress) message = formatMessage('longPressToSelect');\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, formatMessage, shouldLongPress]);\n  let descriptionProps = $cVkRF$useDescription(interactionDescription);\n  return descriptionProps;\n}\n\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref1) {\n  let {\n    isVirtualized: isVirtualized,\n    keyboardDelegate: keyboardDelegate,\n    focusMode: focusMode,\n    getRowText = key => {\n      var ref;\n      return (ref = state.collection.getItem(key)) === null || ref === void 0 ? void 0 : ref.textValue;\n    },\n    scrollRef: scrollRef,\n    onRowAction: onRowAction,\n    onCellAction: onCellAction\n  } = props;\n  let formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.'); // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = $cVkRF$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let delegate = $cVkRF$useMemo(() => keyboardDelegate || new $d1c300d9c497e402$export$de9feff04fda126e({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    focusMode: focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, focusMode]);\n  let {\n    collectionProps: collectionProps\n  } = $cVkRF$useSelectableCollection({\n    ref: ref1,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  });\n  let id = $cVkRF$useId();\n  $1af922eb41e03c8f$export$e6235c0d09b995d0.set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  let descriptionProps = $5b9b5b5723db6ae1$export$be42ebdab07ae4c2({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  let domProps = $cVkRF$filterDOMProps(props, {\n    labelable: true\n  });\n  let gridProps = $cVkRF$mergeProps(domProps, {\n    role: 'grid',\n    id: id,\n    'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n  }, collectionProps, descriptionProps);\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  } // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n\n\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = $cVkRF$useRef(selection);\n  $cVkRF$useUpdateEffect(() => {\n    var ref;\n\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n\n    let addedKeys = $83c6e2eafa584c67$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $83c6e2eafa584c67$var$diffSelection(lastSelection.current, selection); // If adding or removing a single row from the selection, announce the name of that item.\n\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(formatMessage('selectedItem', {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(formatMessage('selectedItem', {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(formatMessage('deselectedItem', {\n          item: removedText\n        }));\n      }\n    } // Announce how many items are selected, except when selecting the first item.\n\n\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || ((ref = lastSelection.current) === null || ref === void 0 ? void 0 : ref.size) > 1) messages.push(selection === 'all' ? formatMessage('selectedAll') : formatMessage('selectedCount', {\n        count: selection.size\n      }));\n    }\n\n    if (messages.length > 0) $cVkRF$announce(messages.join(' '));\n    lastSelection.current = selection;\n  }, [selection]);\n  return {\n    gridProps: gridProps\n  };\n}\n\nfunction $83c6e2eafa584c67$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === 'all' || b === 'all') return res;\n\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n\n  return res;\n}\n\nvar $e45487f8ba1cbdbf$exports = {};\n$parcel$export($e45487f8ba1cbdbf$exports, \"useGridRowGroup\", () => $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf);\n\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n\nvar $4159a7a9cbb0cc18$exports = {};\n$parcel$export($4159a7a9cbb0cc18$exports, \"useGridRow\", () => $4159a7a9cbb0cc18$export$96357d5a73f686fa);\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: {\n      onRowAction: onRowAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\n\nvar $ab90dcbc1b5466d0$exports = {};\n$parcel$export($ab90dcbc1b5466d0$exports, \"useGridCell\", () => $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c);\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let {\n    keyboardDelegate: keyboardDelegate,\n    actions: {\n      onCellAction: onCellAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state); // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n\n  let focus = () => {\n    let treeWalker = $cVkRF$getFocusableTreeWalker(ref.current);\n\n    if (focusMode === 'child') {\n      let focusable = state.selectionManager.childFocusStrategy === 'last' ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n\n      if (focusable) {\n        $cVkRF$focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) $cVkRF$focusSafely(ref.current);\n  };\n\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDown = e => {\n    if (!e.currentTarget.contains(e.target)) return;\n    let walker = $cVkRF$getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        {\n          // Find the next focusable element within the cell.\n          let focusable = direction === 'rtl' ? walker.nextNode() : walker.previousNode(); // Don't focus the cell itself if focusMode is \"child\"\n\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            let prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'rtl') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          let focusable = direction === 'rtl' ? walker.previousNode() : walker.nextNode();\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            let next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'ltr') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n\n        break;\n    }\n  }; // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n\n\n  let onFocus = e => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!$cVkRF$isFocusVisible()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    } // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n\n\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) focus();\n    });\n  };\n\n  let gridCellProps = $cVkRF$mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDown,\n    onFocus: onFocus\n  });\n  if (isVirtualized) gridCellProps['aria-colindex'] = node.index + 1; // aria-colindex is 1-based\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  let next;\n  let last;\n\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n\n  return next;\n}\n\nvar $7cb39d07f245a780$exports = {};\n$parcel$export($7cb39d07f245a780$exports, \"useGridSelectionCheckbox\", () => $7cb39d07f245a780$export$70e2eed1a92976ad);\n\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = $cVkRF$useId();\n  let isDisabled = state.disabledKeys.has(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': formatMessage('select'),\n      isSelected: isSelected,\n      isDisabled: isDisabled || manager.selectionMode === 'none',\n      onChange: onChange\n    }\n  };\n}\n\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox };","map":{"version":3,"mappings":"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","names":["$d1c300d9c497e402$export$de9feff04fda126e","isCell","node","type","isRow","findPreviousKey","fromKey","pred","key","collection","getKeyBefore","getLastKey","item","getItem","findNextKey","getKeyAfter","getFirstKey","getKeyBelow","startItem","parentKey","childNodes","index","focusMode","getKeyAbove","getKeyRightOf","children","direction","length","parent","next","getKeyLeftOf","prev","global","ref","current","querySelector","getItemRect","layout","getLayoutInfo","rect","$cVkRF$Rect","offsetLeft","offsetTop","offsetWidth","offsetHeight","getPageHeight","ref1","ref2","virtualizer","visibleRect","height","getContentHeight","ref3","getContentSize","scrollHeight","getKeyPageAbove","itemRect","pageY","Math","max","maxY","y","getKeyPageBelow","pageHeight","min","nextKey","getKeyForSearch","search","collator","hasWrapped","textValue","substring","slice","compare","options","disabledKeys","$1af922eb41e03c8f$export$e6235c0d09b995d0","WeakMap","$682989befd4f478d$exports","JSON","parse","$f7fca02019afd941$exports","$8f86f40be75387f1$exports","$db24ba43c8d652ee$exports","$f8f1e72c8b5447d6$exports","$9a73ed2983c3ab0b$exports","$583de0b3587601b9$exports","$147159c978043442$exports","$5cbb62c8a19173ac$exports","$a33d71dc804cc59e$exports","$92d800447793d084$exports","$fe732cdb32124ea8$exports","$e41234e934efb4f5$exports","$1b0393182473bf9e$exports","$2eed782c1c110ce7$exports","$8b5d459f86e9b23c$exports","$1949c3ad17295fd4$exports","$f5e3df4dc8aa7b54$exports","$9dd86690a5c2b2c5$exports","$843964c3bf9a7d24$exports","$73f50e845f9ef3b4$exports","$87f92a7e077514b2$exports","$c28c98d58ee9ff6f$exports","$b6b1503b17b2254d$exports","$8bdaeb71e50c3e1a$exports","$ec2b852dd7c3d1f2$exports","$79e6d900d6a4f82d$exports","$f4c1f0d5d4d03d80$exports","$46252cd87269b10b$exports","$d4d5d8dab362555c$exports","$3d55d1f97c377e83$exports","$5368512f1c703a3f$exports","$f1316b1074463583$exports","$7e60654723031b6f$exports","$1dbe5ffd32adb38c$exports","$5b9b5b5723db6ae1$export$be42ebdab07ae4c2","props","formatMessage","$cVkRF$useMessageFormatter","modality","$cVkRF$useInteractionModality","shouldLongPress","window","interactionDescription","$cVkRF$useMemo","selectionMode","selectionManager","selectionBehavior","message","undefined","hasItemActions","descriptionProps","$cVkRF$useDescription","$83c6e2eafa584c67$export$f6b86a04e5d66d90","state","isVirtualized","keyboardDelegate","getRowText","scrollRef","onRowAction","onCellAction","console","warn","$cVkRF$useCollator","usage","sensitivity","$cVkRF$useLocale","delegate","collectionProps","$cVkRF$useSelectableCollection","id","$cVkRF$useId","set","actions","domProps","$cVkRF$filterDOMProps","labelable","gridProps","$cVkRF$mergeProps","role","size","columnCount","selection","rawSelection","lastSelection","$cVkRF$useRef","$cVkRF$useUpdateEffect","isFocused","addedKeys","$83c6e2eafa584c67$var$diffSelection","removedKeys","isReplace","messages","selectedKeys","keys","value","currentSelectionText","push","addedText","removedText","count","$cVkRF$announce","join","a","b","res","Set","has","add","$e45487f8ba1cbdbf$export$d3037f5d3f3e51bf","rowGroupProps","$4159a7a9cbb0cc18$export$96357d5a73f686fa","shouldSelectOnPressUp","onAction","get","itemProps","isPressed","$cVkRF$useSelectableItem","isSelected","rowProps","$ab90dcbc1b5466d0$export$c7e10bfc0c59f67c","focus","treeWalker","$cVkRF$getFocusableTreeWalker","focusable","childFocusStrategy","$ab90dcbc1b5466d0$var$last","firstChild","$cVkRF$focusSafely","contains","document","activeElement","onKeyDown","e","currentTarget","target","walker","currentNode","nextNode","previousNode","preventDefault","stopPropagation","altKey","parentElement","dispatchEvent","KeyboardEvent","nativeEvent","onFocus","$cVkRF$isFocusVisible","setFocusedKey","requestAnimationFrame","gridCellProps","onKeyDownCapture","last","lastChild","$7cb39d07f245a780$export$70e2eed1a92976ad","manager","checkboxId","isDisabled","onChange","select","checkboxProps"],"sources":["C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\GridKeyboardDelegate.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\utils.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ar-AE.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\bg-BG.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\cs-CZ.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\da-DK.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\de-DE.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\el-GR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\en-US.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\es-ES.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\et-EE.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\fi-FI.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\fr-FR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\he-IL.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\hr-HR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\hu-HU.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\it-IT.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ja-JP.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ko-KR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\lt-LT.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\lv-LV.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\nb-NO.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\nl-NL.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pl-PL.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pt-BR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\pt-PT.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ro-RO.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\ru-RU.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sk-SK.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sl-SI.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sr-SP.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\sv-SE.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\tr-TR.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\uk-UA.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\zh-CN.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\zh-TW.json","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\intl\\*.js","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useHighlightSelectionDescription.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGrid.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRowGroup.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridRow.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridCell.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\grid\\dist\\packages\\@react-aria\\grid\\src\\useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useMemo} from 'react';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface UseHighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: UseHighlightSelectionDescriptionProps): AriaLabelingProps {\n  let formatMessage = useMessageFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = formatMessage('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, formatMessage, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaLabelingProps, DOMProps, KeyboardDelegate, Selection} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId, useUpdateEffect} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, Key, RefObject, useMemo, useRef} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useCollator, useLocale, useMessageFormatter} from '@react-aria/i18n';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    getRowText = (key) => state.collection.getItem(key)?.textValue,\n    scrollRef,\n    onRowAction,\n    onCellAction\n  } = props;\n  let formatMessage = useMessageFormatter(intlMessages);\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId();\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: HTMLAttributes<HTMLElement> = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(formatMessage('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(formatMessage('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(formatMessage('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? formatMessage('selectedAll')\n          : formatMessage('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n\n  return {\n    gridProps\n  };\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes} from 'react';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {Node} from '@react-types/shared';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: HTMLAttributes<HTMLElement>,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<HTMLElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: HTMLAttributes<HTMLElement> = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {Node as RSNode} from '@react-types/shared';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: RSNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\ninterface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: HTMLAttributes<HTMLElement>,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<HTMLElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as HTMLElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDown = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as HTMLElement\n          : walker.previousNode() as HTMLElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as HTMLElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as HTMLElement\n          : walker.nextNode() as HTMLElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as HTMLElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as HTMLElement)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: HTMLAttributes<HTMLElement> = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDown,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = node.index + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: HTMLElement;\n  let last: HTMLElement;\n  do {\n    last = walker.lastChild() as HTMLElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface SelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\ninterface SelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: SelectionCheckboxProps, state: GridState<T, C>): SelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = state.disabledKeys.has(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const formatMessage = useMessageFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': formatMessage('select'),\n      isSelected,\n      isDisabled: isDisabled || manager.selectionMode === 'none',\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}