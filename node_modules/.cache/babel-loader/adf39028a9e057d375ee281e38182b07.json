{"ast":null,"code":"import { useMemo as $1OhDq$useMemo, useRef as $1OhDq$useRef, useEffect as $1OhDq$useEffect } from \"react\";\nimport { useOverlayTriggerState as $1OhDq$useOverlayTriggerState } from \"@react-stately/overlays\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $8796f90736e175cb$exports = {};\n$parcel$export($8796f90736e175cb$exports, \"useTooltipTriggerState\", () => $8796f90736e175cb$export$4d40659c25ecb50b);\nconst $8796f90736e175cb$var$TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\n\nconst $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;\nlet $8796f90736e175cb$var$tooltips = {};\nlet $8796f90736e175cb$var$tooltipId = 0;\nlet $8796f90736e175cb$var$globalWarmedUp = false;\nlet $8796f90736e175cb$var$globalWarmUpTimeout = null;\nlet $8796f90736e175cb$var$globalCooldownTimeout = null;\n\nfunction $8796f90736e175cb$export$4d40659c25ecb50b() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    delay = $8796f90736e175cb$var$TOOLTIP_DELAY\n  } = props;\n  let {\n    isOpen: isOpen,\n    open: open,\n    close: close\n  } = $1OhDq$useOverlayTriggerState(props);\n  let id = $1OhDq$useMemo(() => `${++$8796f90736e175cb$var$tooltipId}`, []);\n  let closeTimeout = $1OhDq$useRef();\n\n  let ensureTooltipEntry = () => {\n    $8796f90736e175cb$var$tooltips[id] = hideTooltip;\n  };\n\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in $8796f90736e175cb$var$tooltips) if (hideTooltipId !== id) {\n      $8796f90736e175cb$var$tooltips[hideTooltipId](true);\n      delete $8796f90736e175cb$var$tooltips[hideTooltipId];\n    }\n  };\n\n  let showTooltip = () => {\n    clearTimeout(closeTimeout.current);\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    $8796f90736e175cb$var$globalWarmedUp = true;\n    open();\n\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n\n    if ($8796f90736e175cb$var$globalCooldownTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = null;\n    }\n  };\n\n  let hideTooltip = immediate => {\n    if (immediate) {\n      clearTimeout(closeTimeout.current);\n      closeTimeout.current = null;\n      close();\n    } else if (!closeTimeout.current) closeTimeout.current = setTimeout(() => {\n      closeTimeout.current = null;\n      close();\n    }, $8796f90736e175cb$var$TOOLTIP_COOLDOWN);\n\n    if ($8796f90736e175cb$var$globalWarmUpTimeout) {\n      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n    }\n\n    if ($8796f90736e175cb$var$globalWarmedUp) {\n      if ($8796f90736e175cb$var$globalCooldownTimeout) clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);\n      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {\n        delete $8796f90736e175cb$var$tooltips[id];\n        $8796f90736e175cb$var$globalCooldownTimeout = null;\n        $8796f90736e175cb$var$globalWarmedUp = false;\n      }, $8796f90736e175cb$var$TOOLTIP_COOLDOWN);\n    }\n  };\n\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp) $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {\n      $8796f90736e175cb$var$globalWarmUpTimeout = null;\n      $8796f90736e175cb$var$globalWarmedUp = true;\n      showTooltip();\n    }, delay);else if (!isOpen) showTooltip();\n  }; // eslint-disable-next-line arrow-body-style\n\n\n  $1OhDq$useEffect(() => {\n    return () => {\n      clearTimeout(closeTimeout.current);\n      let tooltip = $8796f90736e175cb$var$tooltips[id];\n      if (tooltip) delete $8796f90736e175cb$var$tooltips[id];\n    };\n  }, [id]);\n  return {\n    isOpen: isOpen,\n    open: immediate => {\n      if (!immediate && delay > 0 && !closeTimeout.current) warmupTooltip();else showTooltip();\n    },\n    close: hideTooltip\n  };\n}\n\nexport { $8796f90736e175cb$export$4d40659c25ecb50b as useTooltipTriggerState };","map":{"version":3,"mappings":"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","names":["$8796f90736e175cb$var$TOOLTIP_DELAY","$8796f90736e175cb$var$TOOLTIP_COOLDOWN","$8796f90736e175cb$var$tooltips","$8796f90736e175cb$var$tooltipId","$8796f90736e175cb$var$globalWarmedUp","$8796f90736e175cb$var$globalWarmUpTimeout","$8796f90736e175cb$var$globalCooldownTimeout","$8796f90736e175cb$export$4d40659c25ecb50b","props","delay","isOpen","open","close","$1OhDq$useOverlayTriggerState","id","$1OhDq$useMemo","closeTimeout","$1OhDq$useRef","ensureTooltipEntry","hideTooltip","closeOpenTooltips","hideTooltipId","showTooltip","clearTimeout","current","immediate","setTimeout","warmupTooltip","$1OhDq$useEffect","tooltip"],"sources":["C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-stately\\tooltip\\dist\\packages\\@react-stately\\tooltip\\src\\useTooltipTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {useEffect, useMemo, useRef} from 'react';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\n\nconst TOOLTIP_DELAY = 1500; // this seems to be a 1.5 second delay, check with design\nconst TOOLTIP_COOLDOWN = 500;\n\nexport interface TooltipTriggerState {\n  /** Whether the tooltip is currently showing. */\n  isOpen: boolean,\n  /**\n   * Shows the tooltip. By default, the tooltip becomes visible after a delay\n   * depending on a global warmup timer. The `immediate` option shows the\n   * tooltip immediately instead.\n   */\n  open(immediate?: boolean): void,\n  /** Hides the tooltip. */\n  close(immediate?: boolean): void\n}\n\nlet tooltips = {};\nlet tooltipId = 0;\nlet globalWarmedUp = false;\nlet globalWarmUpTimeout = null;\nlet globalCooldownTimeout = null;\n\n/**\n * Manages state for a tooltip trigger. Tracks whether the tooltip is open, and provides\n * methods to toggle this state. Ensures only one tooltip is open at a time and controls\n * the delay for showing a tooltip.\n */\nexport function useTooltipTriggerState(props: TooltipTriggerProps = {}): TooltipTriggerState {\n  let {delay = TOOLTIP_DELAY} = props;\n  let {isOpen, open, close} = useOverlayTriggerState(props);\n  let id = useMemo(() => `${++tooltipId}`, []);\n  let closeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  let ensureTooltipEntry = () => {\n    tooltips[id] = hideTooltip;\n  };\n\n  let closeOpenTooltips = () => {\n    for (let hideTooltipId in tooltips) {\n      if (hideTooltipId !== id) {\n        tooltips[hideTooltipId](true);\n        delete tooltips[hideTooltipId];\n      }\n    }\n  };\n\n  let showTooltip = () => {\n    clearTimeout(closeTimeout.current);\n    closeTimeout.current = null;\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    globalWarmedUp = true;\n    open();\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalCooldownTimeout) {\n      clearTimeout(globalCooldownTimeout);\n      globalCooldownTimeout = null;\n    }\n  };\n\n  let hideTooltip = (immediate?: boolean) => {\n    if (immediate) {\n      clearTimeout(closeTimeout.current);\n      closeTimeout.current = null;\n      close();\n    } else if (!closeTimeout.current) {\n      closeTimeout.current = setTimeout(() => {\n        closeTimeout.current = null;\n        close();\n      }, TOOLTIP_COOLDOWN);\n    }\n\n    if (globalWarmUpTimeout) {\n      clearTimeout(globalWarmUpTimeout);\n      globalWarmUpTimeout = null;\n    }\n    if (globalWarmedUp) {\n      if (globalCooldownTimeout) {\n        clearTimeout(globalCooldownTimeout);\n      }\n      globalCooldownTimeout = setTimeout(() => {\n        delete tooltips[id];\n        globalCooldownTimeout = null;\n        globalWarmedUp = false;\n      }, TOOLTIP_COOLDOWN);\n    }\n  };\n\n  let warmupTooltip = () => {\n    closeOpenTooltips();\n    ensureTooltipEntry();\n    if (!isOpen && !globalWarmUpTimeout && !globalWarmedUp) {\n      globalWarmUpTimeout = setTimeout(() => {\n        globalWarmUpTimeout = null;\n        globalWarmedUp = true;\n        showTooltip();\n      }, delay);\n    } else if (!isOpen) {\n      showTooltip();\n    }\n  };\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(closeTimeout.current);\n      let tooltip = tooltips[id];\n      if (tooltip) {\n        delete tooltips[id];\n      }\n    };\n  }, [id]);\n\n  return {\n    isOpen,\n    open: (immediate) => {\n      if (!immediate && delay > 0 && !closeTimeout.current) {\n        warmupTooltip();\n      } else {\n        showTooltip();\n      }\n    },\n    close: hideTooltip\n  };\n}\n"]},"metadata":{},"sourceType":"module"}