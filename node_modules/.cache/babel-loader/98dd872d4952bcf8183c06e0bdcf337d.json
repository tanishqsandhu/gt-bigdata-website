{"ast":null,"code":"import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useCallback as $iFADg$useCallback, useRef as $iFADg$useRef } from \"react\";\nimport { useIsSSR as $iFADg$useIsSSR } from \"@react-aria/ssr\";\nimport { MessageDictionary as $iFADg$MessageDictionary, MessageFormatter as $iFADg$MessageFormatter } from \"@internationalized/message\";\nimport { DateFormatter as $iFADg$DateFormatter } from \"@internationalized/date\";\nimport { NumberFormatter as $iFADg$NumberFormatter } from \"@internationalized/number\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $18f2051aff69b9bf$exports = {};\n$parcel$export($18f2051aff69b9bf$exports, \"I18nProvider\", () => $18f2051aff69b9bf$export$a54013f0d02a8f82);\n$parcel$export($18f2051aff69b9bf$exports, \"useLocale\", () => $18f2051aff69b9bf$export$43bb16f9c6d9e3f7);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n// https://en.wikipedia.org/wiki/Right-to-left\n\nconst $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(locale) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);\n  } // If not, just guess by the language (first part of the locale)\n\n\n  let lang = locale.split('-')[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\n\nfunction $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {\n  // @ts-ignore\n  let locale = typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage) || 'en-US';\n  return {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\nlet $1e5a04cdaf7d1af8$var$listeners = new Set();\n\nfunction $1e5a04cdaf7d1af8$var$updateLocale() {\n  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\n\n  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);\n}\n\nfunction $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {\n  let isSSR = $iFADg$useIsSSR();\n  let [defaultLocale, setDefaultLocale] = $iFADg$useState($1e5a04cdaf7d1af8$var$currentLocale);\n  $iFADg$useEffect(() => {\n    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);\n    return () => {\n      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);\n      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener('languagechange', $1e5a04cdaf7d1af8$var$updateLocale);\n    };\n  }, []); // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n\n  if (isSSR) return {\n    locale: 'en-US',\n    direction: 'ltr'\n  };\n  return defaultLocale;\n}\n\nconst $18f2051aff69b9bf$var$I18nContext = /*#__PURE__*/$iFADg$react.createContext(null);\n\nfunction $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {\n  let {\n    locale: locale,\n    children: children\n  } = props;\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let value = locale ? {\n    locale: locale,\n    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n  return /*#__PURE__*/$iFADg$react.createElement($18f2051aff69b9bf$var$I18nContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {\n  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();\n  let context = $iFADg$useContext($18f2051aff69b9bf$var$I18nContext);\n  return context || defaultLocale;\n}\n\nvar $321bc95feeb923dd$exports = {};\n$parcel$export($321bc95feeb923dd$exports, \"useMessageFormatter\", () => $321bc95feeb923dd$export$ec23bf898b1eed85);\nconst $321bc95feeb923dd$var$cache = new WeakMap();\n\nfunction $321bc95feeb923dd$var$getCachedDictionary(strings) {\n  let dictionary = $321bc95feeb923dd$var$cache.get(strings);\n\n  if (!dictionary) {\n    dictionary = new $iFADg$MessageDictionary(strings);\n    $321bc95feeb923dd$var$cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\nfunction $321bc95feeb923dd$export$ec23bf898b1eed85(strings) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let dictionary = $iFADg$useMemo(() => $321bc95feeb923dd$var$getCachedDictionary(strings), [strings]);\n  let formatter = $iFADg$useMemo(() => new $iFADg$MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return $iFADg$useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n\nvar $896ba0a80a8f4d36$exports = {};\n$parcel$export($896ba0a80a8f4d36$exports, \"useDateFormatter\", () => $896ba0a80a8f4d36$export$85fd5fdf27bacc79);\n\nfunction $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = $iFADg$useRef(null);\n  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current)) options = lastOptions.current;\n  lastOptions.current = options;\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$DateFormatter(locale, options), [locale, options]);\n}\n\nfunction $896ba0a80a8f4d36$var$isEqual(a, b) {\n  if (a === b) return true;\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) return false;\n  }\n\n  return true;\n}\n\nvar $a916eb452884faea$exports = {};\n$parcel$export($a916eb452884faea$exports, \"useNumberFormatter\", () => $a916eb452884faea$export$b7a616150fdb9f44);\n\nfunction $a916eb452884faea$export$b7a616150fdb9f44() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  return $iFADg$useMemo(() => new $iFADg$NumberFormatter(locale, options), [locale, options]);\n}\n\nvar $325a3faab7a68acd$exports = {};\n$parcel$export($325a3faab7a68acd$exports, \"useCollator\", () => $325a3faab7a68acd$export$a16aca283550c30d);\nlet $325a3faab7a68acd$var$cache = new Map();\n\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  let {\n    locale: locale\n  } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  let formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\n\nvar $bb77f239b46e8c72$exports = {};\n$parcel$export($bb77f239b46e8c72$exports, \"useFilter\", () => $bb77f239b46e8c72$export$3274cf84b703fff);\n\nfunction $bb77f239b46e8c72$export$3274cf84b703fff(options) {\n  let collator = $325a3faab7a68acd$export$a16aca283550c30d({\n    usage: 'search',\n    ...options\n  }); // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) return true; // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n\n    endsWith(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n\n    contains(string, substring) {\n      if (substring.length === 0) return true;\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      let scan = 0;\n      let sliceLen = substring.length;\n\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) return true;\n      }\n\n      return false;\n    }\n\n  };\n}\n\nexport { $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale, $321bc95feeb923dd$export$ec23bf898b1eed85 as useMessageFormatter, $896ba0a80a8f4d36$export$85fd5fdf27bacc79 as useDateFormatter, $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter, $325a3faab7a68acd$export$a16aca283550c30d as useCollator, $bb77f239b46e8c72$export$3274cf84b703fff as useFilter };","map":{"version":3,"mappings":"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","names":["$148a7a147e38ea7f$var$RTL_SCRIPTS","Set","$148a7a147e38ea7f$var$RTL_LANGS","$148a7a147e38ea7f$export$702d680b21cbd764","locale","Intl","Locale","script","maximize","has","lang","split","$1e5a04cdaf7d1af8$export$f09106e7c6677ec5","navigator","language","userLanguage","direction","$1e5a04cdaf7d1af8$var$currentLocale","$1e5a04cdaf7d1af8$var$listeners","$1e5a04cdaf7d1af8$var$updateLocale","listener","$1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a","isSSR","$iFADg$useIsSSR","defaultLocale","setDefaultLocale","$iFADg$useState","$iFADg$useEffect","size","window","addEventListener","add","delete","removeEventListener","$18f2051aff69b9bf$var$I18nContext","$iFADg$react","createContext","$18f2051aff69b9bf$export$a54013f0d02a8f82","props","children","value","Provider","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","context","$iFADg$useContext","$321bc95feeb923dd$var$cache","WeakMap","$321bc95feeb923dd$var$getCachedDictionary","strings","dictionary","get","$iFADg$MessageDictionary","set","$321bc95feeb923dd$export$ec23bf898b1eed85","$iFADg$useMemo","formatter","$iFADg$MessageFormatter","$iFADg$useCallback","key","variables","format","$896ba0a80a8f4d36$export$85fd5fdf27bacc79","options","lastOptions","$iFADg$useRef","current","$896ba0a80a8f4d36$var$isEqual","$iFADg$DateFormatter","a","b","aKeys","Object","keys","bKeys","length","$a916eb452884faea$export$b7a616150fdb9f44","$iFADg$NumberFormatter","$325a3faab7a68acd$var$cache","Map","$325a3faab7a68acd$export$a16aca283550c30d","cacheKey","entries","sort","join","Collator","$bb77f239b46e8c72$export$3274cf84b703fff","collator","usage","startsWith","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"sources":["C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\utils.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useDefaultLocale.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\context.tsx","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useMessageFormatter.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useDateFormatter.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useNumberFormatter.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useCollator.ts","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useFilter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\ninterface ProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: ProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedStrings, MessageDictionary, MessageFormatter} from '@internationalized/message';\nimport {useCallback, useMemo} from 'react';\nimport {useLocale} from './context';\n\ntype FormatMessage = (key: string, variables?: {[key: string]: any}) => string;\n\nconst cache = new WeakMap();\nfunction getCachedDictionary(strings: LocalizedStrings) {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new MessageDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Handles formatting ICU Message strings to create localized strings for the current locale.\n * Automatically updates when the locale changes, and handles caching of messages for performance.\n * @param strings - A mapping of languages to strings by key.\n */\nexport function useMessageFormatter(strings: LocalizedStrings): FormatMessage {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  let formatter = useMemo(() => new MessageFormatter(locale, dictionary), [locale, dictionary]);\n  return useCallback((key, variables) => formatter.format(key, variables), [formatter]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\ninterface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCollator} from './useCollator';\n\ninterface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n\n  return {\n    startsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      // Normalize both strings so we can slice safely\n      // TODO: take into account the ignorePunctuation option as well...\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(0, substring.length), substring) === 0;\n    },\n    endsWith(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n      return collator.compare(string.slice(-substring.length), substring) === 0;\n    },\n    contains(string, substring) {\n      if (substring.length === 0) {\n        return true;\n      }\n\n      string = string.normalize('NFC');\n      substring = substring.normalize('NFC');\n\n      let scan = 0;\n      let sliceLen = substring.length;\n      for (; scan + sliceLen <= string.length; scan++) {\n        let slice = string.slice(scan, scan + sliceLen);\n        if (collator.compare(substring, slice) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}