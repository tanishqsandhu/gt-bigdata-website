{"ast":null,"code":"import \"./main.css\";\nimport { useStyleProps as $eGwyD$useStyleProps, useFocusableRef as $eGwyD$useFocusableRef, classNames as $eGwyD$classNames } from \"@react-spectrum/utils\";\nimport { FocusRing as $eGwyD$FocusRing } from \"@react-aria/focus\";\nimport $eGwyD$react, { useRef as $eGwyD$useRef, forwardRef as $eGwyD$forwardRef } from \"react\";\nimport { useHover as $eGwyD$useHover } from \"@react-aria/interactions\";\nimport { useProviderProps as $eGwyD$useProviderProps } from \"@react-spectrum/provider\";\nimport { useSwitch as $eGwyD$useSwitch } from \"@react-aria/switch\";\nimport { useToggleState as $eGwyD$useToggleState } from \"@react-stately/toggle\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $ceb92c6cc404b1a5$exports = {};\n$parcel$export($ceb92c6cc404b1a5$exports, \"Switch\", () => $ceb92c6cc404b1a5$export$b5d5cf8927ab7262);\nvar $f57785370c8eb19b$exports = {};\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch\", () => $f57785370c8eb19b$export$89a9162656c0c38c, v => $f57785370c8eb19b$export$89a9162656c0c38c = v);\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch-input\", () => $f57785370c8eb19b$export$38df7ea4ffef819a, v => $f57785370c8eb19b$export$38df7ea4ffef819a = v);\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch-switch\", () => $f57785370c8eb19b$export$b82d06d1b520a22f, v => $f57785370c8eb19b$export$b82d06d1b520a22f = v);\n$parcel$export($f57785370c8eb19b$exports, \"focus-ring\", () => $f57785370c8eb19b$export$f39a09f249340e2a, v => $f57785370c8eb19b$export$f39a09f249340e2a = v);\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch-label\", () => $f57785370c8eb19b$export$8f1a69021a3897b2, v => $f57785370c8eb19b$export$8f1a69021a3897b2 = v);\n$parcel$export($f57785370c8eb19b$exports, \"is-hovered\", () => $f57785370c8eb19b$export$b8813cd5d7824ce7, v => $f57785370c8eb19b$export$b8813cd5d7824ce7 = v);\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch--quiet\", () => $f57785370c8eb19b$export$ce1b1dcfc10f3df4, v => $f57785370c8eb19b$export$ce1b1dcfc10f3df4 = v);\n$parcel$export($f57785370c8eb19b$exports, \"spectrum-ToggleSwitch--ab\", () => $f57785370c8eb19b$export$dc5a33fddabf5882, v => $f57785370c8eb19b$export$dc5a33fddabf5882 = v);\nvar $f57785370c8eb19b$export$89a9162656c0c38c;\nvar $f57785370c8eb19b$export$38df7ea4ffef819a;\nvar $f57785370c8eb19b$export$b82d06d1b520a22f;\nvar $f57785370c8eb19b$export$f39a09f249340e2a;\nvar $f57785370c8eb19b$export$8f1a69021a3897b2;\nvar $f57785370c8eb19b$export$b8813cd5d7824ce7;\nvar $f57785370c8eb19b$export$ce1b1dcfc10f3df4;\nvar $f57785370c8eb19b$export$dc5a33fddabf5882;\n$f57785370c8eb19b$export$89a9162656c0c38c = \"spectrum-ToggleSwitch_3526dd\";\n$f57785370c8eb19b$export$38df7ea4ffef819a = \"spectrum-ToggleSwitch-input_3526dd\";\n$f57785370c8eb19b$export$b82d06d1b520a22f = \"spectrum-ToggleSwitch-switch_3526dd\";\n$f57785370c8eb19b$export$f39a09f249340e2a = \"focus-ring_3526dd\";\n$f57785370c8eb19b$export$8f1a69021a3897b2 = \"spectrum-ToggleSwitch-label_3526dd\";\n$f57785370c8eb19b$export$b8813cd5d7824ce7 = \"is-hovered_3526dd\";\n$f57785370c8eb19b$export$ce1b1dcfc10f3df4 = \"spectrum-ToggleSwitch--quiet_3526dd\";\n$f57785370c8eb19b$export$dc5a33fddabf5882 = \"spectrum-ToggleSwitch--ab_3526dd\";\n\nfunction $ceb92c6cc404b1a5$var$Switch(props, ref) {\n  props = $eGwyD$useProviderProps(props);\n  let {\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus: autoFocus,\n    children: children,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $eGwyD$useStyleProps(otherProps);\n  let {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  } = $eGwyD$useHover({\n    isDisabled: isDisabled\n  });\n  let inputRef = $eGwyD$useRef(null);\n  let domRef = $eGwyD$useFocusableRef(ref, inputRef);\n  let state = $eGwyD$useToggleState(props);\n  let {\n    inputProps: inputProps\n  } = $eGwyD$useSwitch(props, state, inputRef);\n  return /*#__PURE__*/$eGwyD$react.createElement(\"label\", { ...styleProps,\n    ...hoverProps,\n    ref: domRef,\n    className: $eGwyD$classNames( /*@__PURE__*/$parcel$interopDefault($f57785370c8eb19b$exports), 'spectrum-ToggleSwitch', {\n      'spectrum-ToggleSwitch--quiet': !isEmphasized,\n      'is-disabled': isDisabled,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }, /*#__PURE__*/$eGwyD$react.createElement($eGwyD$FocusRing, {\n    focusRingClass: $eGwyD$classNames( /*@__PURE__*/$parcel$interopDefault($f57785370c8eb19b$exports), 'focus-ring'),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/$eGwyD$react.createElement(\"input\", { ...inputProps,\n    ref: inputRef,\n    className: $eGwyD$classNames( /*@__PURE__*/$parcel$interopDefault($f57785370c8eb19b$exports), 'spectrum-ToggleSwitch-input')\n  })), /*#__PURE__*/$eGwyD$react.createElement(\"span\", {\n    className: $eGwyD$classNames( /*@__PURE__*/$parcel$interopDefault($f57785370c8eb19b$exports), 'spectrum-ToggleSwitch-switch')\n  }), children && /*#__PURE__*/$eGwyD$react.createElement(\"span\", {\n    className: $eGwyD$classNames( /*@__PURE__*/$parcel$interopDefault($f57785370c8eb19b$exports), 'spectrum-ToggleSwitch-label')\n  }, children));\n}\n/**\n * Switches allow users to turn an individual option on or off.\n * They are usually used to activate or deactivate a specific setting.\n */\n\n\nconst $ceb92c6cc404b1a5$export$b5d5cf8927ab7262 = /*#__PURE__*/$eGwyD$forwardRef($ceb92c6cc404b1a5$var$Switch);\nexport { $ceb92c6cc404b1a5$export$b5d5cf8927ab7262 as Switch };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAuCA,yCAAvC;AACA,IAA6CC,yCAA7C;AACA,IAA8CC,yCAA9C;AACA,IAA4BC,yCAA5B;AACA,IAA6CC,yCAA7C;AACA,IAA4BC,yCAA5B;AACA,IAA8CC,yCAA9C;AACA,IAA2CC,yCAA3C;AAPAP,yCAAuC,GAAG,8BAA1C;AACAC,yCAA6C,GAAG,oCAAhD;AACAC,yCAA8C,GAAG,qCAAjD;AACAC,yCAA4B,GAAG,mBAA/B;AACAC,yCAA6C,GAAG,oCAAhD;AACAC,yCAA4B,GAAG,mBAA/B;AACAC,yCAA8C,GAAG,qCAAjD;AACAC,yCAA2C,GAAG,kCAA9C;;SCgBSC,6BAAOC,OAA4BC,KAAqC;AAC/ED,OAAK,GAAGE,uBAAgB,CAACF,KAAD,CAAxB;AACA,MAAI;AACFG,gBAAY,GAAG,KADb;AAEFC,cAAU,GAAG,KAFX;AAEgBC,eAClBA,SAHE;AAGOC,cACTA,QAJE;AAIM,OACLC;AALD,MAMAP,KANJ;AAOA,MAAI;AAACQ;AAAD,MAAeC,oBAAa,CAACF,UAAD,CAAhC;AACA,MAAI;AAACG,0BAAD;AAAWC,eAAEA;AAAb,MAA0BC,eAAQ,CAAC;gBAACR;AAAD,GAAD,CAAtC;AAEA,MAAIS,QAAQ,GAAGC,aAAM,CAAmB,IAAnB,CAArB;AACA,MAAIC,MAAM,GAAGC,sBAAe,CAACf,GAAD,EAAMY,QAAN,CAA5B;AACA,MAAII,KAAK,GAAGC,qBAAc,CAAClB,KAAD,CAA1B;AACA,MAAI;AAACmB;AAAD,MAAeC,gBAAS,CAACpB,KAAD,EAAQiB,KAAR,EAAeJ,QAAf,CAA5B;AAGA,SAAM,wCACH,OADG,EACE,KACAL,UADA;OAEAE,UAFA;AAGJT,OAAG,EAAEc,MAHD;AAIJM,aAAS,EACPC,iBAAU,EACR,8DADQ,EAER,uBAFQ,EAGR;AACE,sCAA8B,CAAGnB,YADnC;AAEE,qBAAeC,UAFjB;AAGE,oBAAcO;AAHhB,KAHQ,EAQRH,UAAU,CAACa,SARH;AALR,GADF,0CAiBDE,kBAAS;AAACC,kBAAc,EAAEF,iBAAU,EAAC,8DAAD,EAAS,YAAT,CAA3B;AAAmDjB,aAAS,EAAEA;AAA9D,6CACP,SAAK,KACAc,UADA;AAEJlB,OAAG,EAAEY,QAFD;AAGJQ,aAAS,EAAEC,iBAAU,EAAC,8DAAD,EAAS,6BAAT;AAHjB,KAlBN,0CAuBD,QAAI;AAACD,aAAS,EAAEC,iBAAU,EAAC,8DAAD,EAAS,8BAAT;AAAtB,IAvBH,EAwBDhB,QAAQ,4CACN,MADM,EACF;AAACe,aAAS,EAAEC,iBAAU,EAAC,8DAAD,EAAS,6BAAT;AAAtB,GADE,EAEJhB,QAFI,CAxBP,CAAN;AA+BD;AAED;;;;;;AAIA,MAAMmB,yCAAO,gBAAGC,iBAAU,CAAC3B,4BAAD,CAA1B","names":["$f57785370c8eb19b$export$89a9162656c0c38c","$f57785370c8eb19b$export$38df7ea4ffef819a","$f57785370c8eb19b$export$b82d06d1b520a22f","$f57785370c8eb19b$export$f39a09f249340e2a","$f57785370c8eb19b$export$8f1a69021a3897b2","$f57785370c8eb19b$export$b8813cd5d7824ce7","$f57785370c8eb19b$export$ce1b1dcfc10f3df4","$f57785370c8eb19b$export$dc5a33fddabf5882","$ceb92c6cc404b1a5$var$Switch","props","ref","$eGwyD$useProviderProps","isEmphasized","isDisabled","autoFocus","children","otherProps","styleProps","$eGwyD$useStyleProps","hoverProps","isHovered","$eGwyD$useHover","inputRef","$eGwyD$useRef","domRef","$eGwyD$useFocusableRef","state","$eGwyD$useToggleState","inputProps","$eGwyD$useSwitch","className","$eGwyD$classNames","$eGwyD$FocusRing","focusRingClass","$ceb92c6cc404b1a5$export$b5d5cf8927ab7262","$eGwyD$forwardRef"],"sources":["/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/switch/dist/packages/@adobe/spectrum-css-temp/components/toggle/vars.css","/Users/asattiraju/Desktop/Big data/gt-bigdata-website/node_modules/@react-spectrum/switch/dist/packages/@react-spectrum/switch/src/Switch.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useRef} from 'react';\nimport {SpectrumSwitchProps} from '@react-types/switch';\nimport styles from '@adobe/spectrum-css-temp/components/toggle/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useSwitch} from '@react-aria/switch';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Switch(props: SpectrumSwitchProps, ref: FocusableRef<HTMLLabelElement>) {\n  props = useProviderProps(props);\n  let {\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n  let state = useToggleState(props);\n  let {inputProps} = useSwitch(props, state, inputRef);\n\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-ToggleSwitch',\n          {\n            'spectrum-ToggleSwitch--quiet': !isEmphasized,\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-ToggleSwitch-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-ToggleSwitch-switch')} />\n      {children && (\n        <span className={classNames(styles, 'spectrum-ToggleSwitch-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n\n/**\n * Switches allow users to turn an individual option on or off.\n * They are usually used to activate or deactivate a specific setting.\n */\nconst _Switch = forwardRef(Switch);\nexport {_Switch as Switch};\n"]},"metadata":{},"sourceType":"module"}