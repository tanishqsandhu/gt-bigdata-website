{"ast":null,"code":"import \"./main.css\";\nimport { useSlotProps as $9XFMV$useSlotProps, useStyleProps as $9XFMV$useStyleProps, useDOMRef as $9XFMV$useDOMRef, classNames as $9XFMV$classNames } from \"@react-spectrum/utils\";\nimport { filterDOMProps as $9XFMV$filterDOMProps } from \"@react-aria/utils\";\nimport $9XFMV$react from \"react\";\nimport { useProviderProps as $9XFMV$useProviderProps } from \"@react-spectrum/provider\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $77e0ac4d4aa3e5ef$exports = {};\n$parcel$export($77e0ac4d4aa3e5ef$exports, \"Image\", () => $77e0ac4d4aa3e5ef$export$3e431a229df88919);\nvar $cf2f2ea6e1c0495a$exports = {};\n$parcel$export($cf2f2ea6e1c0495a$exports, \"spectrum-Image-img\", () => $cf2f2ea6e1c0495a$export$3238177972e11200, v => $cf2f2ea6e1c0495a$export$3238177972e11200 = v);\nvar $cf2f2ea6e1c0495a$export$3238177972e11200;\n$cf2f2ea6e1c0495a$export$3238177972e11200 = \"spectrum-Image-img_fdc794\"; // incomplete component for show right now\n\nfunction $77e0ac4d4aa3e5ef$var$Image(props, ref) {\n  /* Slots should be able to pass an alt for default behavior, but in Images, the child may know better. */\n  let userProvidedAlt = props.alt;\n  props = $9XFMV$useSlotProps(props, 'image');\n  props = $9XFMV$useProviderProps(props);\n  let {\n    objectFit: objectFit,\n    src: src,\n    alt: alt,\n    ...otherProps\n  } = props;\n  let {\n    styleProps: styleProps\n  } = $9XFMV$useStyleProps(otherProps);\n  let domRef = $9XFMV$useDOMRef(ref);\n  if (alt == null) console.warn(\"The `alt` prop was not provided to an image. Add `alt` text for screen readers, or set `alt=\\\"\\\"` prop to indicate that the image is decorative or redundant with displayed text and should not be announced by screen readers.\");\n  return /*#__PURE__*/$9XFMV$react.createElement(\"div\", { ...$9XFMV$filterDOMProps(props),\n    ...styleProps,\n    className: $9XFMV$classNames( /*@__PURE__*/$parcel$interopDefault($cf2f2ea6e1c0495a$exports), styleProps.className),\n    style: { ...styleProps.style,\n      overflow: 'hidden'\n    },\n    ref: domRef\n  }, /*#__PURE__*/$9XFMV$react.createElement(\"img\", {\n    src: src,\n    alt: userProvidedAlt || alt,\n    style: {\n      objectFit: objectFit\n    },\n    className: $9XFMV$classNames( /*@__PURE__*/$parcel$interopDefault($cf2f2ea6e1c0495a$exports), 'spectrum-Image-img')\n  }));\n}\n/**\n * Image is used to insert and display an image within a component.\n */\n\n\nconst $77e0ac4d4aa3e5ef$export$3e431a229df88919 = /*#__PURE__*/$9XFMV$react.forwardRef($77e0ac4d4aa3e5ef$var$Image);\nexport { $77e0ac4d4aa3e5ef$export$3e431a229df88919 as Image };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAoCA,yCAApC;AAAAA,yCAAoC,GAAG,2BAAvC,C,CCoBA;;SAESC,4BAAMC,OAA2BC,KAA6B;AACrE;AACA,MAAIC,eAAe,GAAGF,KAAK,CAACG,GAA5B;AACAH,OAAK,GAAGI,mBAAY,CAACJ,KAAD,EAAQ,OAAR,CAApB;AACAA,OAAK,GAAGK,uBAAgB,CAACL,KAAD,CAAxB;AACA,MAAI;AAACM,eACHA,SADE;AACOC,SACTA,GAFE;AAECJ,SACHA,GAHE;AAGC,OACAK;AAJD,MAKAR,KALJ;AAMA,MAAI;AAACS;AAAD,MAAeC,oBAAa,CAACF,UAAD,CAAhC;AACA,MAAIG,MAAM,GAAGC,gBAAS,CAACX,GAAD,CAAtB;AAEA,MAAIE,GAAG,IAAI,IAAX,EACEU,OAAO,CAACC,IAAR,CACE,iOADF;AAOF,SAAM,wCACH,KADG,EACA,KACEC,qBAAc,CAACf,KAAD,CADhB;OAEES,UAFF;AAGFO,aAAS,EAAEC,iBAAU,EAAC,8DAAD,EAASR,UAAU,CAACO,SAApB,CAHnB;AAIFE,SAAK,EAAE,KACFT,UAAU,CAACS,KADT;AAELC,cAAQ,EAAE;AAFL,KAJL;AAQFlB,OAAG,EAAEU;AARH,GADA,0CAUD,OAAG;AACFJ,OAAG,EAAEA,GADH;AAEFJ,OAAG,EAAED,eAAe,IAAIC,GAFtB;AAGFe,SAAK,EAAE;iBAACZ;AAAD,KAHL;AAIFU,aAAS,EAAEC,iBAAU,EAAC,8DAAD,EAAS,oBAAT;AAJnB,IAVF,CAAN;AAiBD;AAED;;;;;AAGA,MAAMG,yCAAM,gBAAGC,YAAK,CAACC,UAAN,CAAiBvB,2BAAjB,CAAf","names":["$cf2f2ea6e1c0495a$export$3238177972e11200","$77e0ac4d4aa3e5ef$var$Image","props","ref","userProvidedAlt","alt","$9XFMV$useSlotProps","$9XFMV$useProviderProps","objectFit","src","otherProps","styleProps","$9XFMV$useStyleProps","domRef","$9XFMV$useDOMRef","console","warn","$9XFMV$filterDOMProps","className","$9XFMV$classNames","style","overflow","$77e0ac4d4aa3e5ef$export$3e431a229df88919","$9XFMV$react","forwardRef"],"sources":["C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-spectrum\\image\\dist\\packages\\@adobe\\spectrum-css-temp\\components\\image\\vars.css","C:\\Users\\ev3rg\\OneDrive\\Documents\\GitHub\\gt-bigdata-website\\node_modules\\@react-spectrum\\image\\dist\\packages\\@react-spectrum\\image\\src\\Image.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React from 'react';\nimport {SpectrumImageProps} from '@react-types/image';\nimport styles from '@adobe/spectrum-css-temp/components/image/vars.css';\nimport {useProviderProps} from '@react-spectrum/provider';\n\n// incomplete component for show right now\n\nfunction Image(props: SpectrumImageProps, ref: DOMRef<HTMLDivElement>) {\n  /* Slots should be able to pass an alt for default behavior, but in Images, the child may know better. */\n  let userProvidedAlt = props.alt;\n  props = useSlotProps(props, 'image');\n  props = useProviderProps(props);\n  let {\n    objectFit,\n    src,\n    alt,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  if (alt == null) {\n    console.warn(\n      'The `alt` prop was not provided to an image. ' +\n      'Add `alt` text for screen readers, or set `alt=\"\"` prop to indicate that the image ' +\n      'is decorative or redundant with displayed text and should not be announced by screen readers.'\n    );\n  }\n\n  return (\n    <div\n      {...filterDOMProps(props)}\n      {...styleProps}\n      className={classNames(styles, styleProps.className)}\n      style={{\n        ...styleProps.style,\n        overflow: 'hidden'\n      }}\n      ref={domRef}>\n      <img\n        src={src}\n        alt={userProvidedAlt || alt}\n        style={{objectFit}}\n        className={classNames(styles, 'spectrum-Image-img')} />\n    </div>\n  );\n}\n\n/**\n * Image is used to insert and display an image within a component.\n */\nconst _Image = React.forwardRef(Image);\nexport {_Image as Image};\n"]},"metadata":{},"sourceType":"module"}